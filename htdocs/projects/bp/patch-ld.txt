diff -p -u ldlang.c.~1~ ldlang.c
--- ldlang.c.~1~	Mon Feb 21 05:01:27 2000
+++ ldlang.c	Mon Jul 31 17:03:36 2000
@@ -135,6 +135,7 @@ static void ignore_bfd_errors PARAMS ((c
 static void lang_check PARAMS ((void));
 static void lang_common PARAMS ((void));
 static boolean lang_one_common PARAMS ((struct bfd_link_hash_entry *, PTR));
+static void lang_one_common_high_bound PARAMS ((struct bfd_link_hash_entry *, bfd_vma));
 static void lang_place_orphans PARAMS ((void));
 static int topower PARAMS ((int));
 static void lang_set_startof PARAMS ((void));
@@ -3520,6 +3521,9 @@ lang_one_common (h, info)
   h->u.def.section = section;
   h->u.def.value = section->_cooked_size;
 
+  /* Synthesize a definition for <symname>.high_bound.  */
+  lang_one_common_high_bound (h, size);
+
   /* Increase the size of the section.  */
   section->_cooked_size += size;
 
@@ -3576,6 +3580,29 @@ lang_one_common (h, info)
     }
 
   return true;
+}
+
+/*
+Synthesize a definition for the symbol <symname>.high_bound,
+which might be needed if the user has enabled bounds checking.
+*/
+
+static void
+lang_one_common_high_bound (h, size)
+      struct bfd_link_hash_entry *h;
+      bfd_vma size;
+{
+  static char extsuff[] = ".high_bound";
+  char *extname = xmalloc (sizeof (extsuff) + strlen (h->root.string));
+  struct bfd_link_hash_entry *exth;
+  sprintf (extname, "%s%s", h->root.string, extsuff);
+  exth = bfd_link_hash_lookup (link_info.hash, extname, false, false, true);
+  if (exth)
+    {
+      exth->type = bfd_link_hash_defined;
+      exth->u.def.section = h->u.def.section;
+      exth->u.def.value = h->u.def.value + size;
+    }
 }
 
 /*
