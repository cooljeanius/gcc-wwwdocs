--- /home/tromey/gnu/Nightly/classpath/classpath/java/util/Collection.java	2004-07-30 02:31:35.000000000 -0600
+++ java/util/Collection.java	2002-01-22 16:01:39.000000000 -0700
@@ -94,8 +94,6 @@
    *   support the add operation.
    * @throws ClassCastException if o cannot be added to this collection due
    *   to its type.
-   * @throws NullPointerException if o is null and this collection doesn't
-   *   support the addition of null values.
    * @throws IllegalArgumentException if o cannot be added to this
    *   collection for some other reason.
    */
@@ -110,9 +108,6 @@
    *   support the addAll operation.
    * @throws ClassCastException if some element of c cannot be added to this
    *   collection due to its type.
-   * @throws NullPointerException if some element of c is null and this
-   *   collection does not support the addition of null values.
-   * @throws NullPointerException if c itself is null.
    * @throws IllegalArgumentException if some element of c cannot be added
    *   to this collection for some other reason.
    */
@@ -134,10 +129,6 @@
    * @param o the element to look for.
    * @return true if this collection contains at least one element e such that
    *   <code>o == null ? e == null : o.equals(e)</code>.
-   * @throws ClassCastException if the type of o is not a valid type for this
-   *   collection.
-   * @throws NullPointerException if o is null and this collection doesn't
-   *   support null values.
    */
   boolean contains(Object o);
 
@@ -146,11 +137,6 @@
    *
    * @param c the collection to test for.
    * @return true if for every element o in c, contains(o) would return true.
-   * @throws ClassCastException if the type of any element in c is not a valid
-   *   type for this collection.
-   * @throws NullPointerException if some element of c is null and this
-   *   collection does not support null values.
-   * @throws NullPointerException if c itself is null.
    */
   boolean containsAll(Collection c);
 
@@ -212,10 +198,6 @@
    *   if the collection contained at least one occurrence of o.
    * @throws UnsupportedOperationException if this collection does not
    *   support the remove operation.
-   * @throws ClassCastException if the type of o is not a valid type
-   *   for this collection.
-   * @throws NullPointerException if o is null and the collection doesn't
-   *   support null values.
    */
   boolean remove(Object o);
 
@@ -226,11 +208,6 @@
    * @return true if this collection was modified as a result of this call.
    * @throws UnsupportedOperationException if this collection does not
    *   support the removeAll operation.
-   * @throws ClassCastException if the type of any element in c is not a valid
-   *   type for this collection.
-   * @throws NullPointerException if some element of c is null and this
-   *   collection does not support removing null values.
-   * @throws NullPointerException if c itself is null.
    */
   boolean removeAll(Collection c);
 
@@ -241,11 +218,6 @@
    * @return true if this collection was modified as a result of this call.
    * @throws UnsupportedOperationException if this collection does not
    *   support the retainAll operation.
-   * @throws ClassCastException if the type of any element in c is not a valid
-   *   type for this collection.
-   * @throws NullPointerException if some element of c is null and this
-   *   collection does not support retaining null values.
-   * @throws NullPointerException if c itself is null.
    */
   boolean retainAll(Collection c);
 
