--- /home/tromey/gnu/Nightly/classpath/classpath/javax/swing/GrayFilter.java	2002-03-12 04:36:22.000000000 -0700
+++ javax/swing/GrayFilter.java	2004-06-18 02:18:51.000000000 -0600
@@ -45,41 +45,41 @@
 
 public class GrayFilter extends RGBImageFilter
 {
-    private boolean b;
-    private int p;
+  private boolean b;
+  private int p;
 
-    /**
-       Create a GrayFilter. If b is true then brighten. Also, indicate how much gray.
-       
-       @param b if brighten
-       @param p percent of gray, 0 - 100
-    */
-    public GrayFilter(boolean b, int p)
-    {
-	this.b = b; //FIXME - HANDLE THIS
-	this.p = p;
-    }
-
-    /**
-       Create grayed image
-
-       @param i image to gray
-
-       @return a grayed image
-     */
-    public static Image createDisabledImage(Image src)
-    {
-	return Toolkit.getDefaultToolkit().createImage( new FilteredImageSource(src.getSource(),
-										new GrayFilter(false, 100)));
-    }
-
-    /**
-       Filter RGB to gray
-     */
-    public int filterRGB(int x,
-			 int y,
-			 int rgb)
-    {
-	return (int) ( ( p * ( 0.299 * ( (0xff0000 & rgb) >> 16) + 0.587 * ( (0xff00 & rgb) >> 8 ) + 0.114 * (0xff & rgb ) ) ));
-    }
+  /**
+   * Create a GrayFilter. If b is true then brighten. Also, indicate how much gray.
+   *    
+   * @param b if brighten
+   * @param p percent of gray, 0 - 100
+   */
+  public GrayFilter(boolean b, int p)
+  {
+    this.b = b; //FIXME - HANDLE THIS
+    this.p = p;
+  }
+
+  /**
+   * Create grayed image
+   *
+   * @param src image to gray
+   *
+   * @return a grayed image
+   */
+  public static Image createDisabledImage(Image src)
+  {
+    return (Toolkit.getDefaultToolkit().
+	    createImage(new FilteredImageSource(src.getSource(),
+						new GrayFilter(false, 100))));
+  }
+  
+  /**
+   * Filter RGB to gray
+   */
+  public int filterRGB(int x, int y, int rgb)
+  {
+    return (int) (p * (0.299 * ((0xff0000 & rgb) >> 16)
+		       + 0.587 * ((0xff00 & rgb) >> 8) + 0.114 * (0xff & rgb)));
+  }
 }
