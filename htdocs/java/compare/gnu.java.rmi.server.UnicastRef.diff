--- /home/tromey/gnu/classpath/classpath/gnu/java/rmi/server/UnicastRef.java	Sat Mar 23 09:42:53 2002
+++ gnu/java/rmi/server/UnicastRef.java	Mon Jul 15 10:48:21 2002
@@ -107,7 +107,6 @@
 		objid.write(out);
 		out.writeInt(opnum);
 		out.writeLong(hash);
-		/*
 		if (params != null) {
 			for (int i = 0; i < params.length; i++) {
 				if (params[i] instanceof UnicastRemoteObject) {
@@ -118,11 +117,6 @@
 				}
 			}
 		}
-		*/
-		// must handle primitive class and their wrapper classes
-		Class clss[] = method.getParameterTypes();
-	    for(int i = 0; i < clss.length; i++)
-	        ((RMIObjectOutputStream)out).writeValue(params[i], clss[i]);
 
 		out.flush();
 	}
@@ -145,25 +139,12 @@
 
 		returncode = in.readUnsignedByte();
 		ack = UID.read(in);
-		//returnval = in.readObject();
-		Class cls = method.getReturnType();
-        if(cls == Void.TYPE){
-            returnval = null;
-        }else
-            returnval = ((RMIObjectInputStream)in).readValue(cls);
+		returnval = in.readObject();
 	}
 	catch (IOException e3) {
 		throw new RemoteException("call return failed: ", e3);
 	}
 
-    /* if DGCAck is necessary
-    //According to RMI wire protocol, send a DGCAck 
-    // to indicate receiving return value
-    dout.writeByte(MESSAGE_DGCACK);
-    ack.write(dout);
-    out.flush();
-    */
-    
 	manager.discardConnection(conn);
 
 	if (returncode != RETURN_ACK) {
@@ -202,16 +183,13 @@
 	}
 	manager.write(out);
 	objid.write(out);
-	// This byte is somewhat confusing when interoperating with JDK
-	out.writeByte(0); //RETURN_ACK);
+	out.writeByte(RETURN_ACK);
 }
 
 public void readExternal(ObjectInput in) throws IOException, ClassNotFoundException {
 	manager = UnicastConnectionManager.read(in);
 	objid = ObjID.read(in);
-	byte ack = in.readByte();
-	// This byte is somewhat confusing when interoperating with JDK
-	if (ack != RETURN_ACK && ack != 0/*jdk ack value*/) {
+	if (in.readByte() != RETURN_ACK) {
 		throw new IOException("no ack found");
 	}
 }
