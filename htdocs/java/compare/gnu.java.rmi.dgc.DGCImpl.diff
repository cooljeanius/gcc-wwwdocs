--- /home/tromey/gnu/classpath/classpath/gnu/java/rmi/dgc/DGCImpl.java	Thu Oct 31 12:43:09 2002
+++ gnu/java/rmi/dgc/DGCImpl.java	Mon Sep 30 16:11:05 2002
@@ -1,5 +1,5 @@
 /*
-  Copyright (c) 1996, 1997, 1998, 1999, 2002 Free Software Foundation, Inc.
+  Copyright (c) 1996, 1997, 1998, 1999 Free Software Foundation, Inc.
 
 This file is part of GNU Classpath.
 
@@ -46,73 +46,24 @@
 import java.rmi.server.RMISocketFactory;
 import gnu.java.rmi.server.UnicastServerRef;
 
-import java.util.Hashtable;
-
-/**
-  * I let DGCImpl to extend UnicastServerRef, but not 
-  * UnicastRemoteObject, because UnicastRemoteObject must
-  * exportObject automatically.
-  */
 public class DGCImpl
-    extends UnicastServerRef implements DGC {
+	extends UnicastRemoteObject implements DGC {
 
-    private static final long LEASE_VALUE = 600000L;
-    // leaseCache caches a LeaseRecord associated with a vmid
-    private Hashtable leaseCache = new Hashtable();
+private static final long leaseValue = 600000L;
 
 public DGCImpl() throws RemoteException {
-    	super(new ObjID(ObjID.DGC_ID), 0, RMISocketFactory.getSocketFactory());
+	super(new UnicastServerRef(new ObjID(ObjID.DGC_ID), 0, RMISocketFactory.getSocketFactory()));
 }
 
 public Lease dirty(ObjID[] ids, long sequenceNum, Lease lease) throws RemoteException {
 	VMID vmid = lease.getVMID();
-    	if (vmid == null)
-    	    vmid = new VMID();
-    	long leaseValue = LEASE_VALUE;
-    	//long leaseValue = lease.getValue();
     lease = new Lease(vmid, leaseValue);
-        synchronized(leaseCache){
-            LeaseRecord lr = (LeaseRecord)leaseCache.get(vmid);
-            if (lr != null)
-                lr.reset(leaseValue);
-            else{
-                lr = new LeaseRecord(vmid, leaseValue);
-                leaseCache.put(vmid, lr);
-            }
-        }
-        
+	System.out.println("DGCImpl.dirty - not completely implemented");
 	return (lease);
 }
 
 public void clean(ObjID[] ids, long sequenceNum, VMID vmid, boolean strong) throws RemoteException {
-  // Not implemented
+	System.out.println("DGCImpl.clean - not implemented");
 }
-    
-  /**
-   * LeaseRecord associates a vmid to expireTime.
-   */
-  private static class LeaseRecord{
-    private VMID vmid;
-    private long expireTime;
-    
-    LeaseRecord(VMID vmid, long leaseValue){
-      this.vmid = vmid;
-      reset(leaseValue);
-    }
-    
-    // reset expireTime
-    void reset(long leaseValue){
-      long l = System.currentTimeMillis();
-      expireTime = l + leaseValue;
-    }
-
-    boolean isExpired(){
-      long l = System.currentTimeMillis();
-      if ( l > expireTime)
-	return true;
-      return false;
-    }
-        
-  } //End of LeaseRecord
 
-} //End of DGCImpl
+}
