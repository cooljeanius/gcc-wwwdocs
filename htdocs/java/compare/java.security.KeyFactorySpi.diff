--- /home/tromey/gnu/egcs/classpath/classpath/java/security/KeyFactorySpi.java	Wed Mar 22 12:26:19 2000
+++ java/security/KeyFactorySpi.java	Wed Apr 25 09:45:12 2001
@@ -7,7 +7,7 @@
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation; either version 2, or (at your option)
 any later version.
- 
+
 GNU Classpath is distributed in the hope that it will be useful, but
 WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
@@ -24,7 +24,6 @@
 This exception does not however invalidate any other reasons why the
 executable file might be covered by the GNU General Public License. */
 
-
 package java.security;
 import java.security.spec.KeySpec;
 import java.security.spec.InvalidKeySpecException;
@@ -33,30 +32,30 @@
    KeyFactorySpi is the Service Provider Interface (SPI) for the 
    KeyFactory class. This is the interface for providers to 
    supply to implement a key factory for an algorithm.
-   
+
    Key factories are used to convert keys (opaque cryptographic 
    keys of type Key) into key specifications (transparent 
    representations of the underlying key material).
-   
+
    Key factories are bi-directional. They allow a key class 
    to be converted into a key specification (key material) and
    back again.
-   
+
    For example DSA public keys can be specified as 
    DSAPublicKeySpec or X509EncodedKeySpec. The key factory
    translate these key specifications. 
-   
+
    @since JDK 1.2
    @author Mark Benvenuto
-*/
+ */
 public abstract class KeyFactorySpi
 {
-
   /**
      Constucts a new KeyFactorySpi.
-  */
+   */
   public KeyFactorySpi()
-  {}
+  {
+  }
 
   /**
      Generates a public key from the provided key specification.
@@ -67,7 +66,7 @@
 
      @throws InvalidKeySpecException invalid key specification for
      this key factory to produce a public key
-  */
+   */
   protected abstract PublicKey engineGeneratePublic(KeySpec keySpec)
     throws InvalidKeySpecException;
 
@@ -81,7 +80,7 @@
 
      @throws InvalidKeySpecException invalid key specification for
      this key factory to produce a private key
-  */
+   */
   protected abstract PrivateKey engineGeneratePrivate(KeySpec keySpec)
     throws InvalidKeySpecException;
 
@@ -100,7 +99,7 @@
      @throws InvalidKeySpecException the requested key specification
      is inappropriate for this key or the key is 
      unrecognized.
-  */
+   */
   protected abstract KeySpec engineGetKeySpec(Key key, Class keySpec)
     throws InvalidKeySpecException;
 
@@ -115,7 +114,7 @@
 
      @throws InvalidKeySpecException if the key cannot be 
      processed by this key factory
-  */
+   */
   protected abstract Key engineTranslateKey(Key key)
     throws InvalidKeyException;
 }
