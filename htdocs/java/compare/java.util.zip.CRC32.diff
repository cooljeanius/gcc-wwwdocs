--- /home/tromey/gnu/egcs/classpath/classpath/java/util/zip/CRC32.java	Fri Sep  7 06:44:14 2001
+++ java/util/zip/CRC32.java	Fri Nov 17 14:42:28 2000
@@ -1,14 +1,14 @@
-/* java.util.zip.CRC32
-   Copyright (C) 2001 Free Software Foundation, Inc.
+/* CRC32.java - Computes CRC32 data checksum of a data stream
+   Copyright (C) 1999, 2000 Free Software Foundation, Inc.
 
-This file is part of Jazzlib.
+This file is part of GNU Classpath.
 
-Jazzlib is free software; you can redistribute it and/or modify
+GNU Classpath is free software; you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation; either version 2, or (at your option)
 any later version.
-
-Jazzlib is distributed in the hope that it will be useful, but
+ 
+GNU Classpath is distributed in the hope that it will be useful, but
 WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 General Public License for more details.
@@ -41,7 +41,7 @@
  * streams.
  *
  * @see InflaterInputStream
- * @see DeflaterOutputStream
+ * @see InflaterOutputStream
  *
  * @author Per Bothner
  * @date April 1, 1999.
@@ -55,7 +55,7 @@
   private static int[] crc_table = make_crc_table();
 
   /** Make the table for a fast CRC. */
-  private static int[] make_crc_table()
+  private static int[] make_crc_table ()
   {
     int[] crc_table = new int[256];
     for (int n = 0; n < 256; n++)
@@ -76,7 +76,7 @@
   /**
    * Returns the CRC32 data checksum computed so far.
    */
-  public long getValue()
+  public long getValue ()
   {
     return (long) crc & 0xffffffffL;
   }
@@ -84,16 +84,9 @@
   /**
    * Resets the CRC32 data checksum as if no update was ever called.
    */
-  public void reset() { crc = 0; }
-
-  /**
-   * Updates the checksum with the int bval. 
-   *
-   * @param bval (the byte is taken as the lower 8 bits of bval)
-   *
-   */
+  public void reset () { crc = 0; }
 
-  public void update(int bval)
+  public void update (int bval)
   {
     int c = ~crc;
     c = crc_table[(c ^ bval) & 0xff] ^ (c >>> 8);
@@ -107,7 +100,7 @@
    * @param off the offset in the buffer where the data starts
    * @param len the length of the data
    */
-  public void update(byte[] buf, int off, int len)
+  public void update (byte[] buf, int off, int len)
   {
     int c = ~crc;
     while (--len >= 0)
@@ -118,5 +111,5 @@
   /**
    * Adds the complete byte array to the data checksum.
    */
-  public void update(byte[] buf) { update(buf, 0, buf.length); }
+  public void update (byte[] buf) { update(buf, 0, buf.length); }
 }
