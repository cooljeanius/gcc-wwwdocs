--- /home/tromey/gnu/Nightly/classpath/classpath/native/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkComponentPeer.c	2004-04-18 02:22:35.000000000 -0600
+++ jni/gtk-peer/gnu_java_awt_peer_gtk_GtkComponentPeer.c	2004-04-17 02:18:08.000000000 -0600
@@ -1,5 +1,5 @@
 /* gtkcomponentpeer.c -- Native implementation of GtkComponentPeer
-   Copyright (C) 1998, 1999, 2002, 2004 Free Software Foundation, Inc.
+   Copyright (C) 1998, 1999, 2002 Free Software Foundation, Inc.
 
 This file is part of GNU Classpath.
 
@@ -136,7 +136,7 @@
   ptr = NSA_GET_PTR (env, obj);
   
   gdk_threads_enter ();
-  /* XXX gtk_widget_grab_focus (GTK_WIDGET (ptr)); */
+  // gtk_widget_grab_focus (GTK_WIDGET (ptr));
   gdk_threads_leave ();
 }
 
@@ -610,12 +610,10 @@
 gboolean
 filter_expose_event_handler (GtkWidget *widget, GdkEvent *event, jobject peer)
 {
-  /*
-   * Prevent the default event handler from getting this signal if applicable
-   * FIXME: I came up with these filters by looking for patterns in the unwanted
-   *        expose events that are fed back to us from gtk/X. Perhaps there is
-   *        a way to prevent them from occuring in the first place.
-   */
+  // Prevent the default event handler from getting this signal if applicable
+  // FIXME: I came up with these filters by looking for patterns in the unwanted
+  //        expose events that are fed back to us from gtk/X. Perhaps there is
+  //        a way to prevent them from occuring in the first place.
   if (event->type == GDK_EXPOSE && (!GTK_IS_LAYOUT(widget)
                                     || event->any.window != widget->window))
     {
@@ -624,8 +622,8 @@
     }
   else
     {
-      /* There may be non-expose events that are triggered while we're
-        painting a heavyweight peer. */
+      // There may be non-expose events that are triggered while we're
+      // painting a heavyweight peer.
       return pre_event_handler(widget, event, peer);
     }
 }
@@ -643,8 +641,8 @@
 
   gdk_threads_enter ();
 
-  /* GtkFramePeer is built as a GtkLayout inside a GtkVBox inside a GtkWindow.
-     Events go to the GtkLayout layer, so we filter them there. */
+  // GtkFramePeer is built as a GtkLayout inside a GtkVBox inside a GtkWindow.
+  // Events go to the GtkLayout layer, so we filter them there.
   if (GTK_IS_WINDOW(ptr))
     {
       children = gtk_container_get_children(GTK_CONTAINER(ptr));
@@ -687,8 +685,8 @@
 
   gdk_threads_enter ();
 
-  /* GtkFramePeer is built as a GtkLayout inside a GtkVBox inside a GtkWindow.
-     Events go to the GtkLayout layer, so we filter them there. */
+  // GtkFramePeer is built as a GtkLayout inside a GtkVBox inside a GtkWindow.
+  // Events go to the GtkLayout layer, so we filter them there.
   if (GTK_IS_WINDOW(ptr))
     {
       children = gtk_container_get_children(GTK_CONTAINER(ptr));
