--- /home/tromey/gnu/Nightly/classpath/classpath/java/io/ObjectInputValidation.java	Mon Apr  7 02:24:27 2003
+++ java/io/ObjectInputValidation.java	Sun Mar 23 02:18:02 2003
@@ -39,27 +39,16 @@
 package java.io; 
 
 /**
-  * This class allows an object to validate that it is valid after
-  * deserialization has run completely for it and all dependent objects.
-  * This allows an object to determine if it is invalid even if all
-  * state data was correctly deserialized from the stream.  It can also
-  * be used to perform re-initialization type activities on an object
-  * after it has been completely deserialized.
-  *
-  * Since this method functions as a type of callback, it must be 
-  * registered through <code>ObjectInputStream.registerValidation</code>
-  * in order to be invoked.  This is typically done in the
-  * <code>readObject</code> method.
+  * What does this interface really do?
   *
   * @author Aaron M. Renn (arenn@urbanophile.com)
-  *
-  * @see ObjectInputStream#registerValidation
   */
 public interface ObjectInputValidation
 {
+
   /**
-    * This method is called to validate an object after serialization
-    * is complete.  If the object is invalid an exception is thrown.
+    * This method is called to validate an object.  If the object is invalid
+    * an exception is thrown.
     *
     * @exception InvalidObjectException If the object is invalid
     */
