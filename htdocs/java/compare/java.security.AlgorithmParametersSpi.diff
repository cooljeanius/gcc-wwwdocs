--- /home/tromey/gnu/egcs/classpath/classpath/java/security/AlgorithmParametersSpi.java	Wed Mar 22 12:26:19 2000
+++ java/security/AlgorithmParametersSpi.java	Wed Apr 25 09:45:12 2001
@@ -7,7 +7,7 @@
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation; either version 2, or (at your option)
 any later version.
- 
+
 GNU Classpath is distributed in the hope that it will be useful, but
 WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
@@ -24,7 +24,6 @@
 This exception does not however invalidate any other reasons why the
 executable file might be covered by the GNU General Public License. */
 
-
 package java.security;
 import java.security.spec.InvalidParameterSpecException;
 import java.security.spec.AlgorithmParameterSpec;
@@ -37,15 +36,15 @@
 
    @since JDK 1.2
    @author Mark Benvenuto
-*/
+ */
 public abstract class AlgorithmParametersSpi
 {
-
   /**
      Creates a new instance of AlgorithmParametersSpi
-  */
+   */
   public AlgorithmParametersSpi()
-  {}
+  {
+  }
 
   /**
      Initializes the engine with the specified 
@@ -54,9 +53,9 @@
      @param paramSpec A AlgorithmParameterSpec to initialize with
 
      @throws InvalidParameterSpecException For an inapporiate ParameterSpec class
-  */
-  protected abstract void engineInit(AlgorithmParameterSpec paramSpec) throws InvalidParameterSpecException;
-
+   */
+  protected abstract void engineInit(AlgorithmParameterSpec paramSpec) throws
+    InvalidParameterSpecException;
 
   /**
      Initializes the engine with the specified 
@@ -66,10 +65,10 @@
      IOException.
 
      @param params Parameters to initialize with
-	
+
      @throws IOException Decoding Error
-  */
-  protected abstract void engineInit(byte[] params) throws IOException;
+   */
+  protected abstract void engineInit(byte[]params) throws IOException;
 
   /**
      Initializes the engine with the specified 
@@ -81,10 +80,11 @@
 
      @param params Parameters to initialize with
      @param format Name of decoding format to use
-	
+
      @throws IOException Decoding Error
-  */
-  protected abstract void engineInit(byte[] params, String format) throws IOException;
+   */
+  protected abstract void engineInit(byte[]params,
+				     String format) throws IOException;
 
 
   /**
@@ -95,10 +95,12 @@
      @param paramSpec Class to return AlgorithmParameters in
 
      @return the parameter specification
-	
+
      @throws InvalidParameterSpecException if the paramSpec is an invalid parameter class
-  */
-  protected abstract AlgorithmParameterSpec engineGetParameterSpec(Class paramSpec) throws InvalidParameterSpecException;
+   */
+  protected abstract AlgorithmParameterSpec engineGetParameterSpec(Class
+								   paramSpec)
+    throws InvalidParameterSpecException;
 
 
   /**
@@ -107,7 +109,7 @@
      for the specified type.
 
      @return byte array representing the parameters
-  */
+   */
   protected abstract byte[] engineGetEncoded() throws IOException;
 
 
@@ -118,14 +120,15 @@
      if it exists for the specified type.
 
      @return byte array representing the parameters
-  */
-  protected abstract byte[] engineGetEncoded(String format) throws IOException;
+   */
+  protected abstract byte[] engineGetEncoded(String format) throws
+    IOException;
 
   /**
      Returns a string describing the parameters in the 
      AlgorithmParametersSpi class.
 
      @return A string representing the format of the parameters.
-  */
+   */
   protected abstract String engineToString();
 }
