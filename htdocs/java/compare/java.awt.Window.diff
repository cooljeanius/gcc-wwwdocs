--- /home/tromey/gnu/egcs/classpath/classpath/java/awt/Window.java	Thu May  9 19:18:48 2002
+++ java/awt/Window.java	Sun Mar 10 13:52:37 2002
@@ -1,5 +1,6 @@
-/* Window.java --
-   Copyright (C) 1999, 2000, 2002 Free Software Foundation
+/* Copyright (C) 1999, 2000, 2002  Free Software Foundation
+
+   Copyright (C) 1999 Free Software Foundation, Inc.
 
 This file is part of GNU Classpath.
 
@@ -35,9 +36,7 @@
 obligated to do so.  If you do not wish to do so, delete this
 exception statement from your version. */
 
-
 package java.awt;
-
 import java.awt.event.WindowEvent;
 import java.awt.event.WindowListener;
 import java.awt.peer.WindowPeer;
@@ -146,8 +145,8 @@
   public void addNotify()
   {
     if (peer == null)
-      peer = getToolkit().createWindow(this);
-    super.addNotify();
+      peer = getToolkit ().createWindow (this);
+    super.addNotify ();
   }
 
   /**
@@ -172,7 +171,7 @@
   /**
    * Makes this window visible and brings it to the front.
    */
-  public void show()
+  public void show ()
   {
     if (peer == null)
       addNotify();
@@ -207,12 +206,12 @@
    * Sends this window to the back so that all other windows display in
    * front of it.
    */
-  public void toBack()
+  public void toBack ()
   {
     if (peer != null)
       {
 	WindowPeer wp = (WindowPeer) peer;
-	wp.toBack();
+	wp.toBack ();
       }
   }
 
@@ -220,12 +219,12 @@
    * Brings this window to the front so that it displays in front of
    * any other windows.
    */
-  public void toFront()
+  public void toFront ()
   {
     if (peer != null)
       {
 	WindowPeer wp = (WindowPeer) peer;
-	wp.toFront();
+	wp.toFront ();
       }
   }
 
@@ -239,7 +238,7 @@
    */
   public Toolkit getToolkit()
   {
-    return Toolkit.getDefaultToolkit();    
+    return Toolkit.getDefaultToolkit ();    
   }
 
   /**
@@ -271,9 +270,9 @@
    *
    * @return The locale this window is configured for.
    */
-  public Locale getLocale()
+  public Locale getLocale ()
   {
-    return locale == null ? Locale.getDefault() : locale;
+    return locale == null ? Locale.getDefault () : locale;
   }
 
   /*
@@ -313,9 +312,9 @@
    *
    * @param listener The <code>WindowListener</code> to add.
    */
-  public synchronized void addWindowListener(WindowListener listener)
+  public synchronized void addWindowListener (WindowListener listener)
   {
-    windowListener = AWTEventMulticaster.add(windowListener, listener);
+    windowListener = AWTEventMulticaster.add (windowListener, listener);
   }
 
   /**
@@ -324,24 +323,17 @@
    *
    * @param listener The <code>WindowListener</code> to remove.
    */
-  public synchronized void removeWindowListener(WindowListener listener)
-  {
-    windowListener = AWTEventMulticaster.remove(windowListener, listener);
-  }
-
-  public synchronized WindowListener[] getWindowListeners()
+  public synchronized void removeWindowListener (WindowListener listener)
   {
-    return (WindowListener[])
-      AWTEventMulticaster.getListeners(windowListener,
-                                       WindowListener.class);
+    windowListener = AWTEventMulticaster.remove (windowListener, listener);
   }
 
   /** @since 1.3 */
   public EventListener[] getListeners(Class listenerType)
   {
     if (listenerType == WindowListener.class)
-      return getWindowListeners();
-    return super.getListeners(listenerType);
+      return getListenersImpl(listenerType, windowListener);
+    else return super.getListeners(listenerType);
   }
 
   void dispatchEventImpl(AWTEvent e)
@@ -364,12 +356,12 @@
    *
    * @param event The event to process.
    */
-  protected void processEvent(AWTEvent evt)
+  protected void processEvent (AWTEvent evt)
   {
     if (evt instanceof WindowEvent)
-      processWindowEvent((WindowEvent) evt);
+      processWindowEvent ((WindowEvent) evt);
     else
-      super.processEvent(evt);
+      super.processEvent (evt);
   }
 
   /**
@@ -380,32 +372,32 @@
    *
    * @param event The event to process.
    */
-  protected void processWindowEvent(WindowEvent evt)
+  protected void processWindowEvent (WindowEvent evt)
   {
     if (windowListener != null)
       {
-	switch (evt.getID())
+	switch (evt.getID ())
 	  {
 	  case WindowEvent.WINDOW_ACTIVATED:
-	    windowListener.windowActivated(evt);
+	    windowListener.windowActivated (evt);
 	    break;
 	  case WindowEvent.WINDOW_CLOSED:
-	    windowListener.windowClosed(evt);
+	    windowListener.windowClosed (evt);
 	    break;
 	  case WindowEvent.WINDOW_CLOSING:
-	    windowListener.windowClosing(evt);
+	    windowListener.windowClosing (evt);
 	    break;
 	  case WindowEvent.WINDOW_DEACTIVATED:
-	    windowListener.windowDeactivated(evt);
+	    windowListener.windowDeactivated (evt);
 	    break;
 	  case WindowEvent.WINDOW_DEICONIFIED:
-	    windowListener.windowDeiconified(evt);
+	    windowListener.windowDeiconified (evt);
 	    break;
 	  case WindowEvent.WINDOW_ICONIFIED:
-	    windowListener.windowIconified(evt);
+	    windowListener.windowIconified (evt);
 	    break;
 	  case WindowEvent.WINDOW_OPENED:
-	    windowListener.windowOpened(evt);
+	    windowListener.windowOpened (evt);
 	    break;
 	  }
       }
