--- /home/tromey/gnu/Nightly/classpath/classpath/java/text/CollationKey.java	2004-01-07 02:20:41.000000000 -0700
+++ java/text/CollationKey.java	2003-10-16 02:17:56.000000000 -0600
@@ -66,11 +66,6 @@
 public final class CollationKey implements Comparable
 {
   /**
-   * This is the <code>Collator</code> this object was created from.
-   */
-  private Collator collator;
-
-  /**
    * This is the <code>String</code> this object represents.
    */
   private String originalText;
@@ -78,13 +73,23 @@
   /**
    * This is the bit value for this key.
    */
-  private byte[] key;
+  private int[] key;
 
-  CollationKey (Collator collator, String originalText, byte[] key)
+  CollationKey (CollationElementIterator iter, String originalText,
+		int strength)
   {
-    this.collator = collator;
     this.originalText = originalText;
-    this.key = key;
+
+    // Compute size of required array.
+    int size = 0;
+    while (RuleBasedCollator.next(iter, strength)
+	   != CollationElementIterator.NULLORDER)
+      ++size;
+
+    iter.reset();
+    key = new int[size];
+    for (int i = 0; i < size; i++)
+      key[i] = RuleBasedCollator.next(iter, strength);
   }
 
   /**
@@ -148,14 +153,12 @@
 
     CollationKey ck = (CollationKey) obj;
 
-    if (!ck.collator.equals (collator))
+    if (key.length != ck.key.length)
       return false;
 
-    if (!ck.getSourceString ().equals (getSourceString ()))
-      return false;
-
-    if (!ck.toByteArray ().equals (toByteArray ()))
-      return false;
+    for (int i = 0; i < key.length; ++i)
+      if (key[i] != ck.key[i])
+	return false;
 
     return true;
   }
@@ -194,6 +197,15 @@
    */
   public byte[] toByteArray()
   {
-    return key;
+    byte[] r = new byte[4 * key.length];
+    int off = 0;
+    for (int i = 0; i < key.length; ++i)
+      {
+	r[off++] = (byte) ((key[i] >>> 24) & 255);
+	r[off++] = (byte) ((key[i] >>> 16) & 255);
+	r[off++] = (byte) ((key[i] >>>  8) & 255);
+	r[off++] = (byte) ((key[i]       ) & 255);
+      }
+    return r;
   }
 }
