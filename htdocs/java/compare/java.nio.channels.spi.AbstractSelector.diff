--- /home/tromey/gnu/classpath/classpath/java/nio/channels/spi/AbstractSelector.java	Mon Aug 12 11:47:31 2002
+++ java/nio/channels/spi/AbstractSelector.java	Fri Nov  1 05:03:39 2002
@@ -1,4 +1,4 @@
-/* AbstractSelector.java
+/* AbstractSelector.java -- 
    Copyright (C) 2002 Free Software Foundation, Inc.
 
 This file is part of GNU Classpath.
@@ -35,56 +35,66 @@
 obligated to do so.  If you do not wish to do so, delete this
 exception statement from your version. */
 
-
 package java.nio.channels.spi;
 
-import java.nio.channels.*;
-import java.util.*;
-
+import java.nio.channels.SelectionKey;
+import java.nio.channels.Selector;
+import java.util.List;
+import java.util.Set;
 
 public abstract class AbstractSelector extends Selector
 {
-    boolean closed = true;
-    SelectorProvider provider;
+  boolean closed = true;
+  SelectorProvider provider;
 
-    protected AbstractSelector(SelectorProvider provider)
-    {
-	this.provider = provider;
-    }
+  protected AbstractSelector(SelectorProvider provider)
+  {
+    this.provider = provider;
+  }
  
-
-    protected  void begin()
-    {
-    }
-
-    public void close()
-    {
-	if (closed)
-	    return;
-	closed = true;
-	implCloseSelector();
-    }
-
-    protected  void deregister(AbstractSelectionKey key)
-    {
-	cancelledKeys().remove(key);
-    }
+  protected final void begin()
+  {
+  }
+
+  /**
+   * @exception IOException If an error occurs
+   */
+  public final void close()
+  {
+    if (closed)
+      return;
+    closed = true;
+    implCloseSelector();
+  }
+
+  protected final void deregister(AbstractSelectionKey key)
+  {
+    cancelledKeys().remove(key);
+  }
     
-    protected  void end()
-    {
-    }
+  protected final void end()
+  {
+  }
     
+  public final boolean isOpen()
+  {
+    return ! closed;
+  }
     
-    public final boolean isOpen()
-    {
-	return ! closed;
-    }
+  public final SelectorProvider provider()
+  {
+    return provider;
+  }
     
-    public SelectorProvider provider()
-    {
-	return provider;
-    }
-
-    protected abstract  void implCloseSelector();	
-    protected abstract  SelectionKey register(AbstractSelectableChannel ch, int ops, Object att);   
+  protected final Set cancelledKeys()
+  {
+    return null;
+  }
+  
+  /**
+   * @exception IOException If an error occurs
+   */
+  protected abstract void implCloseSelector();	
+  
+  protected abstract SelectionKey register(AbstractSelectableChannel ch, int ops, Object att);   
 }
