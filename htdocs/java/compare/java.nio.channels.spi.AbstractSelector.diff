--- /home/tromey/gnu/Nightly/classpath/classpath/java/nio/channels/spi/AbstractSelector.java	2003-06-16 02:24:01.000000000 -0600
+++ java/nio/channels/spi/AbstractSelector.java	2003-10-10 02:18:10.000000000 -0600
@@ -1,5 +1,5 @@
 /* AbstractSelector.java -- 
-   Copyright (C) 2002 Free Software Foundation, Inc.
+   Copyright (C) 2002, 2003 Free Software Foundation, Inc.
 
 This file is part of GNU Classpath.
 
@@ -42,11 +42,13 @@
 import java.nio.channels.SelectionKey;
 import java.nio.channels.Selector;
 import java.util.Set;
+import java.util.HashSet;
 
 public abstract class AbstractSelector extends Selector
 {
-  boolean closed = false;
-  SelectorProvider provider;
+  private boolean closed = false;
+  private SelectorProvider provider;
+  private HashSet cancelledKeys;
 
   /**
    * Initializes the slector.
@@ -54,16 +56,10 @@
   protected AbstractSelector (SelectorProvider provider)
   {
     this.provider = provider;
+    this.cancelledKeys = new HashSet();
   }
  
   /**
-   * Marks the beginning of an I/O operation that might block indefinitely.
-   */
-  protected final void begin ()
-  {
-  }
-
-  /**
    * Closes the channel.
    * 
    * @exception IOException If an error occurs
@@ -73,8 +69,8 @@
     if (closed)
       return;
     
+    implCloseSelector();
     closed = true;
-    implCloseSelector ();
   }
 
   /**
@@ -85,11 +81,16 @@
     return ! closed;
   }
 
-  protected final void deregister (AbstractSelectionKey key)
+  /**
+   * Marks the beginning of an I/O operation that might block indefinitely.
+   */
+  protected final void begin()
   {
-    cancelledKeys ().remove (key);
   }
-    
+
+  /**
+   * Marks the end of an I/O operation that might block indefinitely.
+   */
   protected final void end()
   {
   }
@@ -101,7 +102,12 @@
 
   protected final Set cancelledKeys()
   {
-    return null;
+    return cancelledKeys;
+  }
+
+  final void cancelKey (AbstractSelectionKey key)
+  {
+    cancelledKeys.remove (key);
   }
 
   /**
@@ -111,4 +117,9 @@
 
   protected abstract SelectionKey register (AbstractSelectableChannel ch,
                                             int ops, Object att);   
+
+  protected final void deregister (AbstractSelectionKey key)
+  {
+    // FIXME
+  }
 }
