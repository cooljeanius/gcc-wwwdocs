--- /home/tromey/gnu/Nightly/classpath/classpath/java/util/Collections.java	2004-09-22 02:30:01.000000000 -0600
+++ java/util/Collections.java	2004-04-21 02:18:11.000000000 -0600
@@ -574,26 +574,14 @@
       {
 	ListIterator itr = l.listIterator();
         int i = 0;
-	Object o = itr.next(); // Assumes list is not empty (see isSequential)
-	boolean forward = true;
         while (low <= hi)
           {
             pos = (low + hi) >> 1;
             if (i < pos)
-	      {
-		if (!forward)
-		  itr.next(); // Changing direction first.
-		for ( ; i != pos; i++, o = itr.next());
-		forward = true;
-	      }
+              for ( ; i != pos; i++, itr.next());
             else
-	      {
-		if (forward)
-		  itr.previous(); // Changing direction first.
-		for ( ; i != pos; i--, o = itr.previous());
-		forward = false;
-	      }
-	    final int d = compare(key, o, c);
+              for ( ; i != pos; i--, itr.previous());
+	    final int d = compare(key, itr.next(), c);
 	    if (d == 0)
               return pos;
 	    else if (d < 0)
@@ -1122,8 +1110,6 @@
   public static void rotate(List list, int distance)
   {
     int size = list.size();
-    if (size == 0)
-      return;
     distance %= size;
     if (distance == 0)
       return;
