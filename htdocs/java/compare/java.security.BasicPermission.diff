--- /home/tromey/gnu/Nightly/classpath/classpath/java/security/BasicPermission.java	2003-07-19 02:19:42.000000000 -0600
+++ java/security/BasicPermission.java	2004-08-06 02:20:24.000000000 -0600
@@ -71,9 +71,8 @@
  * @since 1.1
  * @status updated to 1.4
  */
-public abstract class BasicPermission extends java.security.Permission
+public abstract class BasicPermission extends Permission
   implements Serializable
-  // FIXME extends with fully qualified classname as workaround for gcj 3.3.
 {
   /**
    * Compatible with JDK 1.1+.
@@ -81,9 +80,8 @@
   private static final long serialVersionUID = 6279438298436773498L;
 
   /**
-   * Create a new instance with the specified permission name. If the name
-   * is empty, or contains an illegal wildcard character, an exception is
-   * thrown.
+   * Create a new instance with the specified permission name. If the
+   * name is empty an exception is thrown.
    *
    * @param name the name of this permission
    * @throws NullPointerException if name is null
@@ -92,12 +90,11 @@
   public BasicPermission(String name)
   {
     super(name);
-    if (name.indexOf("*") != -1)
-      {
-        if ((! name.endsWith(".*") && ! name.equals("*"))
-            || name.indexOf("*") != name.lastIndexOf("*"))
-          throw new IllegalArgumentException("Bad wildcard: " + name);
-      }
+
+    // This routine used to check for illegal wildcards, but no such
+    // requirement exists in the specification and Sun's runtime
+    // doesn't appear to do it.
+
     if ("".equals(name))
       throw new IllegalArgumentException("Empty name");
   }
