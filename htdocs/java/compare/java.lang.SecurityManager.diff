--- /home/tromey/gnu/Nightly/classpath/classpath/java/lang/SecurityManager.java	2004-10-12 02:18:13.000000000 -0600
+++ java/lang/SecurityManager.java	2004-04-21 02:18:09.000000000 -0600
@@ -45,11 +45,8 @@
 import java.lang.reflect.Member;
 import java.net.InetAddress;
 import java.net.SocketPermission;
-import java.security.AccessControlContext;
-import java.security.AccessController;
 import java.security.AllPermission;
 import java.security.Permission;
-import java.security.PrivilegedAction;
 import java.security.Security;
 import java.security.SecurityPermission;
 import java.util.PropertyPermission;
@@ -310,7 +307,8 @@
    */
   public Object getSecurityContext()
   {
-    return AccessController.getContext();
+    // XXX Should be: return AccessController.getContext();
+    return new SecurityContext(getClassContext());
   }
 
   /**
@@ -325,7 +323,8 @@
    */
   public void checkPermission(Permission perm)
   {
-    AccessController.checkPermission(perm);
+    // XXX Should be: AccessController.checkPermission(perm);
+    throw new SecurityException("Operation not allowed");
   }
 
   /**
@@ -346,9 +345,11 @@
    */
   public void checkPermission(Permission perm, Object context)
   {
-    if (! (context instanceof AccessControlContext))
-      throw new SecurityException("Missing context");
-    ((AccessControlContext) context).checkPermission(perm);
+    // XXX Should be:
+    // if (! (context instanceof AccessControlContext))
+    //   throw new SecurityException("Missing context");
+    // ((AccessControlContext) context).checkPermission(perm);
+    throw new SecurityException("Operation not allowed");
   }
 
   /**
@@ -547,10 +548,12 @@
    */
   public void checkRead(String filename, Object context)
   {
-    if (! (context instanceof AccessControlContext))
-      throw new SecurityException("Missing context");
-    AccessControlContext ac = (AccessControlContext) context;
-    ac.checkPermission(new FilePermission(filename, "read"));
+    // XXX Should be:
+    // if (! (context instanceof AccessControlContext))
+    //   throw new SecurityException("Missing context");
+    // AccessControlContext ac = (AccessControlContext) context;
+    // ac.checkPermission(new FilePermission(filename, "read"));
+    throw new SecurityException("Cannot read files via file names.");
   }
 
   /**
@@ -664,15 +667,17 @@
    */
   public void checkConnect(String host, int port, Object context)
   {
-    if (! (context instanceof AccessControlContext))
-      throw new SecurityException("Missing context");
-    AccessControlContext ac = (AccessControlContext) context;
-    if (port == -1)
-      ac.checkPermission(new SocketPermission(host, "resolve"));
-    else
-      // Use the toString() hack to do the null check.
-      ac.checkPermission(new SocketPermission(host.toString() + ":" + port,
-                                              "connect"));
+    // XXX Should be:
+    // if (! (context instanceof AccessControlContext))
+    //   throw new SecurityException("Missing context");
+    // AccessControlContext ac = (AccessControlContext) context;
+    // if (port == -1)
+    //   ac.checkPermission(new SocketPermission(host, "resolve"));
+    // else
+    //   // Use the toString() hack to do the null check.
+    //   ac.checkPermission(new SocketPermission(host.toString + ":" +port,
+    //                                           "connect"));
+    throw new SecurityException("Cannot make network connections.");
   }
 
   /**
@@ -1014,16 +1019,12 @@
    * @see #checkPackageAccess(String)
    * @see #checkPackageDefinition(String)
    */
-  void checkPackageList(String packageName, final String restriction,
+  void checkPackageList(String packageName, String restriction,
                         String permission)
   {
     // Use the toString() hack to do the null check.
     Permission p = new RuntimePermission(permission + packageName.toString());
-    String list = (String)AccessController.doPrivileged(new PrivilegedAction() {
-	public Object run() {
-	    return Security.getProperty("package." + restriction);
-	}
-    });
+    String list = Security.getProperty("package." + restriction);
     if (list == null)
       return;
     while (! "".equals(packageName))
