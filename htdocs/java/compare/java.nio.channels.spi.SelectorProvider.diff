--- /home/tromey/gnu/classpath/classpath/java/nio/channels/spi/SelectorProvider.java	Mon Aug 12 11:47:31 2002
+++ java/nio/channels/spi/SelectorProvider.java	Fri Nov  1 05:03:39 2002
@@ -1,4 +1,4 @@
-/* SelectorProvider.java
+/* SelectorProvider.java -- 
    Copyright (C) 2002 Free Software Foundation, Inc.
 
 This file is part of GNU Classpath.
@@ -35,33 +35,48 @@
 obligated to do so.  If you do not wish to do so, delete this
 exception statement from your version. */
 
-
 package java.nio.channels.spi;
 
-import java.nio.channels.*;
-
-
+import java.nio.channels.DatagramChannel;
+import java.nio.channels.Pipe;
+import java.nio.channels.ServerSocketChannel;
+import java.nio.channels.SocketChannel;
+
+/**
+ * @since 1.4
+ */
 public abstract class SelectorProvider
 {
-    protected SelectorProvider()
-    {
-    }
+  static SelectorProvider pr;
     
-    public abstract  DatagramChannel openDatagramChannel();
-    public abstract  Pipe openPipe();
-    public abstract  AbstractSelector openSelector();
-    public abstract  ServerSocketChannel openServerSocketChannel();
-    public abstract  SocketChannel openSocketChannel();
+  /**
+   * Creates the <code>SelectorProvider<code> object
+   *
+   * @exception SecurityException If a security manager has been installed and
+   * it denies RuntimePermission("selectorProvider")
+   */
+  protected SelectorProvider()
+  {
+    SecurityManager sm = System.getSecurityManager ();
+    if (sm != null)
+      sm.checkPermission (new RuntimePermission ("selectorProvider"));
+  }
     
-    
-    static SelectorProvider pr;
-    
-    public static SelectorProvider provider()
-    {
-	if (pr == null)
-	    {
-		pr = new gnu.java.nio.SelectorProviderImpl();
-	    }
-	return pr;
-    }
+  public abstract  DatagramChannel openDatagramChannel();
+
+  public abstract  Pipe openPipe();
+  
+  public abstract  AbstractSelector openSelector();
+  
+  public abstract  ServerSocketChannel openServerSocketChannel();
+  
+  public abstract  SocketChannel openSocketChannel();
+   
+  /**
+   * Returns the global <code>SelectorProvider</code> object
+   */
+  public static SelectorProvider provider()
+  {
+    return pr;
+  }
 }
