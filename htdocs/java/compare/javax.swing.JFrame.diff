--- /home/tromey/gnu/Nightly/classpath/classpath/javax/swing/JFrame.java	2004-04-16 02:20:10.000000000 -0600
+++ javax/swing/JFrame.java	2004-02-12 02:18:27.000000000 -0700
@@ -1,5 +1,5 @@
 /* JFrame.java --
-   Copyright (C) 2002, 2004 Free Software Foundation, Inc.
+   Copyright (C) 2002 Free Software Foundation, Inc.
 
 This file is part of GNU Classpath.
 
@@ -57,11 +57,16 @@
  *
  * @author Ronald Veldema (rveldema@cs.vu.nl)
  */
-public class JFrame extends Frame implements WindowConstants
+public class JFrame extends Frame
 {
+    public final static int HIDE_ON_CLOSE        = 0;
+    public final static int EXIT_ON_CLOSE        = 1;
+    public final static int DISPOSE_ON_CLOSE     = 2;
+    public final static int DO_NOTHING_ON_CLOSE  = 3;
+
     protected  AccessibleContext accessibleContext;
 
-    private int close_action = HIDE_ON_CLOSE;    
+    private int close_action = EXIT_ON_CLOSE;    
     
 
     /***************************************************
@@ -187,7 +192,7 @@
     return accessibleContext;
   }
   
-    public int getDefaultCloseOperation()
+    int getDefaultCloseOperation()
     {    return close_action;   }
 
     
@@ -207,7 +212,7 @@
 			{
 			case EXIT_ON_CLOSE:
 			    {
-				System.exit(0);
+				System.exit(1);
 				break;
 			    }
 			case DISPOSE_ON_CLOSE:
@@ -236,30 +241,8 @@
 	    }
     }   
  
-    /**
-     * Defines what happens when this frame is closed. Can be one off
-     * <code>EXIT_ON_CLOSE</code>,
-     * <code>DISPOSE_ON_CLOSE</code>,
-     * <code>HIDE_ON_CLOSE</code> or
-     * <code>DO_NOTHING_ON_CLOSE</code>.
-     * The default is <code>HIDE_ON_CLOSE</code>.
-     * When <code>EXIT_ON_CLOSE</code> is specified this method calls
-     * <code>SecurityManager.checkExit(0)</code> which might throw a
-     * <code>SecurityException</code>. When the specified operation is
-     * not one of the above a <code>IllegalArgumentException</code> is
-     * thrown.
-     */
-    public void setDefaultCloseOperation(int operation)
-    {
-      SecurityManager sm = System.getSecurityManager();
-      if (sm != null && operation == EXIT_ON_CLOSE)
-	sm.checkExit(0);
-
-      if (operation != EXIT_ON_CLOSE && operation != DISPOSE_ON_CLOSE
-	  && operation != HIDE_ON_CLOSE && operation != DO_NOTHING_ON_CLOSE)
-	throw new IllegalArgumentException("operation = " + operation);
-	  
-      close_action = operation;
-    }
+
+    void setDefaultCloseOperation(int operation)
+    {  close_action = operation;   }
 
 }
