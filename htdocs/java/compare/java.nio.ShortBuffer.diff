--- /home/tromey/gnu/classpath/classpath/java/nio/ShortBuffer.java	Mon Dec 30 15:39:05 2002
+++ java/nio/ShortBuffer.java	Mon Nov 18 06:56:58 2002
@@ -39,7 +39,7 @@
 
 import gnu.java.nio.ShortBufferImpl;
 
-public abstract class ShortBuffer extends Buffer implements Comparable
+public abstract class ShortBuffer extends Buffer
 {
   private ByteOrder endian = ByteOrder.BIG_ENDIAN;
   protected short [] backing_buffer;
@@ -77,7 +77,7 @@
     return wrap(array, 0, array.length);
   }
 
-  public ShortBuffer get(short[] dst, int offset, int length)
+  final public ShortBuffer get(short[] dst, int offset, int length)
   {
     for (int i = offset; i < offset + length; i++)
       {
@@ -87,12 +87,12 @@
     return this;
   }
 
-  public ShortBuffer get(short[] dst)
+  final public ShortBuffer get(short[] dst)
   {
     return get(dst, 0, dst.length);
   }
 
-  public ShortBuffer put(ShortBuffer src)
+  final public ShortBuffer put(ShortBuffer src)
   {
     while (src.hasRemaining())
       put(src.get());
@@ -100,7 +100,7 @@
     return this;
   }
 
-  public ShortBuffer put(short[] src, int offset, int length)
+  final public ShortBuffer put(short[] src, int offset, int length)
   {
     for (int i = offset; i < offset + length; i++)
       put(src[i]);
@@ -173,7 +173,7 @@
     return 0;
   }
 
-  public ByteOrder order()
+  public final ByteOrder order()
   {
     return endian;
   }
@@ -193,4 +193,34 @@
   public abstract ShortBuffer slice();
   public abstract ShortBuffer duplicate();
   public abstract ShortBuffer asReadOnlyBuffer();
+  public abstract ShortBuffer asShortBuffer();
+  public abstract CharBuffer asCharBuffer();
+  public abstract IntBuffer asIntBuffer();
+  public abstract LongBuffer asLongBuffer();
+  public abstract FloatBuffer asFloatBuffer();
+  public abstract DoubleBuffer asDoubleBuffer();
+  public abstract char getChar();
+  public abstract ShortBuffer putChar(char value);
+  public abstract char getChar(int index);
+  public abstract ShortBuffer putChar(int index, char value);
+  public abstract short getShort();
+  public abstract ShortBuffer putShort(short value);
+  public abstract short getShort(int index);
+  public abstract ShortBuffer putShort(int index, short value);
+  public abstract int getInt();
+  public abstract ShortBuffer putInt(int value);
+  public abstract int getInt(int index);
+  public abstract ShortBuffer putInt(int index, int value);
+  public abstract long getLong();
+  public abstract ShortBuffer putLong(long value);
+  public abstract long getLong(int index);
+  public abstract ShortBuffer putLong(int index, long value);
+  public abstract float getFloat();
+  public abstract ShortBuffer putFloat(float value);
+  public abstract float getFloat(int index);
+  public abstract ShortBuffer putFloat(int index, float value);
+  public abstract double getDouble();
+  public abstract ShortBuffer putDouble(double value);
+  public abstract double getDouble(int index);
+  public abstract ShortBuffer putDouble(int index, double value);
 }
