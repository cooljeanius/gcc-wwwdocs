--- /home/tromey/gnu/classpath/classpath/gnu/java/rmi/server/UnicastConnection.java	Sat Mar 23 09:42:53 2002
+++ gnu/java/rmi/server/UnicastConnection.java	Tue Jan 22 15:40:01 2002
@@ -44,8 +44,6 @@
 import java.io.DataOutputStream;
 import java.io.ObjectInputStream;
 import java.io.ObjectOutputStream;
-import java.io.BufferedInputStream;
-import java.io.BufferedOutputStream;
 import java.io.ObjectOutput;
 import java.io.ObjectInput;
 import java.io.IOException;
@@ -67,10 +65,9 @@
 }
 
 void acceptConnection() throws IOException {
-//System.out.println("Accepting connection on " + sock);
-    //Use BufferedXXXStream would be more efficient
-	din = new DataInputStream(new BufferedInputStream(sock.getInputStream()));
-	dout = new DataOutputStream(new BufferedOutputStream(sock.getOutputStream()));
+//System.out.println("Accepting connection on " + lport);
+	din = new DataInputStream(sock.getInputStream());
+	dout = new DataOutputStream(sock.getOutputStream());
 
 	int sig = din.readInt();
 	if (sig != PROTOCOL_HEADER) {
@@ -88,7 +85,6 @@
 		// Send my hostname and port
 		dout.writeUTF(manager.serverName);
 		dout.writeInt(manager.serverPort);
-		dout.flush();
 
 		// Read their hostname and port
 		String rhost = din.readUTF();
@@ -98,16 +94,15 @@
 }
 
 void makeConnection(int protocol) throws IOException {
-    //Use BufferedXXXStream would be more efficient
-	din = new DataInputStream(new BufferedInputStream(sock.getInputStream()));
-	dout = new DataOutputStream(new BufferedOutputStream(sock.getOutputStream()));
+	dout = new DataOutputStream(sock.getOutputStream());
+	din = new DataInputStream(sock.getInputStream());
 
 	// Send header
 	dout.writeInt(PROTOCOL_HEADER);
 	dout.writeShort(PROTOCOL_VERSION);
 	dout.writeByte(protocol);
-    dout.flush();
-    
+	dout.flush();
+
 	if (protocol != SINGLE_OP_PROTOCOL) {
 		// Get back ack.
 		int ack = din.readUnsignedByte();
@@ -122,7 +117,6 @@
 		// Send them my endpoint
 		dout.writeUTF(manager.serverName);
 		dout.writeInt(manager.serverPort);
-		dout.flush();
 	}
 	// Okay, ready to roll ...
 }
@@ -150,15 +144,13 @@
 }
 
 void disconnect() {
+	oin = null;
+	oout = null;
 	try {
-	    if(oout != null)
-	        oout.close();
+		sock.close();
 	}
 	catch (IOException _) {
-    }
-
-	oin = null;
-    oout = null;
+	}
 	din = null;
 	dout = null;
 	sock = null;
