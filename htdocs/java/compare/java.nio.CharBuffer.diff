--- /home/tromey/gnu/Nightly/classpath/classpath/java/nio/CharBuffer.java	2003-03-11 10:27:52.000000000 -0700
+++ java/nio/CharBuffer.java	2003-05-10 02:19:16.000000000 -0600
@@ -45,8 +45,8 @@
 public abstract class CharBuffer extends Buffer
   implements Comparable, CharSequence
 {
-  protected int array_offset = 0;
-  protected char [] backing_buffer;
+  int array_offset = 0;
+  char[] backing_buffer;
   
   /**
    * Allocates a new <code>CharBuffer</code> object with a given capacity.
@@ -99,9 +99,7 @@
         buffer [i] = a.charAt (i);
       }
     
-    // FIXME: make it read-only.
-    //return wrap (buffer, offset, length);
-    return wrap (buffer, offset, length).asReadOnlyBuffer ();
+    return wrap (buffer, offset, length);
   }
   
   /**
@@ -112,7 +110,7 @@
     return wrap (array, 0, array.length);
   }
  
-  protected CharBuffer (int cap, int lim, int pos, int mark)
+  CharBuffer (int cap, int lim, int pos, int mark)
   {
     super (cap, lim, pos, mark);
   }
@@ -179,7 +177,7 @@
     if (offset < 0
         || offset >= src.length
         || length < 0
-        || length >= (src.length - offset))
+        || length > (src.length - offset))
       throw new IndexOutOfBoundsException ();
      
     // Put nothing into this buffer when not enough space left.
@@ -363,9 +361,12 @@
    */
   public String toString ()
   {
-    char[] data = new char [length ()];
-    get (data, 0, length ());
-    return new String (data, position (), length ());
+    if (hasArray ())
+      return new String (array (), position (), length ());
+
+    char[] buf = new char [length ()];
+    get (buf);
+    return new String (buf);
   }
 
   /**
@@ -413,7 +414,7 @@
    */
   public final CharBuffer put (String str)
   {
-    return put (str, 0, str.length ());
+    return put (str.toCharArray (), 0, str.length ());
   }
   
   /**
