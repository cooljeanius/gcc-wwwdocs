--- /home/tromey/gnu/Nightly/classpath/classpath/java/rmi/server/RMIClassLoader.java	2003-10-07 02:20:27.000000000 -0600
+++ java/rmi/server/RMIClassLoader.java	2003-10-10 02:18:10.000000000 -0600
@@ -91,63 +91,6 @@
     }
 
     private final String annotation;
-  }
-  
-  /** 
-   * This class is used to identify a cached classloader by its codebase and 
-   * the context classloader that is its parent.
-   */  
-  private static class CacheKey
-  {
-     private String mCodeBase;
-     private ClassLoader mContextClassLoader;
-  	
-     public CacheKey (String theCodebase, ClassLoader theContextClassLoader)
-     {
-       mCodeBase = theCodebase;
-       mContextClassLoader = theContextClassLoader;
-     }
-  	
-    /**
-     * @return true if the codebase and the context classloader are equal
-     */
-    public boolean equals (Object theOther)
-    {
-      if (theOther != null
-          && theOther instanceof CacheKey)
-      {
-      	CacheKey key = (CacheKey) theOther;
-	
-      	return (equals (this.mCodeBase,key.mCodeBase)
-                && equals (this.mContextClassLoader, key.mContextClassLoader));
-        }
-      return false;
-    }
-    
-    /**
-     * Test if the two objects are equal or both null.
-     * @param theOne
-     * @param theOther
-     * @return
-     */
-    private boolean equals (Object theOne, Object theOther)
-    {
-      return theOne != null ? theOne.equals (theOther) : theOther == null;
-    }
-
-    /**
-     * @return hashCode  
-     */
-    public int hashCode()
-    {
-      return ((mCodeBase != null           ? mCodeBase.hashCode()           :  0) 
-              ^(mContextClassLoader != null ? mContextClassLoader.hashCode() : -1));
-    }
-
-    public String toString()
-    {
-      return "[" + mCodeBase + "," + mContextClassLoader + "]"; 
-    }
 
   }
 
@@ -186,9 +129,7 @@
       {
         defaultLoader = new MyClassLoader (new URL[] { defaultCodebase }, null,
                                            defaultAnnotation);
-        cacheLoaders.put (new CacheKey (defaultAnnotation,
-                                        Thread.currentThread().getContextClassLoader()),
-                                        defaultLoader);
+        cacheLoaders.put(defaultAnnotation, defaultLoader);
       }
     }
 
@@ -248,11 +189,8 @@
   private static ClassLoader getClassLoader (String codebases) 
     throws MalformedURLException
   {
-    ClassLoader loader;
-    CacheKey loaderKey = new CacheKey
-      (codebases, Thread.currentThread().getContextClassLoader());
-    loader = (ClassLoader) cacheLoaders.get (loaderKey);
-      
+    ClassLoader loader = (ClassLoader) cacheLoaders.get (codebases);
+	
     if (loader == null)
       {
         //create an entry in cacheLoaders mapping a loader to codebases.
@@ -264,9 +202,8 @@
           urls.add (new URL (tok.nextToken()));
       
         loader = new MyClassLoader ((URL[]) urls.toArray (new URL [urls.size()]),
-                                    Thread.currentThread().getContextClassLoader(),
-                                    codebases);
-        cacheLoaders.put (loaderKey, loader);
+    				    null, codebases);
+        cacheLoaders.put (codebases, loader);
       }
            
     return loader;
