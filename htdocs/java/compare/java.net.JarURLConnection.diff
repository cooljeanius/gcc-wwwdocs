--- /home/tromey/gnu/Nightly/classpath/classpath/java/net/JarURLConnection.java	2003-10-13 02:21:04.000000000 -0600
+++ java/net/JarURLConnection.java	2003-12-21 02:18:14.000000000 -0700
@@ -42,7 +42,9 @@
 import java.util.jar.Attributes;
 import java.util.jar.JarEntry;
 import java.util.jar.JarFile;
+import java.util.jar.JarInputStream;
 import java.util.jar.Manifest;
+import java.util.zip.ZipEntry;
 import java.security.cert.Certificate;
 
 /**
@@ -79,6 +81,13 @@
   private final URL jarFileURL;
 
   /**
+   * The connection to the jar file itself. A JarURLConnection
+   * can represent an entry in a jar file or an entire jar file.  In
+   * either case this describes just the jar file itself.
+   */
+  protected URLConnection jarFileURLConnection;
+
+  /**
    * This is the jar file "entry name" or portion after the "!/" in the
    * URL which represents the pathname inside the actual jar file.
    */
@@ -110,7 +119,7 @@
     jarFileURL = new URL (spec.substring (0, bang));
 
     // Get the name of the entry, if any.
-    entryName = spec.length() == (bang + 1) ? "" : spec.substring (bang + 2);
+    entryName = spec.length() == (bang + 2) ? null : spec.substring (bang + 2);
   }
 
   /**
@@ -145,9 +154,46 @@
    */
   public JarEntry getJarEntry () throws IOException
   {
-    JarFile jarFile = getJarFile();
+    JarFile jarfile = null;
+
+    if (entryName == null)
+      return null;
+
+    if (! doInput)
+      throw new ProtocolException("Can't open JarEntry if doInput is false");
+
+    try
+      {
+	jarfile = getJarFile ();
+      }
+    catch (IOException x)
+      {
+	/* ignore */
+      }
+    
+    if (jarfile == null)
+      {
+	JarInputStream zis = new JarInputStream(
+			jarFileURLConnection.getInputStream ());
+
+	// This is hideous, we're doing a linear search for the thing...
+	for (ZipEntry ent = zis.getNextEntry (); 
+	     ent != null; 
+	     ent = zis.getNextEntry ())
+	  {
+	    if (entryName.equals (ent.getName()))
+	      {
+		return new JarEntry (ent);
+	      }
+	  }
+      }
+
+    else
+      {
+	return jarfile.getJarEntry (entryName);
+      }
 
-    return jarFile != null ? jarFile.getJarEntry (entryName) : null;
+    return null;
   }
 
   /**
