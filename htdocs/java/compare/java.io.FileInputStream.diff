--- /home/tromey/gnu/Nightly/classpath/classpath/java/io/FileInputStream.java	Tue Mar 25 02:18:50 2003
+++ java/io/FileInputStream.java	Wed Mar 26 02:17:51 2003
@@ -82,17 +82,7 @@
     SecurityManager s = System.getSecurityManager();
     if (s != null)
       s.checkRead(name);
-
-    fd = new FileDescriptor();
- 
-    try
-      {
-        fd.open(name, "r");
-      }
-    catch(IOException e)
-      {
-        throw new FileNotFoundException(name + ": " + e.getMessage());
-      }
+    fd = new FileDescriptor(name, FileDescriptor.READ);
   }
 
   /**
@@ -134,11 +124,6 @@
    */
   public FileInputStream(FileDescriptor fdObj)
   {
-    // Hmmm, no other exception but this one to throw, but if the descriptor
-    // isn't valid, we surely don't have "permission" to read from it.
-    if (!fdObj.valid())
-      throw new SecurityException("Invalid FileDescriptor");
-
     SecurityManager s = System.getSecurityManager();
     if (s != null)
       s.checkRead(fdObj);
@@ -283,18 +268,11 @@
    *
    * @exception IOException If an error occurs
    */
-  public synchronized long skip(long numBytes) throws IOException
+  public long skip(long n) throws IOException
   {
-    if (numBytes < 0)
-      throw new IllegalArgumentException("Can't skip negative bytes: " + 
-                                         numBytes);
-
-    if (numBytes == 0)
-      return(0);
-
-    long curPos = fd.getFilePointer();
-    long newPos = fd.seek(numBytes, FileDescriptor.CUR, true);
-    return newPos - curPos;
+    long startPos = fd.getFilePointer();
+    long endPos = fd.seek(n, FileDescriptor.CUR, true);
+    return endPos - startPos;
   }
 
   /**
@@ -306,7 +284,7 @@
   public synchronized FileChannel getChannel () 
   {
     if (ch == null)
-      ch = new FileChannelImpl ((int) (fd.getNativeFd () & 0xFFFF), this);
+      ch = new FileChannelImpl (fd, false, this);
     
     return ch;
   }
