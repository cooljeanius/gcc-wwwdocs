--- /home/tromey/gnu/Nightly/classpath/classpath/javax/swing/UIManager.java	2003-11-15 02:20:01.000000000 -0700
+++ javax/swing/UIManager.java	2003-07-14 02:18:15.000000000 -0600
@@ -1,5 +1,5 @@
 /* UIManager.java -- 
-   Copyright (C) 2002, 2003 Free Software Foundation, Inc.
+   Copyright (C) 2002 Free Software Foundation, Inc.
 
 This file is part of GNU Classpath.
 
@@ -168,7 +168,7 @@
   /**
    * Returns the default values for this look and feel. 
    */
-  public static UIDefaults getDefaults()
+  static  UIDefaults getDefaults()
   {
     return getLookAndFeel().getDefaults();
   }
@@ -176,7 +176,7 @@
   /**
    * Returns a dimension from the defaults table. 
    */
-  public static Dimension getDimension(Object key)
+  static  Dimension getDimension(Object key)
   {
     System.out.println("UIManager.getDim");
     return new Dimension(200,100);
@@ -195,24 +195,24 @@
     return (Font) getLookAndFeel().getDefaults().get(key);
   }
 
-  public static Icon getIcon(Object key)
+  static Icon getIcon(Object key)
     // Returns an Icon from the defaults table. 
   {
     return (Icon) getLookAndFeel().getDefaults().get(key);
   }
   
-  public static Insets getInsets(Object key)
+  static Insets getInsets(Object key)
     // Returns an Insets object from the defaults table. 
   {
     return (Insets) getLookAndFeel().getDefaults().getInsets(key);
   }
 
-  public static LookAndFeelInfo[] getInstalledLookAndFeels()
+  static LookAndFeelInfo[] getInstalledLookAndFeels()
   {
     return installed;
   }
 
-  public static int getInt(Object key)
+  static  int getInt(Object key)
   {
     Integer x = (Integer) getLookAndFeel().getDefaults().get(key);
     if (x == null)
@@ -220,7 +220,7 @@
     return x.intValue();
   }
 
-  public static LookAndFeel getLookAndFeel()
+  static  LookAndFeel getLookAndFeel()
   {
     return look_and_feel;
   }
@@ -234,13 +234,13 @@
     return getLookAndFeel().getDefaults();
   }
 
-  public static String getString(Object key)
+  static String getString(Object key)
     // Returns a string from the defaults table. 
   {
     return (String) getLookAndFeel().getDefaults().get(key);
   }
   
-  public static String getSystemLookAndFeelClassName()
+  static String getSystemLookAndFeelClassName()
     // Returns the name of the LookAndFeel class that implements the native systems look and feel if there is one, otherwise the name of the default cross platform LookAndFeel class. 
   {
     return getCrossPlatformLookAndFeelClassName();
