--- /home/tromey/gnu/Nightly/classpath/classpath/gnu/java/awt/peer/gtk/GtkScrollPanePeer.java	2003-07-10 02:18:54.000000000 -0600
+++ gnu/java/awt/peer/gtk/GtkScrollPanePeer.java	2004-01-06 02:18:19.000000000 -0700
@@ -46,15 +46,17 @@
 public class GtkScrollPanePeer extends GtkContainerPeer
   implements ScrollPanePeer
 {
-  native void create ();
+  native void create (int width, int height);
+
+  void create ()
+  {
+    create (awtComponent.getWidth (), awtComponent.getHeight ());
+  }
 
-  native void gtkScrolledWindowNew(ComponentPeer parent,
-				   int policy, int w, int h, int[] dims);
   native void gtkScrolledWindowSetScrollPosition(int x, int y);
   native void gtkScrolledWindowSetHScrollIncrement (int u);
   native void gtkScrolledWindowSetVScrollIncrement (int u);
-  native void gtkScrolledWindowSetSize(int w, int h);
-  
+
   public GtkScrollPanePeer (ScrollPane sp)
   {
     super (sp);
@@ -63,7 +65,24 @@
   }
 
   native void setPolicy (int policy);
-  native public void childResized (int width, int height);
+  public void childResized (int width, int height)
+  {
+    int dim[] = new int[2];
+
+    gtkWidgetGetDimensions (dim);
+
+    // If the child is in this range, GTK adds both scrollbars, but
+    // the AWT doesn't.  So set the peer's scroll policy to
+    // GTK_POLICY_NEVER.
+    if ((width > dim[0] - getVScrollbarWidth ()
+	 && width <= dim[0])
+	&& (height > dim[1] - getHScrollbarHeight ()
+	    && height <= dim[1]))
+      setPolicy (ScrollPane.SCROLLBARS_NEVER);
+    else
+      setPolicy (((ScrollPane) awtComponent).getScrollbarDisplayPolicy ());
+  }
+
   native public int getHScrollbarHeight ();
   native public int getVScrollbarWidth ();
   native public void setScrollPosition (int x, int y);
