--- /home/tromey/gnu/egcs/classpath/classpath/java/awt/geom/Dimension2D.java	Sat Mar 23 09:42:55 2002
+++ java/awt/geom/Dimension2D.java	Tue Jan 22 16:01:31 2002
@@ -1,5 +1,4 @@
-/* Dimension2D.java -- abstraction of a dimension
-   Copyright (C) 1999, 2000, 2002 Free Software Foundation
+/* Copyright (C) 1999, 2000, 2002  Free Software Foundation
 
 This file is part of GNU Classpath.
 
@@ -35,79 +34,39 @@
 obligated to do so.  If you do not wish to do so, delete this
 exception statement from your version. */
 
-
 package java.awt.geom;
 
 /**
- * This stores a dimension in 2-dimensional space - a width (along the x-axis)
- * and height (along the y-axis). The storage is left to subclasses.
- *
  * @author Per Bothner <bothner@cygnus.com>
- * @author Eric Blake <ebb9@email.byu.edu>
- * @since 1.2
- * @status updated to 1.4
+ * @date February, 1999.
+ */
+
+/* Written using online API docs for JDK 1.2 beta from http://www.javasoft.com.
+ * Status:  Believed complete and correct.
  */
+
 public abstract class Dimension2D implements Cloneable
 {
-  /**
-   * The default constructor.
-   */
-  protected Dimension2D()
-  {
-  }
-
-  /**
-   * Get the width of this dimension. A negative result, while legal, is
-   * undefined in meaning.
-   *
-   * @return the width
-   */
   public abstract double getWidth();
-
-  /**
-   * Get the height of this dimension. A negative result, while legal, is
-   * undefined in meaning.
-   *
-   * @return the height
-   */
   public abstract double getHeight();
 
-  /**
-   * Set the size of this dimension to the requested values. Loss of precision
-   * may occur.
-   *
-   * @param w the new width
-   * @param h the new height
-   */
-  public abstract void setSize(double w, double h);
-
-  /**
-   * Set the size of this dimension to the requested value. Loss of precision
-   * may occur.
-   *
-   * @param d the dimension containing the new values
-   * @throws NullPointerException if d is null
-   */
-  public void setSize(Dimension2D d)
+  public abstract void setSize (double width, double height);
+
+  public void setSize (Dimension2D dim)
   {
-    setSize(d.getWidth(), d.getHeight());
+    setSize(dim.getWidth(), dim.getHeight());
   }
 
-  /**
-   * Create a new dimension of the same run-time type with the same contents
-   * as this one.
-   *
-   * @return the clone
-   */
-  public Object clone()
+  public Object clone ()
   {
     try
-      {
-        return super.clone();
-      }
-    catch (CloneNotSupportedException e)
-      {
-        throw (Error) new InternalError().initCause(e); // Impossible
-      }
+    {
+      return super.clone ();
+    } 
+    catch (CloneNotSupportedException _) {return null;}
+  }
+
+  protected Dimension2D ()
+  {
   }
-} // class Dimension2D
+}
