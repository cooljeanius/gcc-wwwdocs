--- /home/tromey/gnu/Nightly/classpath/classpath/javax/swing/AbstractAction.java	2004-01-28 02:27:13.000000000 -0700
+++ javax/swing/AbstractAction.java	2004-01-10 02:18:19.000000000 -0700
@@ -56,186 +56,157 @@
 {
   static final long serialVersionUID = -6803159439231523484L;
 
-  /**
-   * enabled
-   */
-  protected boolean enabled = true;
-
-  /**
-   * changeSupport
-   */
-  protected SwingPropertyChangeSupport changeSupport =
-    new SwingPropertyChangeSupport(this);
-
-  /**
-   * store
-   */
-  private transient HashMap store = new HashMap();
-
-  /**
-   * Constructor AbstractAction
-   */
-  public AbstractAction()
-  {
-    this(""); // TODO: default name
-  }
-
-  /**
-   * Constructor AbstractAction
-   *
-   * @param name TODO
-   */
-  public AbstractAction(String name)
-  {
-    this(name, null); // TODO: default icon??
-  }
-
-  /**
-   * Constructor AbstractAction
-   *
-   * @param name TODO
-   * @param icon TODO
-   */
-  public AbstractAction(String name, Icon icon)
-  {
-    putValue(NAME, name);
-    putValue(SMALL_ICON, icon);
-  }
-
-  /**
-   * readObject
-   *
-   * @param stream the stream to read from
-   *
-   * @exception ClassNotFoundException TODO
-   * @exception IOException if an error occurs
-   */
-  private void readObject(ObjectInputStream stream)
-    throws ClassNotFoundException, IOException
-  {
-    // TODO
-  }
-
-  /**
-   * writeObject
-   *
-   * @param stream the stream to write to
-   *
-   * @exception IOException if an error occurs
-   */
-  private void writeObject(ObjectOutputStream stream) throws IOException
-  {
-    // TODO
-  }
-
-  /**
-   * clone
-   *
-   * @return Object
-   *
-   * @exception CloneNotSupportedException TODO
-   */
-  protected Object clone() throws CloneNotSupportedException
-  {
-    AbstractAction copy = (AbstractAction) super.clone();
-    copy.store = (HashMap) store.clone();
-    return copy;
-  }
-
-  /**
-   * Returns a value for a given key from the built-in store.
-   *
-   * @param key the key to get the value for
-   *
-   * @return Object
-   */
-  public Object getValue(String key)
-  {
-    return store.get(key);
-  }
-
-  /**
-   * Puts a key/value pair into the built-in store.
-   *
-   * @param key the key
-   * @param value the value
-   */
-  public void putValue(String key, Object value)
-  {
-    store.put(key, value);
-  }
-
-  /**
-   * isEnabled
-   *
-   * @return boolean
-   */
-  public boolean isEnabled()
-  {
-    return enabled;
-  }
-
-  /**
-   * setEnabled
-   *
-   * @param enabled TODO
-   */
-  public void setEnabled(boolean enabled)
-  {
-    this.enabled = enabled;
-  }
-
-  /**
-   * getKeys
-   * @returns Object[]
-   */
-  public Object[] getKeys()
-  {
-    return store.keySet().toArray();
-  }
-
-  /**
-   * firePropertyChange
-   *
-   * @param propertyName TODO
-   * @param oldValue TODO
-   * @param newValue TODO
-   */
-  protected void firePropertyChange(String propertyName, Object oldValue,
-                                    Object newValue)
-  {
-    changeSupport.firePropertyChange(propertyName, oldValue, newValue);
-  }
-
-  /**
-   * addPropertyChangeListener
-   *
-   * @param listener the listener to add
-   */
-  public void addPropertyChangeListener(PropertyChangeListener listener)
-  {
-    changeSupport.addPropertyChangeListener(listener);
-  }
-
-  /**
-   * removePropertyChangeListener
-   *
-   * @param listener the listener to remove
-   */
-  public void removePropertyChangeListener(PropertyChangeListener listener)
-  {
-    changeSupport.removePropertyChangeListener(listener);
-  }
-
-  /**
-   * Returns all registered listeners.
-   *
-   * @return array of listeners.
-   * 
-   * @since 1.4
-   */
-  public PropertyChangeListener[] getPropertyChangeListeners()
-  {
-    return changeSupport.getPropertyChangeListeners();
-  }
+	//-------------------------------------------------------------
+	// Variables --------------------------------------------------
+	//-------------------------------------------------------------
+
+	/**
+	 * enabled
+	 */
+	protected boolean enabled = true;
+
+	/**
+	 * changeSupport
+	 */
+	protected SwingPropertyChangeSupport changeSupport =
+				new SwingPropertyChangeSupport(this);
+
+	/**
+	 * store
+	 */
+	private transient HashMap store = new HashMap();
+
+
+	//-------------------------------------------------------------
+	// Initialization ---------------------------------------------
+	//-------------------------------------------------------------
+
+	/**
+	 * Constructor AbstractAction
+	 */
+	public AbstractAction() {
+		this(""); // TODO: default name
+	} // AbstractAction()
+
+	/**
+	 * Constructor AbstractAction
+	 * @param name TODO
+	 */
+	public AbstractAction(String name) {
+		this(name, null); // TODO: default icon??
+	} // AbstractAction()
+
+	/**
+	 * Constructor AbstractAction
+	 * @param name TODO
+	 * @param icon TODO
+	 */
+	public AbstractAction(String name, Icon icon) {
+		putValue(NAME, name);
+		putValue(SMALL_ICON, icon);
+	} // AbstractAction()
+
+
+	//-------------------------------------------------------------
+	// Methods ----------------------------------------------------
+	//-------------------------------------------------------------
+
+	/**
+	 * readObject
+	 * @param stream TODO
+	 * @exception ClassNotFoundException TODO
+	 * @exception IOException TODO
+	 */
+	private void readObject(ObjectInputStream stream) 
+			throws ClassNotFoundException, IOException {
+		// TODO
+	} // readObject()
+
+	/**
+	 * writeObject
+	 * @param stream TODO
+	 * @exception IOException TODO
+	 */
+	private void writeObject(ObjectOutputStream stream) throws IOException {
+		// TODO
+	} // writeObject()
+
+	/**
+	 * clone
+	 * @exception CloneNotSupportedException TODO
+	 * @returns Object
+	 */
+	protected Object clone() throws CloneNotSupportedException {
+		// What to do??
+		return null;
+	} // clone()
+
+	/**
+	 * getValue
+	 * @param key TODO
+	 * @returns Object
+	 */
+	public Object getValue(String key) {
+		return store.get(key);
+	} // getValue()
+
+	/**
+	 * putValue
+	 * @param key TODO
+	 * @param value TODO
+	 */
+	public void putValue(String key, Object value) {
+		store.put(key, value);
+	} // putValue()
+
+	/**
+	 * isEnabled
+	 * @returns boolean
+	 */
+	public boolean isEnabled() {
+		return enabled;
+	} // isEnabled()
+
+	/**
+	 * setEnabled
+	 * @param enabled TODO
+	 */
+	public void setEnabled(boolean enabled) {
+		this.enabled = enabled;
+	} // setEnabled()
+
+	/**
+	 * getKeys
+	 * @returns Object[]
+	 */
+	public Object[] getKeys() {
+		return store.keySet().toArray();
+	} // getKeys()
+
+	/**
+	 * firePropertyChange
+	 * @param propertyName TODO
+	 * @param oldValue TODO
+	 * @param newValue TODO
+	 */
+	protected void firePropertyChange(String propertyName,
+			Object oldValue, Object newValue) {
+		changeSupport.firePropertyChange(propertyName, oldValue, newValue);
+	} // firePropertyChange()
+
+	/**
+	 * addPropertyChangeListener
+	 * @param listener TODO
+	 */
+	public synchronized void addPropertyChangeListener(PropertyChangeListener listener) {
+		changeSupport.addPropertyChangeListener(listener);
+	} // addPropertyChangeListener()
+
+	/**
+	 * removePropertyChangeListener
+	 * @param listener TODO
+	 */
+	public synchronized void removePropertyChangeListener(PropertyChangeListener listener) {
+		changeSupport.removePropertyChangeListener(listener);
+	} // removePropertyChangeListener()
 }
