--- /home/tromey/gnu/egcs/classpath/classpath/java/security/Principal.java	Sun Mar 31 23:08:12 2002
+++ java/security/Principal.java	Tue Jan 22 16:01:36 2002
@@ -1,5 +1,5 @@
 /* Principal.java -- A security entity
-   Copyright (C) 1998, 2002 Free Software Foundation, Inc.
+   Copyright (C) 1998 Free Software Foundation, Inc.
 
 This file is part of GNU Classpath.
 
@@ -35,51 +35,48 @@
 obligated to do so.  If you do not wish to do so, delete this
 exception statement from your version. */
 
-
 package java.security;
 
 /**
- * This interface models an entity (such as a user or a certificate authority)
- * for the purposes of applying the Java security model.
- *
- * @author Aaron M. Renn <arenn@urbanophile.com>
- * @see X509Certificate
- * @since 1.1
- * @status updated to 1.4
+   * This interface models an entity (such as a user or a certificate authority)
+   * for the purposes of applying the Java security model.
+   *
+   * @version 0.0
+   *
+   * @author Aaron M. Renn (arenn@urbanophile.com)
  */
 public interface Principal
 {
   /**
-   * This method tests another <code>Principal</code> object for equality
-   * with this one.
+   * This method returns a <code>String</code> that names this 
+   * <code>Principal</code>.
    *
-   * @param obj the Object to test for equality
-   * @return true if the specified <code>Principal</code> is equal
+   * @return The name of this <code>Principal</code>.
    */
-  boolean equals(Object obj);
+  public abstract String getName();
 
   /**
-   * This method returns a <code>String</code> representation of this
-   * <code>Principal</code>.
+   * This method tests another <code>Principal</code> object for equality
+   * with this one.
+   * 
+   * @param obj The <code>Object</code> (which is a <code>Principal</code>) to test for equality against.
    *
-   * @return this <code>Principal</code> represented as a <code>String</code>
+   * @return <code>true</code> if the specified <code>Principal</code> is equal to this one, <code>false</code> otherwise.
    */
-  String toString();
+  public abstract boolean equals(Object obj);
 
   /**
    * This method returns a hash code value for this <code>Principal</code>.
-   * Remember the contract of hashCode - two objects which compare as
-   * equals() must have the same hashCode().
    *
-   * @return a hash value
+   * @return A hash value
    */
-  int hashCode();
+  public abstract int hashCode();
 
   /**
-   * This method returns a <code>String</code> that names this
+   * This method returns a <code>String</code> representation of this
    * <code>Principal</code>.
    *
-   * @return the name of this <code>Principal</code>
+   * @return This <code>Principal</code> represented as a <code>String</code>.
    */
-  String getName();
-} // interface Principal
+  public abstract String toString();
+}
