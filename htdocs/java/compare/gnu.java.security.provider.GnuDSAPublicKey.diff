--- /home/tromey/gnu/Nightly/classpath/classpath/gnu/java/security/provider/GnuDSAPublicKey.java	2004-11-08 02:18:57.000000000 -0700
+++ gnu/java/security/provider/GnuDSAPublicKey.java	2003-04-30 02:19:03.000000000 -0600
@@ -1,5 +1,5 @@
 /* GnuDSAPublicKey.java --- Gnu DSA Public Key
-   Copyright (C) 1999,2003,2004 Free Software Foundation, Inc.
+   Copyright (C) 1999,2003 Free Software Foundation, Inc.
 
 This file is part of GNU Classpath.
 
@@ -7,7 +7,7 @@
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation; either version 2, or (at your option)
 any later version.
-
+ 
 GNU Classpath is distributed in the hope that it will be useful, but
 WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
@@ -38,32 +38,19 @@
 
 package gnu.java.security.provider;
 
-import gnu.java.security.OID;
-import gnu.java.security.der.BitString;
-import gnu.java.security.der.DER;
-import gnu.java.security.der.DERValue;
-import gnu.java.security.der.DERWriter;
-
-import java.io.ByteArrayOutputStream;
-import java.io.IOException;
-
 import java.math.BigInteger;
-
 import java.security.interfaces.DSAPublicKey;
 import java.security.interfaces.DSAParams;
 import java.security.spec.DSAParameterSpec;
 
-import java.util.ArrayList;
-
 public class GnuDSAPublicKey implements DSAPublicKey
 {
-  private byte[] encodedKey;
   BigInteger y;
   BigInteger p;
   BigInteger q;
   BigInteger g;
 
-  public GnuDSAPublicKey(BigInteger y, BigInteger p, BigInteger q, BigInteger g )
+  public GnuDSAPublicKey(BigInteger y, BigInteger p, BigInteger q, BigInteger g ) 
   {
     this.y = y;
     this.p = p;
@@ -78,49 +65,16 @@
 
   public String getFormat()
   {
-    return "X.509";
+    return null;
   }
 
-  /**
-   * The encoded form of DSA public keys is:
-   *
-   * <blockquote><pre>
-   * SubjectPublicKeyInfo ::= SEQUENCE {
-   *   algorithm AlgorithmIdentifier,
-   *   subjectPublicKey BIT STRING }
-   * </pre></blockquote>
-   */
   public byte[] getEncoded()
   {
-    if (encodedKey != null)
-      return (byte[]) encodedKey.clone();
-    try
-      {
-        ByteArrayOutputStream out = new ByteArrayOutputStream();
-        ArrayList spki = new ArrayList(2);
-        ArrayList alg = new ArrayList(2);
-        alg.add(new DERValue(DER.OBJECT_IDENTIFIER,
-                new OID("1.2.840.113549.1.1.1")));
-        ArrayList params = new ArrayList(3);
-        params.add(new DERValue(DER.INTEGER, p));
-        params.add(new DERValue(DER.INTEGER, q));
-        params.add(new DERValue(DER.INTEGER, g));
-        alg.add(new DERValue(DER.CONSTRUCTED|DER.SEQUENCE, params));
-        spki.add(new DERValue(DER.CONSTRUCTED|DER.SEQUENCE, alg));
-        spki.add(new DERValue(DER.BIT_STRING, new BitString(y.toByteArray())));
-        DERWriter.write(out, new DERValue(DER.CONSTRUCTED|DER.SEQUENCE, spki));
-        return (byte[]) (encodedKey = out.toByteArray()).clone();
-      }
-    catch (IOException ioe)
-      {
-        return null;
-      }
+    return null;
   }
 
   public DSAParams getParams()
   {
-    if (p == null || q == null || g == null)
-      return null;
     return (DSAParams)(new DSAParameterSpec(p,q,g));
   }
 
@@ -131,10 +85,7 @@
 
   public String toString()
   {
-    return
-      "GnuDSAPublicKey: y=" + (y != null ? y.toString(16) : "(null)") +
-      " p=" + (p != null ? p.toString(16) : "(null)") +
-      " q=" + (q != null ? q.toString(16) : "(null)") +
-      " g=" + (g != null ? g.toString(16) : "(null)");
+    return "GnuDSAPublicKey: y=" + y.toString(16) + " p=" + p.toString(16)
+      + " q=" + q.toString(16) + " g=" + g.toString(16);
   }
 }
