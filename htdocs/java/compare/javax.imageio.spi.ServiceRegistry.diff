--- /home/tromey/gnu/Nightly/classpath/classpath/javax/imageio/spi/ServiceRegistry.java	2004-10-04 02:33:45.000000000 -0600
+++ javax/imageio/spi/ServiceRegistry.java	2004-04-21 02:20:31.000000000 -0600
@@ -38,19 +38,9 @@
 
 package javax.imageio.spi;
 
+import java.util.*;
 import gnu.classpath.ServiceFactory;
 
-import java.util.ArrayList;
-import java.util.Collection;
-import java.util.Collections;
-import java.util.Comparator;
-import java.util.HashSet;
-import java.util.IdentityHashMap;
-import java.util.Iterator;
-import java.util.LinkedList;
-import java.util.Map;
-import java.util.NoSuchElementException;
-import java.util.Set;
 
 /**
  * A registry for service providers.
@@ -110,8 +100,6 @@
   /**
    * Constructs a <code>ServiceRegistry</code> for the specified
    * service categories.
-   * 
-   * @param categories the categories to support
    *
    * @throws IllegalArgumentException if <code>categories</code> is
    * <code>null</code>, or if its {@link Iterator#next()} method
@@ -153,7 +141,7 @@
    * might make sense to install only the frequently needed service
    * providers on the local machine. More exotic providers can be put
    * onto a server; the server will only be contacted when no suitable
-   * service could be found locally.</p>
+   * service could be found locally.
    *
    * <p><b>Security considerations:</b> Any loaded service providers
    * are loaded through the specified ClassLoader, or the system
@@ -162,7 +150,7 @@
    * the current {@link java.security.AccessControlContext} gets
    * recorded. This captured security context will determine the
    * permissions when services get loaded via the <code>next()</code>
-   * method of the returned <code>Iterator</code>.</p>
+   * method of the returned <code>Iterator</code>.
    *
    * @param spi the service provider interface which must be
    * implemented by any loaded service providers.
@@ -486,7 +474,7 @@
    * invoked in order to inform the provider about the removal from
    * this registry. If <code>provider</code> implements several
    * service categories, <code>onDeregistration</code> gets called
-   * multiple times.</p>
+   * multiple times.
    *
    * @param provider the service provider to be de-registered.
    *
