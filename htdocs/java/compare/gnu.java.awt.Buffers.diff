--- /home/tromey/gnu/Nightly/classpath/classpath/gnu/java/awt/Buffers.java	2004-04-15 02:20:18.000000000 -0600
+++ gnu/java/awt/Buffers.java	2002-01-22 16:01:30.000000000 -0700
@@ -1,4 +1,4 @@
-/* Copyright (C) 2000, 2002, 2004  Free Software Foundation
+/* Copyright (C) 2000, 2002  Free Software Foundation
 
 This file is part of GNU Classpath.
 
@@ -83,16 +83,10 @@
       {
       case DataBuffer.TYPE_BYTE:
 	return new DataBufferByte(size, numBanks);
-      case DataBuffer.TYPE_SHORT:
-	return new DataBufferShort(size, numBanks);
       case DataBuffer.TYPE_USHORT:
 	return new DataBufferUShort(size, numBanks);
       case DataBuffer.TYPE_INT:
 	return new DataBufferInt(size, numBanks);
-      case DataBuffer.TYPE_FLOAT:
-	return new DataBufferFloat(size, numBanks);
-      case DataBuffer.TYPE_DOUBLE:
-	return new DataBufferDouble(size, numBanks);
       default:
 	throw new UnsupportedOperationException();
       }
@@ -112,16 +106,10 @@
       {
       case DataBuffer.TYPE_BYTE:
 	return new DataBufferByte((byte[]) data, size);
-      case DataBuffer.TYPE_SHORT:
-	return new DataBufferShort((short[]) data, size);
       case DataBuffer.TYPE_USHORT:
 	return new DataBufferUShort((short[]) data, size);
       case DataBuffer.TYPE_INT:
 	return new DataBufferInt((int[]) data, size);
-      case DataBuffer.TYPE_FLOAT:
-	return new DataBufferFloat((float[]) data, size);
-      case DataBuffer.TYPE_DOUBLE:
-	return new DataBufferDouble((double[]) data, size);
       default:
 	throw new UnsupportedOperationException();
       }
@@ -138,22 +126,10 @@
   {
     if (buffer instanceof DataBufferByte)
       return ((DataBufferByte) buffer).getData();
-
-    if (buffer instanceof DataBufferShort)
-      return ((DataBufferShort) buffer).getData();
-
     if (buffer instanceof DataBufferUShort)
       return ((DataBufferUShort) buffer).getData();
-
     if (buffer instanceof DataBufferInt)
       return ((DataBufferInt) buffer).getData();
-
-    if (buffer instanceof DataBufferFloat)
-      return ((DataBufferFloat) buffer).getData();
-
-    if (buffer instanceof DataBufferDouble)
-      return ((DataBufferDouble) buffer).getData();
-
     throw new ClassCastException("Unknown data buffer type");
   }
 
@@ -173,11 +149,6 @@
 	from = ((DataBufferByte) src).getData();
 	if (dest == null) dest = new byte[length+destOffset];
       }
-    else if (src instanceof DataBufferShort)
-      {
-	from = ((DataBufferShort) src).getData();
-	if (dest == null) dest = new short[length+destOffset];
-      }
     else if (src instanceof DataBufferUShort)
       {
 	from = ((DataBufferUShort) src).getData();
@@ -188,16 +159,6 @@
 	from = ((DataBufferInt) src).getData();
 	if (dest == null) dest = new int[length+destOffset];
       }
-    else if (src instanceof DataBufferFloat)
-      {
-	from = ((DataBufferFloat) src).getData();
-	if (dest == null) dest = new float[length+destOffset];
-      }
-    else if (src instanceof DataBufferDouble)
-      {
-	from = ((DataBufferDouble) src).getData();
-	if (dest == null) dest = new double[length+destOffset];
-      }
     else
       {
 	throw new ClassCastException("Unknown data buffer type");
