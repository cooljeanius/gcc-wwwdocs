--- /home/tromey/gnu/classpath/classpath/java/net/URLClassLoader.java	Mon Dec 30 15:39:05 2002
+++ java/net/URLClassLoader.java	Thu Jan  2 19:57:43 2003
@@ -238,7 +238,7 @@
     CodeSource getCodeSource()
     {
       Certificate[] certs = getCertificates();
-      if (certs != null)
+      if (certs == null)
 	return loader.noCertCodeSource;
       else
 	return new CodeSource(loader.baseURL, certs);
@@ -272,47 +272,17 @@
   }
 
   /**
-   * Returns the given URL with a canonicalized file path name when it
-   * is has the file protocol. Otherwise (or when the file part of the
-   * URL couldn't be canonicalized) it returns the original String.
-   * It makes sure that if the original file part ended with a file
-   * separator that the new file part also ends with a separator.
-   */
-  static URL getCanonicalFileURL(URL url)
-  {
-    if ("file".equals(url.getProtocol()))
-      {
-	try
-	  {
-	    String f = url.getFile();
-	    File file = new File(f).getCanonicalFile();
-	    String cf = file.toString();
-	    String sep = File.separator;
-	    if (f.endsWith(sep) && !cf.endsWith(sep))
-	      {
-	        cf += "/";
-	      }
-	    url = new URL("file", "", cf);
-	  }
-	catch (IOException ignore)
-	  {
-	  }
-      }
-    return url;
-  }
-
-  /**
    * A <code>JarURLLoader</code> is a type of <code>URLLoader</code>
    * only loading from jar url.
    */
   final static class JarURLLoader extends URLLoader
   {
-    final JarFile jarfile; // The canonical jar file for this url
+    final JarFile jarfile; // The jar file for this url
     final URL baseJarURL;  // Base jar: url for all resources loaded from jar
 
     public JarURLLoader(URLClassLoader classloader, URL baseURL)
     {
-      super(classloader, getCanonicalFileURL(baseURL));
+      super(classloader, baseURL);
 
       // cache url prefix for all resources in this jar url
       String external = baseURL.toExternalForm();
@@ -495,11 +465,11 @@
    */
   final static class FileURLLoader extends URLLoader
   {
-    File dir;   //the canonical file for this file url
+    File dir;   //the file for this file url
 
     FileURLLoader(URLClassLoader classloader, URL url)
     {
-      super(classloader, getCanonicalFileURL(url));
+      super(classloader, url);
       dir = new File(baseURL.getFile());
     }
 
@@ -507,13 +477,6 @@
     Resource getResource(String name)
     {
       File file = new File(dir, name);
-      try
-	{
-	  file = file.getCanonicalFile();
-	}
-      catch (IOException ignore)
-	{
-	}
       if (file.exists() && !file.isDirectory())
 	return new FileResource(this, name, file);
       return null;
