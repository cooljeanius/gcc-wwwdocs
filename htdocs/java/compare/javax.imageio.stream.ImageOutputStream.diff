--- /home/tromey/gnu/Nightly/classpath/classpath/javax/imageio/stream/ImageOutputStream.java	2004-10-04 02:33:45.000000000 -0600
+++ javax/imageio/stream/ImageOutputStream.java	2004-04-21 02:20:31.000000000 -0600
@@ -39,7 +39,6 @@
 package javax.imageio.stream;
 
 import java.io.DataOutput;
-import java.io.IOException;
 
 
 /**
@@ -53,217 +52,7 @@
 public interface ImageOutputStream
   extends ImageInputStream, DataOutput
 {
-  /**
-   * @param postion
-   *
-   * @throws IOException if an errror occurs
-   */
-  void flushBefore(long position) throws IOException;
-
-  /**
-   * Writes an array into the stream.
-   *
-   * @param data the data to be written
-   *
-   * @throws IOException if an errror occurs
-   */
-  void write(byte[] data) throws IOException;
-
-  /**
-   * Writes a region of data from an array into the stream.
-   *
-   * @param data the data to be written
-   * @param offset the offset in the array
-   * @param len the length in the array
-   *
-   * @throws IOException if an errror occurs
-   */
-  void write(byte[] data, int offset, int len) throws IOException;
-
-  /**
-   * Writes an <code>int</code> into the stream.
-   *
-   * @param data the data to be written
-   *
-   * @throws IOException if an errror occurs
-   */
-  void write(int data) throws IOException;
-
-  /**
-   * Writes a bit value to the stream.
-   *
-   * @throws IOException if an error occurs
-   */
-  void writeBit(int bit) throws IOException;
-
-  /**
-   * Writes a number of bit values to the stream.
-   *
-   * @throws IOException if an errror occurs
-   */
-  void writeBits(long bits, int numBits) throws IOException;
-
-  /**
-   * Writes a <code>boolean</code> value into the stream.
-   *
-   * @param data the data to be written
-   *
-   * @throws IOException if an errror occurs
-   */
-  void writeBoolean(boolean data) throws IOException;
-
-  /**
-   * Writes a <code>byte</code> value into the stream.
-   *
-   * @param data the data to be written
-   *
-   * @throws IOException if an errror occurs
-   */
-  void writeByte(int data) throws IOException;
-
-  /**
-   * @param data the data to be written
-   *
-   * @throws IOException if an errror occurs
-   */
-  void writeBytes(String data) throws IOException;
-
-  /**
-   * Writes a character into the stream.
-   *
-   * @param data the data to be written
-   *
-   * @throws IOException if an errror occurs
-   */
-  void writeChar(int data) throws IOException;
-
-  /**
-   * Writes characters to the stream.
-   *
-   * @param data the data to be written
-   * @param offset the offset in the array
-   * @param len the lenth in the array
-   *
-   * @throws IOException if an errror occurs
-   */
-  void writeChars(char[] data, int offset, int len) throws IOException;
-
-  /**
-   * Writes characters from a given <code>String</code> into the stream.
-   *
-   * @param data the data to be written
-   *
-   * @throws IOException if an errror occurs
-   */
-  void writeChars(String data) throws IOException;
-
-  /**
-   * Writes a <code>double</code> into the stream.
-   *
-   * @param data the data to be written
-   *
-   * @throws IOException if an errror occurs
-   */
-  void writeDouble(double data) throws IOException;
-
-  /**
-   * Writes an array of <code>double</code> into the stream.
-   *
-   * @param data the data to be written
-   * @param offset the offset in the array
-   * @param len the lenth in the array
-   *
-   * @throws IOException if an errror occurs
-   */
-  void writeDoubles(double[] data, int offset, int len)
-    throws IOException;
-
-  /**
-   * Writes a <code>float</code> into the stream.
-   *
-   * @param data the data to be written
-   *
-   * @throws IOException if an errror occurs
-   */
-  void writeFloat(float data) throws IOException;
-
-  /**
-   * Writes an array of <code>float</code> into the stream.
-   *
-   * @param data the data to be written
-   * @param offset the offset in the array
-   * @param len the lenth in the array
-   *
-   * @throws IOException if an errror occurs
-   */
-  void writeFloats(float[] data, int offset, int len) throws IOException;
-
-  /**
-   * Writes a <code>int</code> into the stream.
-   *
-   * @param data the data to be written
-   *
-   * @throws IOException if an errror occurs
-   */
-  void writeInt(int data) throws IOException;
-
-  /**
-   * Writes an array of <code>int</code> into the stream.
-   *
-   * @param data the data to be written
-   * @param offset the offset in the array
-   * @param len the lenth in the array
-   *
-   * @throws IOException if an errror occurs
-   */
-  void writeInts(int[] data, int offset, int len) throws IOException;
-
-  /**
-   * Writes a <code>long</code> into the stream.
-   *
-   * @param data the data to be written
-   *
-   * @throws IOException if an errror occurs
-   */
-  void writeLong(long data) throws IOException;
-
-  /**
-   * Writes an array of <code>long</code> into the stream.
-   *
-   * @param data the data to be written
-   * @param offset the offset in the array
-   * @param len the lenth in the array
-   *
-   * @throws IOException if an errror occurs
-   */
-  void writeLongs(long[] data, int offset, int len) throws IOException;
-
-  /**
-   * Writes a <code>short</code> into the stream.
-   *
-   * @param data the data to be written
-   *
-   * @throws IOException if an errror occurs
-   */
-  void writeShort(int data) throws IOException;
-
-  /**
-   * Writes an array of <code>short</code> into the stream.
-   *
-   * @param data the data to be written
-   * @param offset the offset in the array
-   * @param len the lenth in the array
-   *
-   * @throws IOException if an errror occurs
-   */
-  void writeShorts(short[] data, int offset, int len) throws IOException;
-
-  /**
-   * Writes a <code>String</code> into the stream.
-   *
-   * @param data the data to be written
-   *
-   * @throws IOException if an errror occurs
-   */
-  void writeUTF(String data) throws IOException;
+  // FIXME: Incomplete. This interface is merely present in order to
+  // allow compilation of the javax.imageio.spi package, for which GNU
+  // Classpath does provide an implementation.
 }
