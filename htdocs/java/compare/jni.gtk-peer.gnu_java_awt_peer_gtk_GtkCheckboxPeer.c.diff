--- /home/tromey/gnu/Nightly/classpath/classpath/native/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkCheckboxPeer.c	2004-05-01 02:26:14.000000000 -0600
+++ jni/gtk-peer/gnu_java_awt_peer_gtk_GtkCheckboxPeer.c	2004-04-21 02:18:12.000000000 -0600
@@ -42,6 +42,40 @@
 
 static void item_toggled (GtkToggleButton *item, jobject peer);
 
+JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GtkCheckboxGroupPeer_dispose
+  (JNIEnv *env, jobject obj)
+{
+  /* The actual underlying widget is owned by a different class.  So
+     we just clean up the hash table here.  */
+  NSA_DEL_PTR (env, obj);
+}
+
+JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GtkCheckboxGroupPeer_remove
+  (JNIEnv *env, jobject obj, jobject checkbox)
+{
+  GtkRadioButton *button;
+  void *ptr;
+  GSList *list;
+
+  ptr = NSA_GET_PTR (env, checkbox);
+  gdk_threads_enter ();
+  button = GTK_RADIO_BUTTON (ptr);
+
+  /* Update the group to point to some other widget in the group.  We
+     have to do this because Gtk doesn't have a separate object to
+     represent a radio button's group.  */
+  for (list = gtk_radio_button_group (button); list != NULL;
+       list = list->next)
+    {
+      if (list->data != button)
+	break;
+    }
+
+  gdk_threads_leave ();
+
+  NSA_SET_PTR (env, obj, list ? list->data : NULL);
+}
+
 JNIEXPORT void JNICALL
 Java_gnu_java_awt_peer_gtk_GtkCheckboxPeer_nativeCreate
   (JNIEnv *env, jobject obj, jobject group, jboolean state)
