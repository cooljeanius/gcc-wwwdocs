--- /home/tromey/gnu/Nightly/classpath/classpath/java/net/URLStreamHandler.java	2003-11-27 02:20:16.000000000 -0700
+++ java/net/URLStreamHandler.java	2003-11-27 02:18:12.000000000 -0700
@@ -218,6 +218,7 @@
               }
             catch (IOException e)
               {
+		// Do nothing.
               }
           }
 
@@ -243,6 +244,9 @@
     setURL(url, url.getProtocol(), host, port, file, ref);
   }
   
+  /*
+   * Canonicalize a filename.
+   */
   private static String canonicalizeFilename(String file)
   {
     // XXX - GNU Classpath has an implementation that might be more appropriate
@@ -275,6 +279,8 @@
    * @param url1 The first url
    * @param url2 The second url to compare with the first
    * 
+   * @return True if both URLs point to the same file, false otherwise.
+   *
    * @specnote Now protected
    */
   protected boolean sameFile(URL url1, URL url2)
@@ -363,6 +369,8 @@
    *
    * @param url1 An URL object
    * @param url2 An URL object
+   *
+   * @return True if both given URLs are equal, false otherwise.
    */
   protected boolean equals (URL url1, URL url2)
   {
@@ -395,6 +403,11 @@
   /**
    * Compares the host components of two URLs.
    *
+   * @param url1 The first URL.
+   * @param url2 The second URL.
+   *
+   * @return True if both URLs contain the same host.
+   *
    * @exception UnknownHostException If an unknown host is found
    */
   protected boolean hostsEqual (URL url1, URL url2)
@@ -417,6 +430,10 @@
   /**
    * Get the IP address of our host. An empty host field or a DNS failure will
    * result in a null return.
+   *
+   * @param url The URL to return the host address for.
+   *
+   * @return The address of the hostname in url.
    */
   protected InetAddress getHostAddress (URL url)
   {
@@ -438,6 +455,8 @@
   /**
    * Returns the default port for a URL parsed by this handler. This method is
    * meant to be overidden by handlers with default port numbers.
+   *
+   * @return The default port number.
    */
   protected int getDefaultPort ()
   {
@@ -447,6 +466,10 @@
   /**
    * Provides the default hash calculation. May be overidden by handlers for
    * other protocols that have different requirements for hashCode calculation.
+   *
+   * @param url The URL to calc the hashcode for.
+   * 
+   * @return The hashcode for the given URL.
    */
   protected int hashCode (URL url)
   {
@@ -462,6 +485,8 @@
    * that have a different syntax should override this method
    *
    * @param url The URL object to convert
+   *
+   * @return A string representation of the url
    */
   protected String toExternalForm(URL u)
   {
@@ -498,9 +523,9 @@
 	if (user != null && !"".equals(user))
 	  sb.append(user).append('@');
 	sb.append(host);
-    
-	// Append port if port was in URL spec.
-	if (port >= 0)
+
+        // Append port if port was in URL spec.
+        if (port >= 0)
           sb.append(':').append(port);
       }
 
