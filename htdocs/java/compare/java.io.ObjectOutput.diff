--- /home/tromey/gnu/Nightly/classpath/classpath/java/io/ObjectOutput.java	Mon Mar 10 02:19:32 2003
+++ java/io/ObjectOutput.java	Tue Jan 22 16:01:33 2002
@@ -1,5 +1,5 @@
 /* ObjectOutput.java -- Interface for writing objects to a stream
-   Copyright (C) 1998, 2003 Free Software Foundation, Inc.
+   Copyright (C) 1998 Free Software Foundation, Inc.
 
 This file is part of GNU Classpath.
 
@@ -41,80 +41,87 @@
 /**
   * This interface extends <code>DataOutput</code> to provide the additional
   * facility of writing object instances to a stream.  It also adds some
-  * additional methods to make the interface more 
-  * <code>OutputStream</code> like.
+  * additional methods to make the interface more <code>OutputStream</code> like.
+  *
+  * @version 0.0
   *
   * @author Aaron M. Renn (arenn@urbanophile.com)
   */
 public interface ObjectOutput extends DataOutput
 {
 
-  /**
-    * This method writes the specified byte to the output stream.
-    *
-    * @param b The byte to write.
-    *
-    * @exception IOException If an error occurs.
-    */
-  public abstract void write(int b) throws IOException;
-
-  /*************************************************************************/
-
-  /**
-    * This method writes all the bytes in the specified byte array to the
-    * output stream.
-    *
-    * @param buf The array of bytes to write.
-    * 
-    * @exception IOException If an error occurs.
-    */
-  public abstract void write(byte[] buf) throws IOException;
-
-  /*************************************************************************/
-
-  /**
-    * This method writes <code>len</code> bytes from the specified array
-    * starting at index <code>offset</code> into that array.
-    *
-    * @param buf The byte array to write from.
-    * @param offset The index into the byte array to start writing from.
-    * @param len The number of bytes to write.
-    *
-    * @exception IOException If an error occurs.
-    */
-  public abstract void write(byte[] buf, int offset, int len) 
-    throws IOException;
-
-  /*************************************************************************/
-
-  /**
-    * This method writes a object instance to a stream.  The format of the
-    * data written is determined by the actual implementation of this method
-    *
-    * @param obj The object to write
-    *
-    * @exception IOException If an error occurs
-    */
-  public abstract void writeObject(Object obj) throws IOException;
-
-  /*************************************************************************/
-
-  /**
-    * This method causes any buffered data to be flushed out to the underlying
-    * stream
-    *
-    * @exception IOException If an error occurs
-    */
-  public abstract void flush() throws IOException;
-
-  /*************************************************************************/
-
-  /**
-    * This method closes the underlying stream.
-    *
-    * @exception IOException If an error occurs
-    */
-  public abstract void close() throws IOException;
+
+/**
+  * This method writes the specified byte to the output stream.
+  *
+  * @param b The byte to write.
+  *
+  * @exception IOException If an error occurs.
+  */
+public abstract void
+write(int b) throws IOException;
+
+/*************************************************************************/
+
+/**
+  * This method writes all the bytes in the specified byte array to the
+  * output stream.
+  *
+  * @param buf The array of bytes to write.
+  * 
+  * @exception IOException If an error occurs.
+  */
+public abstract void
+write(byte[] buf) throws IOException;
+
+/*************************************************************************/
+
+/**
+  * This method writes <code>len</code> bytes from the specified array
+  * starting at index <code>offset</code> into that array.
+  *
+  * @param buf The byte array to write from.
+  * @param offset The index into the byte array to start writing from.
+  * @param len The number of bytes to write.
+  *
+  * @exception IOException If an error occurs.
+  */
+public abstract void
+write(byte[] buf, int offset, int len) throws IOException;
+
+/*************************************************************************/
+
+/**
+  * This method writes a object instance to a stream.  The format of the
+  * data written is determined by the actual implementation of this method
+  *
+  * @param obj The object to write
+  *
+  * @exception IOException If an error occurs
+  */
+public abstract void
+writeObject(Object obj) throws IOException;
+
+/*************************************************************************/
+
+/**
+  * This method causes any buffered data to be flushed out to the underlying
+  * stream
+  *
+  * @exception IOException If an error occurs
+  */
+public abstract void
+flush() throws IOException;
+
+/*************************************************************************/
+
+/**
+  * This method closes the underlying stream.
+  *
+  * @exception IOException If an error occurs
+  */
+public abstract void
+close() throws IOException;
 
 } // interface ObjectOutput
 
