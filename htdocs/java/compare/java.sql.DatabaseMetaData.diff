--- /home/tromey/gnu/Nightly/classpath/classpath/java/sql/DatabaseMetaData.java	2004-04-19 02:20:15.000000000 -0600
+++ java/sql/DatabaseMetaData.java	2003-10-13 02:17:51.000000000 -0600
@@ -412,7 +412,7 @@
    * each table.
    *
    * @return <code>true</code> if the database uses a separate file for each
-   * table <code>false</code> otherwise.
+   * table </code>false</code> otherwise.
    *
    * @exception SQLException If an error occurs.
    */
@@ -433,8 +433,8 @@
    * This method tests whether or not the database treats mixed case
    * identifiers as all upper case.
    *
-   * @return <code>true</code> if the database treats all identifiers as
-   *         upper case, <code>false</code> otherwise.
+   * @exception <code>true</code> if the database treats all identifiers as
+   *            upper case, <code>false</code> otherwise.
    * @exception SQLException If an error occurs.
    */
   boolean storesUpperCaseIdentifiers() throws SQLException;
@@ -443,8 +443,8 @@
    * This method tests whether or not the database treats mixed case
    * identifiers as all lower case.
    *
-   * @return <code>true</code> if the database treats all identifiers as
-   *         lower case, <code>false</code> otherwise.
+   * @exception <code>true</code> if the database treats all identifiers as
+   *            lower case, <code>false</code> otherwise.
    * @exception SQLException If an error occurs.
    */
   boolean storesLowerCaseIdentifiers() throws SQLException;
@@ -473,8 +473,8 @@
    * This method tests whether or not the database treats mixed case
    * quoted identifiers as all upper case.
    *
-   * @return <code>true</code> if the database treats all quoted identifiers 
-   *         as upper case, <code>false</code> otherwise.
+   * @exception <code>true</code> if the database treats all quoted identifiers 
+   *            as upper case, <code>false</code> otherwise.
    * @exception SQLException If an error occurs.
    */
   boolean storesUpperCaseQuotedIdentifiers() throws SQLException;
@@ -483,8 +483,8 @@
    * This method tests whether or not the database treats mixed case
    * quoted identifiers as all lower case.
    *
-   * @return <code>true</code> if the database treats all quoted identifiers 
-   *         as lower case, <code>false</code> otherwise.
+   * @exception <code>true</code> if the database treats all quoted identifiers 
+   *            as lower case, <code>false</code> otherwise.
    * @exception SQLException If an error occurs.
    */
   boolean storesLowerCaseQuotedIdentifiers() throws SQLException;
@@ -1377,18 +1377,18 @@
    * <p>
    * <ol>
    * <li>PROCEDURE_CAT - The catalog the procedure is in, which may be 
-   * <code>null</code>.</li>
+   * <code>null</code>.
    * <li>PROCEDURE_SCHEM - The schema the procedures is in, which may be
-   * <code>null</code>.</li>
-   * <li>PROCEDURE_NAME - The name of the procedure.</li>
-   * <li>Unused</li>
-   * <li>Unused</li>
-   * <li>Unused</li>
-   * <li>REMARKS - A description of the procedure</li>
+   * <code>null</code>.
+   * <li>PROCEDURE_NAME - The name of the procedure.
+   * <li>Unused
+   * <li>Unused
+   * <li>Unused
+   * <li>REMARKS - A description of the procedure
    * <li>PROCEDURE_TYPE - Indicates the return type of the procedure, which 
    * is one of the contstants defined in this class 
    * (<code>procedureResultUnknown</code>, <code>procedureNoResult</code>, or
-   * <code>procedureReturnsResult</code>).</li>
+   * <code>procedureReturnsResult</code>).
    * </ol>
    *
    * @param catalog The name of the catalog to return stored procedured from,
@@ -1409,27 +1409,27 @@
    * <p>
    * <ol>
    * <li>PROCEDURE_CAT - The catalog the procedure is in, which may be 
-   * <code>null</code>.</li>
+   * <code>null</code>.
    * <li>PROCEDURE_SCHEM - The schema the procedures is in, which may be
-   * <code>null</code>.</li>
-   * <li>PROCEDURE_NAME - The name of the procedure.</li>
-   * <li>COLUMN_NAME - The name of the column</li>
+   * <code>null</code>.
+   * <li>PROCEDURE_NAME - The name of the procedure.
+   * <li>COLUMN_NAME - The name of the column
    * <li>COLUMN_TYPE - The type of the column, which will be one of the
    * contants defined in this class (<code>procedureColumnUnknown</code>,
    * <code>procedureColumnIn</code>, <code>procedureColumnInOut</code>,
    * <code>procedureColumnOut</code>, <code>procedureColumnReturn</code>,
-   * or <code>procedureColumnResult</code>).</li>
+   * or <code>procedureColumnResult</code>).
    * <li>DATA_TYPE - The SQL type of the column. This is one of the constants
-   * defined in <code>Types</code>.</li>
-   * <li>TYPE_NAME - The string name of the data type for this column.</li>
-   * <li>PRECISION - The precision of the column.</li>
-   * <li>LENGTH - The length of the column in bytes</li>
-   * <li>SCALE - The scale of the column.</li>
-   * <li>RADIX - The radix of the column.</li>
+   * defined in <code>Types</code>.
+   * <li>TYPE_NAME - The string name of the data type for this column.
+   * <li>PRECISION - The precision of the column.
+   * <li>LENGTH - The length of the column in bytes
+   * <li>SCALE - The scale of the column.
+   * <li>RADIX - The radix of the column.
    * <li>NULLABLE - Whether or not the column is NULLABLE.  This is one of
    * the constants defined in this class (<code>procedureNoNulls</code>,
-   * <code>procedureNullable</code>, or <code>procedureNullableUnknown</code>)</li>
-   * <li>REMARKS - A description of the column.</li>
+   * <code>procedureNullable</code>, or <code>procedureNullableUnknown</code>)
+   * <li>REMARKS - A description of the column.
    * </ol>
    *
    * @param catalog The name of the catalog to return stored procedured from,
@@ -1448,14 +1448,14 @@
   /**
    * This method returns a list of the requested table as a   
    * <code>ResultSet</code> with the following columns:
-   *
+   * <p>
    * <ol>
-   * <li>TABLE_CAT - The catalog the table is in, which may be <code>null</code>.</li>
-   * <li>TABLE_SCHEM - The schema the table is in, which may be <code>null</code>.</li>
-   * <li>TABLE_NAME - The name of the table.</li>
+   * <li>TABLE_CAT - The catalog the table is in, which may be <code>null</code>.
+   * <li>TABLE_SCHEM - The schema the table is in, which may be <code>null</code>.
+   * <li>TABLE_NAME - The name of the table.
    * <li>TABLE_TYPE - A string describing the table type.  This will be one
-   * of the values returned by the <code>getTableTypes()</code> method.</li>
-   * <li>REMARKS - Comments about the table.</li>
+   * of the values returned by the <code>getTableTypes()</code> method.
+   * <li>REMARKS - Comments about the table.
    * </ol>
    * 
    * @param catalog The name of the catalog to return tables from,
@@ -1507,29 +1507,29 @@
    * <p>
    * <ol>
    * <li>TABLE_CAT - The catalog the table is in, which may be 
-   * <code>null</code>.</li>
+   * <code>null</code>.
    * <li>TABLE_SCHEM - The schema the tables is in, which may be
-   * <code>null</code>.</li>
-   * <li>TABLE_NAME - The name of the table.</li>
-   * <li>COLUMN_NAME - The name of the column</li>
+   * <code>null</code>.
+   * <li>TABLE_NAME - The name of the table.
+   * <li>COLUMN_NAME - The name of the column
    * <li>DATA_TYPE - The SQL type of the column. This is one of the constants
-   * defined in <code>Types</code>.</li>
-   * <li>TYPE_NAME - The string name of the data type for this column.</li>
-   * <li>COLUMN_SIZE - The size of the column.</li>
-   * <li>Unused</li>
-   * <li>NUM_PREC_RADIX - The radix of the column.</li>
+   * defined in <code>Types</code>.
+   * <li>TYPE_NAME - The string name of the data type for this column.
+   * <li>COLUMN_SIZE - The size of the column.
+   * <li>Unused
+   * <li>NUM_PREC_RADIX - The radix of the column.
    * <li>NULLABLE - Whether or not the column is NULLABLE.  This is one of
    * the constants defined in this class (<code>tableNoNulls</code>,
-   * <code>tableNullable</code>, or <code>tableNullableUnknown</code>)</li>
-   * <li>REMARKS - A description of the column.</li>
-   * <li>COLUMN_DEF - The default value for the column, may be <code>null</code>.</li>
-   * <li>SQL_DATA_TYPE - Unused</li>
-   * <li>SQL_DATETIME_SUB - Unused</li>
+   * <code>tableNullable</code>, or <code>tableNullableUnknown</code>)
+   * <li>REMARKS - A description of the column.
+   * <li>COLUMN_DEF - The default value for the column, may be <code>null</code>.
+   * <li>SQL_DATA_TYPE - Unused
+   * <li>SQL_DATETIME_SUB - Unused
    * <li>CHAR_OCTET_LENGTH - For character columns, the maximum number of bytes
-   * in the column.</li>
-   * <li>ORDINAL_POSITION - The index of the column in the table.</li>
+   * in the column.
+   * <li>ORDINAL_POSITION - The index of the column in the table.
    * <li>IS_NULLABLE - "NO" means no, "YES" means maybe, and an empty string
-   * means unknown.</li>
+   * means unknown.
    * </ol>
    *
    * @param catalog The name of the catalog to return table from,
@@ -1548,19 +1548,19 @@
    * This method returns the access rights that have been granted to the
    * requested columns.  This information is returned as a <code>ResultSet</code>
    * with the following columns:
-   *
+   * <p>
    * <ol>
    * <li>TABLE_CAT - The catalog the table is in, which may be 
-   * <code>null</code>.</li>
+   * <code>null</code>.
    * <li>TABLE_SCHEM - The schema the tables is in, which may be
-   * <code>null</code>.</li>
-   * <li>TABLE_NAME - The name of the table.</li>
-   * <li>COLUMN_NAME - The name of the column.</li>
-   * <li>GRANTOR - The entity that granted the access.</li>
-   * <li>GRANTEE - The entity granted the access.</li>
-   * <li>PRIVILEGE - The name of the privilege granted.</li>
+   * <code>null</code>.
+   * <li>TABLE_NAME - The name of the table.
+   * <li>COLUMN_NAME - The name of the column.
+   * <li>GRANTOR - The entity that granted the access.
+   * <li>GRANTEE - The entity granted the access.
+   * <li>PRIVILEGE - The name of the privilege granted.
    * <li>IS_GRANTABLE - "YES" if the grantee can grant the privilege to
-   * others, "NO" if not, and <code>null</code> if unknown.</li>
+   * others, "NO" if not, and <code>null</code> if unknown.
    * </ol>
    *
    * @param catalog The catalog to retrieve information from, or the empty string
@@ -1580,18 +1580,18 @@
    * This method returns the access rights that have been granted to the
    * requested tables.  This information is returned as a <code>ResultSet</code>
    * with the following columns:
-   *
+   * <p>
    * <ol>
    * <li>TABLE_CAT - The catalog the table is in, which may be 
-   * <code>null</code>.</li>
+   * <code>null</code>.
    * <li>TABLE_SCHEM - The schema the tables is in, which may be
-   * <code>null</code>.</li>
-   * <li>TABLE_NAME - The name of the table.</li>
-   * <li>GRANTOR - The entity that granted the access.</li>
-   * <li>GRANTEE - The entity granted the access.</li>
-   * <li>PRIVILEGE - The name of the privilege granted.</li>
+   * <code>null</code>.
+   * <li>TABLE_NAME - The name of the table.
+   * <li>GRANTOR - The entity that granted the access.
+   * <li>GRANTEE - The entity granted the access.
+   * <li>PRIVILEGE - The name of the privilege granted.
    * <li>IS_GRANTABLE - "YES" if the grantee can grant the privilege to
-   * others, "NO" if not, and <code>null</code> if unknown.</li>
+   * others, "NO" if not, and <code>null</code> if unknown.
    * </ol>
    *
    * @param catalog The catalog to retrieve information from, or the empty string
@@ -1611,22 +1611,22 @@
    * This method returns the best set of columns for uniquely identifying
    * a row.  It returns this information as a <code>ResultSet</code> with
    * the following columns:
-   *
+   * <p>
    * <ol>
    * <li>SCOPE - The scope of the results returned.  This is one of the 
    * constants defined in this class (<code>bestRowTemporary</code>,
-   * <code>bestRowTransaction</code>, or <code>bestRowSession</code>).</li>
-   * <li>COLUMN_NAME - The name of the column.</li>
+   * <code>bestRowTransaction</code>, or <code>bestRowSession</code>).
+   * <li>COLUMN_NAME - The name of the column.
    * <li>DATA_TYPE - The SQL type of the column. This is one of the constants
-   * defined in <code>Types</code>.</li>
-   * <li>TYPE_NAME - The string name of the data type for this column.</li>
-   * <li>COLUMN_SIZE - The precision of the columns</li>
-   * <li>BUFFER_LENGTH - Unused</li>
-   * <li>DECIMAL_DIGITS - The scale of the column.</li>
+   * defined in <code>Types</code>.
+   * <li>TYPE_NAME - The string name of the data type for this column.
+   * <li>COLUMN_SIZE - The precision of the columns
+   * <li>BUFFER_LENGTH - Unused
+   * <li>DECIMAL_DIGITS - The scale of the column.
    * <li>PSEUDO_COLUMN - Whether or not the best row identifier is a
    * pseudo_column.  This is one of the constants defined in this class 
    * (<code>bestRowUnknown</code>, <code>bestRowNotPseudo</code>, or
-   * <code>bestRowPseudo</code>).</li>
+   * <code>bestRowPseudo</code>).
    * </ol>
    *
    * @param catalog The catalog to retrieve information from, or the empty string
@@ -1649,20 +1649,20 @@
    * This method returns the set of columns that are automatically updated
    * when the row is update. It returns this information as a 
    * <code>ResultSet</code> with the following columns:
-   *
+   * <p>
    * <ol>
-   * <li>SCOPE - Unused</li>
-   * <li>COLUMN_NAME - The name of the column.</li>
+   * <li>SCOPE - Unused
+   * <li>COLUMN_NAME - The name of the column.
    * <li>DATA_TYPE - The SQL type of the column. This is one of the constants
-   * defined in <code>Types</code>.</li>
-   * <li>TYPE_NAME - The string name of the data type for this column.</li>
-   * <li>COLUMN_SIZE - The precision of the columns</li>
-   * <li>BUFFER_LENGTH - Unused</li>
-   * <li>DECIMAL_DIGITS - The scale of the column.</li>
+   * defined in <code>Types</code>.
+   * <li>TYPE_NAME - The string name of the data type for this column.
+   * <li>COLUMN_SIZE - The precision of the columns
+   * <li>BUFFER_LENGTH - Unused
+   * <li>DECIMAL_DIGITS - The scale of the column.
    * <li>PSEUDO_COLUMN - Whether or not the best row identifier is a
    * pseudo_column.  This is one of the constants defined in this class 
    * (<code>versionRowUnknown</code>, <code>versionRowNotPseudo</code>, or
-   * <code>versionRowPseudo</code>).</li>
+   * <code>versionRowPseudo</code>).
    * </ol>
    *
    * @param catalog The catalog to retrieve information from, or the empty string
@@ -1681,14 +1681,14 @@
   /**
    * This method returns a list of a table's primary key columns.  These
    * are returned as a <code>ResultSet</code> with the following columns.
-   *
+   * <p>
    * <ol>
-   * <li>TABLE_CAT - The catalog of the table, which may be <code>null</code>.</li>
-   * <li>TABLE_SCHEM - The schema of the table, which may be <code>null</code>.</li>
-   * <li>TABLE_NAME - The name of the table.</li>
-   * <li>COLUMN_NAME - The name of the column.</li>
-   * <li>KEY_SEQ - The sequence number of the column within the primary key.</li>
-   * <li>PK_NAME - The name of the primary key, which may be <code>null</code>.</li>
+   * <li>TABLE_CAT - The catalog of the table, which may be <code>null</code>.
+   * <li>TABLE_SCHEM - The schema of the table, which may be <code>null</code>.
+   * <li>TABLE_NAME - The name of the table.
+   * <li>COLUMN_NAME - The name of the column.
+   * <li>KEY_SEQ - The sequence number of the column within the primary key.
+   * <li>PK_NAME - The name of the primary key, which may be <code>null</code>.
    * </ol>
    *
    * @param catalog The catalog to retrieve information from, or the empty string
@@ -1707,32 +1707,32 @@
   /**
    * This method returns a list of the table's foreign keys.  These are
    * returned as a <code>ResultSet</code> with the following columns:
-   *
+   * <p>
    * <ol>
-   * <li>PKTABLE_CAT - The catalog of the table the key was imported from.</li>
-   * <li>PKTABLE_SCHEM - The schema of the table the key was imported from.</li>
-   * <li>PKTABLE_NAME - The name of the table the key was imported from.</li>
-   * <li>PKCOLUMN_NAME - The name of the column that was imported.</li>
-   * <li>FKTABLE_CAT - The foreign key catalog name.</li>
-   * <li>FKTABLE_SCHEM - The foreign key schema name.</li>
-   * <li>FKTABLE_NAME - The foreign key table name.</li>
-   * <li>FKCOLUMN_NAME - The foreign key column name.</li>
-   * <li>KEY_SEQ - The sequence number of the column within the foreign key.</li>
+   * <li>PKTABLE_CAT - The catalog of the table the key was imported from.
+   * <li>PKTABLE_SCHEM - The schema of the table the key was imported from.
+   * <li>PKTABLE_NAME - The name of the table the key was imported from.
+   * <li>PKCOLUMN_NAME - The name of the column that was imported.
+   * <li>FKTABLE_CAT - The foreign key catalog name.
+   * <li>FKTABLE_SCHEM - The foreign key schema name.
+   * <li>FKTABLE_NAME - The foreign key table name.
+   * <li>FKCOLUMN_NAME - The foreign key column name.
+   * <li>KEY_SEQ - The sequence number of the column within the foreign key.
    * <li>UPDATE_RULE - How the foreign key behaves when the primary key is
    * updated.  This is one of the constants defined in this class 
    * (<code>importedNoAction</code>, <code>importedKeyCascade</code>,
    * <code>importedKeySetNull</code>, <code>importedKeySetDefault</code>, or
-   * <code>importedKeyRestrict</code>).</li>
+   * <code>importedKeyRestrict</code>).
    * <li>DELETE_RULE - How the foreign key behaves when the primary key is
    * deleted.  This is one of the constants defined in this class 
    * (<code>importedNoAction</code>, <code>importedKeyCascade</code>,
-   * <code>importedKeySetNull</code>, or <code>importedKeySetDefault</code>)</li>
-   * <li>FK_NAME - The name of the foreign key.</li>
-   * <li>PK_NAME - The name of the primary key.</li>
+   * <code>importedKeySetNull</code>, or <code>importedKeySetDefault</code>)
+   * <li>FK_NAME - The name of the foreign key.
+   * <li>PK_NAME - The name of the primary key.
    * <li>DEFERRABILITY - The deferrability value.  This is one of the
    * constants defined in this table (<code>importedKeyInitiallyDeferred</code>,
    * <code>importedKeyInitiallyImmediate</code>, or
-   * <code>importedKeyNotDeferrable</code>).</li>
+   * <code>importedKeyNotDeferrable</code>).
    * </ol>
    *
    * @param catalog The catalog to retrieve information from, or the empty string
@@ -1753,32 +1753,32 @@
    * This method returns a list of the table's which use this table's
    * primary key as a foreign key.  The information is
    * returned as a <code>ResultSet</code> with the following columns:
-   *
+   * <p>
    * <ol>
-   * <li>PKTABLE_CAT - The catalog of the table the key was imported from.</li>
-   * <li>PKTABLE_SCHEM - The schema of the table the key was imported from.</li>
-   * <li>PKTABLE_NAME - The name of the table the key was imported from.</li>
-   * <li>PKCOLUMN_NAME - The name of the column that was imported.</li>
-   * <li>FKTABLE_CAT - The foreign key catalog name.</li>
-   * <li>FKTABLE_SCHEM - The foreign key schema name.</li>
-   * <li>FKTABLE_NAME - The foreign key table name.</li>
-   * <li>FKCOLUMN_NAME - The foreign key column name.</li>
-   * <li>KEY_SEQ - The sequence number of the column within the foreign key.</li>
+   * <li>PKTABLE_CAT - The catalog of the table the key was imported from.
+   * <li>PKTABLE_SCHEM - The schema of the table the key was imported from.
+   * <li>PKTABLE_NAME - The name of the table the key was imported from.
+   * <li>PKCOLUMN_NAME - The name of the column that was imported.
+   * <li>FKTABLE_CAT - The foreign key catalog name.
+   * <li>FKTABLE_SCHEM - The foreign key schema name.
+   * <li>FKTABLE_NAME - The foreign key table name.
+   * <li>FKCOLUMN_NAME - The foreign key column name.
+   * <li>KEY_SEQ - The sequence number of the column within the foreign key.
    * <li>UPDATE_RULE - How the foreign key behaves when the primary key is
    * updated.  This is one of the constants defined in this class 
    * (<code>importedNoAction</code>, <code>importedKeyCascade</code>,
    * <code>importedKeySetNull</code>, <code>importedKeySetDefault</code>, or
-   * <code>importedKeyRestrict</code>).</li>
+   * <code>importedKeyRestrict</code>).
    * <li>DELETE_RULE - How the foreign key behaves when the primary key is
    * deleted.  This is one of the constants defined in this class 
    * (<code>importedNoAction</code>, <code>importedKeyCascade</code>,
-   * <code>importedKeySetNull</code>, or <code>importedKeySetDefault</code>)</li>
-   * <li>FK_NAME - The name of the foreign key.</li>
-   * <li>PK_NAME - The name of the primary key.</li>
+   * <code>importedKeySetNull</code>, or <code>importedKeySetDefault</code>)
+   * <li>FK_NAME - The name of the foreign key.
+   * <li>PK_NAME - The name of the primary key.
    * <li>DEFERRABILITY - The deferrability value.  This is one of the
    * constants defined in this table (<code>importedKeyInitiallyDeferred</code>,
    * <code>importedKeyInitiallyImmediate</code>, or
-   * <code>importedKeyNotDeferrable</code>).</li>
+   * <code>importedKeyNotDeferrable</code>).
    * </ol>
    *
    * @param catalog The catalog to retrieve information from, or the empty string
@@ -1797,32 +1797,32 @@
    * This method returns a description of how one table imports another
    * table's primary key as a foreign key.  The information is
    * returned as a <code>ResultSet</code> with the following columns:
-   *
+   * <p>
    * <ol>
-   * <li>PKTABLE_CAT - The catalog of the table the key was imported from.</li>
-   * <li>PKTABLE_SCHEM - The schema of the table the key was imported from.</li>
-   * <li>PKTABLE_NAME - The name of the table the key was imported from.</li>
-   * <li>PKCOLUMN_NAME - The name of the column that was imported.</li>
-   * <li>FKTABLE_CAT - The foreign key catalog name.</li>
-   * <li>FKTABLE_SCHEM - The foreign key schema name.</li>
-   * <li>FKTABLE_NAME - The foreign key table name.</li>
-   * <li>FKCOLUMN_NAME - The foreign key column name.</li>
-   * <li>KEY_SEQ - The sequence number of the column within the foreign key.</li>
+   * <li>PKTABLE_CAT - The catalog of the table the key was imported from.
+   * <li>PKTABLE_SCHEM - The schema of the table the key was imported from.
+   * <li>PKTABLE_NAME - The name of the table the key was imported from.
+   * <li>PKCOLUMN_NAME - The name of the column that was imported.
+   * <li>FKTABLE_CAT - The foreign key catalog name.
+   * <li>FKTABLE_SCHEM - The foreign key schema name.
+   * <li>FKTABLE_NAME - The foreign key table name.
+   * <li>FKCOLUMN_NAME - The foreign key column name.
+   * <li>KEY_SEQ - The sequence number of the column within the foreign key.
    * <li>UPDATE_RULE - How the foreign key behaves when the primary key is
    * updated.  This is one of the constants defined in this class 
    * (<code>importedNoAction</code>, <code>importedKeyCascade</code>,
    * <code>importedKeySetNull</code>, <code>importedKeySetDefault</code>, or
-   * <code>importedKeyRestrict</code>).</li>
+   * <code>importedKeyRestrict</code>).
    * <li>DELETE_RULE - How the foreign key behaves when the primary key is
    * deleted.  This is one of the constants defined in this class 
    * (<code>importedNoAction</code>, <code>importedKeyCascade</code>,
-   * <code>importedKeySetNull</code>, or <code>importedKeySetDefault</code>)</li>
-   * <li>FK_NAME - The name of the foreign key.</li>
-   * <li>PK_NAME - The name of the primary key.</li>
+   * <code>importedKeySetNull</code>, or <code>importedKeySetDefault</code>)
+   * <li>FK_NAME - The name of the foreign key.
+   * <li>PK_NAME - The name of the primary key.
    * <li>DEFERRABILITY - The deferrability value.  This is one of the
    * constants defined in this table (<code>importedKeyInitiallyDeferred</code>,
    * <code>importedKeyInitiallyImmediate</code>, or
-   * <code>importedKeyNotDeferrable</code>).</li>
+   * <code>importedKeyNotDeferrable</code>).
    * </ol>
    *
    * @param primCatalog The catalog to retrieve information from, or the empty string
@@ -1850,36 +1850,36 @@
    * This method returns a list of the SQL types supported by this
    * database.  The information is returned as a <code>ResultSet</code>
    * with the following columns:
-   *
+   * <p>
    * <ol>
-   * <li>TYPE_NAME - The name of the data type.</li>
+   * <li>TYPE_NAME - The name of the data type.
    * <li>DATA_TYPE - A data type constant from <code>Types</code> for this
-   * type.</li>
-   * <li>PRECISION - The maximum precision of this type.</li>
+   * type.
+   * <li>PRECISION - The maximum precision of this type.
    * <li>LITERAL_PREFIX - Prefix value used to quote a literal, which may be
-   * <code>null</code>.</li>
+   * <code>null</code>.
    * <li>LITERAL_SUFFIX - Suffix value used to quote a literal, which may be
-   * <code>null</code>.</li>
+   * <code>null</code>.
    * <li>CREATE_PARAMS - The parameters used to create the type, which may be
-   * <code>null</code>.</li>
+   * <code>null</code>.
    * <li>NULLABLE - Whether or not this type supports NULL values.  This will
    * be one of the constants defined in this interface 
    * (<code>typeNoNulls</code>, <code>typeNullable</code>, or
-   * <code>typeNullableUnknown</code>).</li>
-   * <li>CASE_SENSITIVE - Whether or not the value is case sensitive.</li>
+   * <code>typeNullableUnknown</code>).
+   * <li>CASE_SENSITIVE - Whether or not the value is case sensitive.
    * <li>SEARCHABLE - Whether or not "LIKE" expressions are supported in
    * WHERE clauses for this type.  This will be one of the constants defined
    * in this interface (<code>typePredNone</code>, <code>typePredChar</code>,
-   * <code>typePredBasic</code>, or <code>typeSearchable</code>).</li>
-   * <li>UNSIGNED_ATTRIBUTE - Is the value of this type unsigned.</li>
-   * <li>FIXED_PREC_SCALE - Whether or not this type can be used for money.</li>
-   * <li>AUTO_INCREMENT - Whether or not this type supports auto-incrementing.</li>
-   * <li>LOCAL_TYPE_NAME - A localized name for this data type.</li>
-   * <li>MINIMUM_SCALE - The minimum scale supported by this type.</li>
-   * <li>MAXIMUM_SCALE - The maximum scale supported by this type.</li>
-   * <li>SQL_DATA_TYPE - Unused.</li>
-   * <li>SQL_DATETIME_SUB - Unused.</li>
-   * <li>NUM_PREC_RADIX - The radix of this data type.</li>
+   * <code>typePredBasic</code>, or <code>typeSearchable</code>).
+   * <li>UNSIGNED_ATTRIBUTE - Is the value of this type unsigned.
+   * <li>FIXED_PREC_SCALE - Whether or not this type can be used for money.
+   * <li>AUTO_INCREMENT - Whether or not this type supports auto-incrementing.
+   * <li>LOCAL_TYPE_NAME - A localized name for this data type.
+   * <li>MINIMUM_SCALE - The minimum scale supported by this type.
+   * <li>MAXIMUM_SCALE - The maximum scale supported by this type.
+   * <li>SQL_DATA_TYPE - Unused.
+   * <li>SQL_DATETIME_SUB - Unused.
+   * <li>NUM_PREC_RADIX - The radix of this data type.
    * </ol>
    * 
    * @return A <code>ResultSet</code> with the list of available data types.
@@ -1890,30 +1890,30 @@
   /**
    * This method returns information about a tables indices and statistics.
    * It is returned as a <code>ResultSet</code> with the following columns:
-   *
+   * <p>
    * <ol>
-   * <li>TABLE_CAT - The catalog of the table, which may be <code>null</code>.</li>
-   * <li>TABLE_SCHEM - The schema of the table, which may be <code>null</code>.</li>
-   * <li>TABLE_NAME - The name of the table.</li>
-   * <li>NON_UNIQUE - Are index values non-unique?</li>
-   * <li>INDEX_QUALIFIER The index catalog, which may be <code>null</code></li>
-   * <li>INDEX_NAME - The name of the index.</li>
+   * <li>TABLE_CAT - The catalog of the table, which may be <code>null</code>.
+   * <li>TABLE_SCHEM - The schema of the table, which may be <code>null</code>.
+   * <li>TABLE_NAME - The name of the table.
+   * <li>NON_UNIQUE - Are index values non-unique?
+   * <li>INDEX_QUALIFIER The index catalog, which may be <code>null</code>
+   * <li>INDEX_NAME - The name of the index.
    * <li>TYPE - The type of index, which will be one of the constants defined
    * in this interface (<code>tableIndexStatistic</code>,
    * <code>tableIndexClustered</code>, <code>tableIndexHashed</code>, or
-   * <code>tableIndexOther</code>).</li>
+   * <code>tableIndexOther</code>).
    * <li>ORDINAL_POSITION - The sequence number of this column in the index.
-   * This will be 0 when the index type is <code>tableIndexStatistic</code>.</li>
-   * <li>COLUMN_NAME - The name of this column in the index.</li>
+   * This will be 0 when the index type is <code>tableIndexStatistic</code>.
+   * <li>COLUMN_NAME - The name of this column in the index.
    * <li>ASC_OR_DESC - "A" for an ascending sort sequence, "D" for a
    * descending sort sequence or <code>null</code> if a sort sequence is not
-   * supported.</li>
+   * supported.
    * <li>CARDINALITY - The number of unique rows in the index, or the number
-   * of rows in the table if the index type is <code>tableIndexStatistic</code>.</li>
+   * of rows in the table if the index type is <code>tableIndexStatistic</code>.
    * <li>PAGES - The number of pages used for the index, or the number of pages
-   * in the table if the index type is <code>tableIndexStatistic</code>.</li>
+   * in the table if the index type is <code>tableIndexStatistic</code>.
    * <li>FILTER_CONDITION - The filter condition for this index, which may be
-   * <code>null</code>.</li>
+   * <code>null</code>.
    * </ol>
    *
    * @param catalog The catalog to retrieve information from, or the empty string
@@ -2093,16 +2093,16 @@
   /**
    * This method returns the list of user defined data types in use.  These
    * are returned as a <code>ResultSet</code> with the following columns:
-   *
+   * <p>
    * <ol>
-   * <li>TYPE_CAT - The catalog name, which may be <code>null</code>.</li>
-   * <li>TYPE_SCEHM - The schema name, which may be <code>null</code>.</li>
-   * <li>TYPE_NAME - The user defined data type name.</li>
-   * <li>CLASS_NAME - The Java class name this type maps to.</li>
+   * <li>TYPE_CAT - The catalog name, which may be <code>null</code>.
+   * <li>TYPE_SCEHM - The schema name, which may be <code>null</code>.
+   * <li>TYPE_NAME - The user defined data type name.
+   * <li>CLASS_NAME - The Java class name this type maps to.
    * <li>DATA_TYPE - A type identifier from <code>Types</code> for this type.
    * This will be one of <code>JAVA_OBJECT</code>, <code>STRUCT</code>, or
-   * <code>DISTINCT</code>.</li>
-   * <li>REMARKS - Comments about this data type.</li>
+   * <code>DISTINCT</code>.
+   * <li>REMARKS - Comments about this data type.
    * </ol>
    *
    * @param catalog The catalog to retrieve information from, or the empty string
