--- /home/tromey/gnu/Nightly/classpath/classpath/java/security/Signature.java	2003-04-24 02:22:12.000000000 -0600
+++ java/security/Signature.java	2003-04-20 02:20:20.000000000 -0600
@@ -38,12 +38,9 @@
 package java.security;
 
 import java.security.cert.Certificate;
-import java.security.cert.CertificateException;
 import java.security.cert.X509Certificate;
 import java.security.spec.AlgorithmParameterSpec;
 
-import gnu.java.security.Engine;
-
 /**
  * <p>This <code>Signature</code> class is used to provide applications the
  * functionality of a digital signature algorithm. Digital signatures are used
@@ -240,15 +237,7 @@
       throw new IllegalArgumentException("Illegal provider");
 
     Signature result = null;
-    Object o = null;
-    try
-      {
-        o = Engine.getInstance(SIGNATURE, algorithm, provider);
-      }
-    catch (java.lang.reflect.InvocationTargetException ite)
-      {
-	throw new NoSuchAlgorithmException(algorithm);
-      }
+    Object o = Engine.getInstance(SIGNATURE, algorithm, provider);
 
     if (o instanceof SignatureSpi)
       {
@@ -319,26 +308,7 @@
 	  throw new InvalidKeyException(
               "KeyUsage of this Certificate indicates it cannot be used for digital signing");
       }
-    try
-      {
-        this.initVerify(certificate.getPublicKey());
-      }
-    catch (SignatureException se)
-      {
-        throw new InvalidKeyException(se.getMessage());
-      }
-    catch (NoSuchAlgorithmException nsae)
-      {
-        throw new InvalidKeyException(nsae.getMessage());
-      }
-    catch (NoSuchProviderException nspe)
-      {
-        throw new InvalidKeyException(nspe.getMessage());
-      }
-    catch (CertificateException ce)
-      {
-        throw new InvalidKeyException(ce.getMessage());
-      }
+    this.initVerify(certificate.getPublicKey());
   }
 
   /**
