--- /home/tromey/gnu/egcs/classpath/classpath/java/util/TimeZone.java	Thu Mar  8 18:50:03 2001
+++ java/util/TimeZone.java	Wed Mar 21 10:31:29 2001
@@ -118,7 +118,6 @@
        Calendar.APRIL, 1, Calendar.SUNDAY, 2000 * 3600,
        Calendar.OCTOBER, -1, Calendar.SUNDAY, 2000 * 3600);
     timezones.put("PST", tz);
-    timezones.put("PST8PDT", tz);
     timezones.put("America/Dawson", tz);
     timezones.put("America/Los_Angeles", tz);
     timezones.put("America/Tijuana", tz);
@@ -132,7 +131,6 @@
        Calendar.APRIL, 1, Calendar.SUNDAY, 2000 * 3600,
        Calendar.OCTOBER, -1, Calendar.SUNDAY, 2000 * 3600);
     timezones.put("MST", tz);
-    timezones.put("MST7MDT", tz);
     timezones.put("America/Boise", tz);
     timezones.put("America/Chihuahua", tz);
     timezones.put("America/Denver", tz);
@@ -141,8 +139,7 @@
     timezones.put("America/Mazatlan", tz);
     timezones.put("America/Shiprock", tz);
     timezones.put("America/Yellowknife", tz);
-    tz = new SimpleTimeZone(-7000 * 3600, "MST7");
-    timezones.put("MST7", tz);
+    tz = new SimpleTimeZone(-7000 * 3600, "PNT");
     timezones.put("PNT", tz);
     timezones.put("America/Dawson_Creek", tz);
     timezones.put("America/Hermosillo", tz);
@@ -152,7 +149,6 @@
        Calendar.APRIL, 1, Calendar.SUNDAY, 2000 * 3600,
        Calendar.OCTOBER, -1, Calendar.SUNDAY, 2000 * 3600);
     timezones.put("CST", tz);
-    timezones.put("CST6CDT", tz);
     timezones.put("America/Cambridge_Bay", tz);
     timezones.put("America/Cancun", tz);
     timezones.put("America/Chicago", tz);
@@ -183,8 +179,7 @@
        Calendar.OCTOBER, -1, Calendar.SUNDAY, 0 * 3600);
     timezones.put("America/Grand_Turk", tz);
     timezones.put("America/Havana", tz);
-    tz = new SimpleTimeZone(-5000 * 3600, "EST5");
-    timezones.put("EST5", tz);
+    tz = new SimpleTimeZone(-5000 * 3600, "IET");
     timezones.put("IET", tz);
     timezones.put("America/Bogota", tz);
     timezones.put("America/Cayman", tz);
@@ -208,7 +203,6 @@
        Calendar.APRIL, 1, Calendar.SUNDAY, 2000 * 3600,
        Calendar.OCTOBER, -1, Calendar.SUNDAY, 2000 * 3600);
     timezones.put("EST", tz);
-    timezones.put("EST5EDT", tz);
     timezones.put("America/Detroit", tz);
     timezones.put("America/Kentucky/Louisville", tz);
     timezones.put("America/Kentucky/Monticello", tz);
@@ -742,34 +736,16 @@
   /* Look up default timezone */
   static
   {
-    System.loadLibrary("javautil");
+    // System.loadLibrary("javautil");
 
     String tzid = System.getProperty("user.timezone");
 
-    // XXX: Remove call to getDefaultTimeZoneId after java.lang.System
-    // is merged with libgcj.
-    if (tzid == null)
-      tzid = getDefaultTimeZoneId();
-
     if (tzid == null)
       tzid = "GMT";
 
     defaultZone = getTimeZone(tzid);
   }
 
-  /* This method returns us a time zone id string which is in the
-     form <standard zone name><GMT offset><daylight time zone name>.
-     The GMT offset is in seconds, except where it is evenly divisible
-     by 3600, then it is in hours.  If the zone does not observe
-     daylight time, then the daylight zone name is omitted.  Examples:
-     in Chicago, the timezone would be CST6CDT.  In Indianapolis 
-     (which does not have Daylight Savings Time) the string would
-     be EST5
-   */
-  // XXX: Remove getDefaultTimeZoneId after java.lang.System
-  // is merged with libgcj.
-  private static native String getDefaultTimeZoneId();
-
   /**
    * Gets the time zone offset, for current date, modified in case of 
    * daylight savings.  This is the offset to add to UTC to get the local
@@ -956,6 +932,7 @@
    * @return The time zone for the identifier or GMT, if no such time
    * zone exists.
    */
+  // FIXME: XXX: JCL indicates this and other methods are synchronized.
   public static TimeZone getTimeZone(String ID)
   {
     // First check timezones hash
