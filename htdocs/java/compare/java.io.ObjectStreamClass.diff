--- /home/tromey/gnu/Nightly/classpath/classpath/java/io/ObjectStreamClass.java	2004-02-26 02:21:32.000000000 -0700
+++ java/io/ObjectStreamClass.java	2004-02-07 02:18:36.000000000 -0700
@@ -327,7 +327,7 @@
 	i = 0; j = 0; k = 0;
 	while (i < fields.length && j < exportedFields.length)
 	  {
-	    int comp = fields[i].compareTo(exportedFields[j]);
+	    int comp = fields[i].getName().compareTo(exportedFields[j].getName());
 
 	    if (comp < 0)
 	      {
@@ -344,27 +344,10 @@
 		newFieldList[k] = exportedFields[j];
 		newFieldList[k].setPersistent(true);
 		newFieldList[k].setToSet(false);
-		try
-		  {
-		    newFieldList[k].lookupField(clazz);
-		    newFieldList[k].checkFieldType();
-		  }
-		catch (NoSuchFieldException _)
-		  {
-		  }
 		j++;
 	      }
 	    else
 	      {
-		try
-		  {
-		    exportedFields[j].lookupField(clazz);
-		    exportedFields[j].checkFieldType();
-		  }
-		catch (NoSuchFieldException _)
-		  {
-		  }
-
 		if (!fields[i].getType().equals(exportedFields[j].getType()))
 		  throw new InvalidClassException
 		    ("serialPersistentFields must be compatible with" +
@@ -571,19 +554,6 @@
 	    if (fields != null)
 	      {
 		Arrays.sort (fields);
-		// Retrieve field reference.
-		for (int i=0; i < fields.length; i++)
-		  {
-		    try
-		      {
-			fields[i].lookupField(cl);
-		      }
-		    catch (NoSuchFieldException _)
-		      {
-			fields[i].setToSet(false);
-		      }
-		  }
-		
 		calculateOffsets();
 		return;
 	      }
@@ -828,7 +798,7 @@
 
     fieldsArray = new ObjectStreamField[ o.length ];
     System.arraycopy(o, 0, fieldsArray, 0, o.length);
-
+    
     return fieldsArray;
   }
 
