--- /home/tromey/gnu/Nightly/classpath/classpath/java/lang/System.java	2004-04-13 02:20:22.000000000 -0600
+++ java/lang/System.java	2003-09-24 02:18:22.000000000 -0600
@@ -79,15 +79,13 @@
       loadLibrary("javalang");
 
     Properties defaultProperties = Runtime.defaultProperties;
-    defaultProperties.put("gnu.classpath.home",
-		    Configuration.CLASSPATH_HOME);
-    defaultProperties.put("gnu.classpath.version",
-		    Configuration.CLASSPATH_VERSION);
 
     // Set base URL if not already set.
     if (defaultProperties.get("gnu.classpath.home.url") == null)
       defaultProperties.put("gnu.classpath.home.url",
-			    "file://" + Configuration.CLASSPATH_HOME + "/lib");
+			    "file://"
+			    + defaultProperties.get("gnu.classpath.home")
+			    + "/lib");
 
     // Set short name if not already set.
     if (defaultProperties.get("gnu.classpath.vm.shortname") == null)
@@ -100,109 +98,11 @@
       }
 
     defaultProperties.put("gnu.cpu.endian",
-                          VMSystem.isWordsBigEndian() ? "big" : "little");
+			  isWordsBigEndian() ? "big" : "little");
 
-    // Common encoding aliases. See gnu.java.io.EncodingManager.
-    defaultProperties.put("gnu.java.io.encoding_scheme_alias.ISO8859_1",
-                          "8859_1");
-
-    defaultProperties.put("gnu.java.io.encoding_scheme_alias.ISO-8859-1",
-                          "8859_1");
-    defaultProperties.put("gnu.java.io.encoding_scheme_alias.ISO-8859-2",
-                          "8859_2");
-    defaultProperties.put("gnu.java.io.encoding_scheme_alias.ISO-8859-3",
-                          "8859_3");
-    defaultProperties.put("gnu.java.io.encoding_scheme_alias.ISO-8859-4",
-                          "8859_4");
-    defaultProperties.put("gnu.java.io.encoding_scheme_alias.ISO-8859-5",
-                          "8859_5");
-    defaultProperties.put("gnu.java.io.encoding_scheme_alias.ISO-8859-6",
-                          "8859_6");
-    defaultProperties.put("gnu.java.io.encoding_scheme_alias.ISO-8859-7",
-                          "8859_7");
-    defaultProperties.put("gnu.java.io.encoding_scheme_alias.ISO-8859-8",
-                          "8859_8");
-    defaultProperties.put("gnu.java.io.encoding_scheme_alias.ISO-8859-9",
-                          "8859_9");
-
-    defaultProperties.put("gnu.java.io.encoding_scheme_alias.iso-8859-1",
-                          "8859_1");
-    defaultProperties.put("gnu.java.io.encoding_scheme_alias.iso-8859-2",
-                          "8859_2");
-    defaultProperties.put("gnu.java.io.encoding_scheme_alias.iso-8859-3",
-                          "8859_3");
-    defaultProperties.put("gnu.java.io.encoding_scheme_alias.iso-8859-4",
-                          "8859_4");
-    defaultProperties.put("gnu.java.io.encoding_scheme_alias.iso-8859-5",
-                          "8859_5");
-    defaultProperties.put("gnu.java.io.encoding_scheme_alias.iso-8859-6",
-                          "8859_6");
-    defaultProperties.put("gnu.java.io.encoding_scheme_alias.iso-8859-7",
-                          "8859_7");
-    defaultProperties.put("gnu.java.io.encoding_scheme_alias.iso-8859-8",
-                          "8859_8");
-    defaultProperties.put("gnu.java.io.encoding_scheme_alias.iso-8859-9",
-                          "8859_9");
-
-    defaultProperties.put("gnu.java.io.encoding_scheme_alias.iso8859_1",
-                          "8859_1");
-    defaultProperties.put("gnu.java.io.encoding_scheme_alias.iso8859_2",
-                          "8859_2");
-    defaultProperties.put("gnu.java.io.encoding_scheme_alias.iso8859_3",
-                          "8859_3");
-    defaultProperties.put("gnu.java.io.encoding_scheme_alias.iso8859_4",
-                          "8859_4");
-    defaultProperties.put("gnu.java.io.encoding_scheme_alias.iso8859_5",
-                          "8859_5");
-    defaultProperties.put("gnu.java.io.encoding_scheme_alias.iso8859_6",
-                          "8859_6");
-    defaultProperties.put("gnu.java.io.encoding_scheme_alias.iso8859_7",
-                          "8859_7");
-    defaultProperties.put("gnu.java.io.encoding_scheme_alias.iso8859_8",
-                          "8859_8");
-    defaultProperties.put("gnu.java.io.encoding_scheme_alias.iso8859_9",
-                          "8859_9");
-
-    defaultProperties.put("gnu.java.io.encoding_scheme_alias.iso-latin-1",
-                          "8859_1");
-    defaultProperties.put("gnu.java.io.encoding_scheme_alias.iso-latin-2",
-                          "8859_2");
-    defaultProperties.put("gnu.java.io.encoding_scheme_alias.iso-latin-3",
-                          "8859_3");
-    defaultProperties.put("gnu.java.io.encoding_scheme_alias.iso-latin-4",
-                          "8859_4");
-    defaultProperties.put("gnu.java.io.encoding_scheme_alias.iso-latin-5",
-                          "8859_5");
-    defaultProperties.put("gnu.java.io.encoding_scheme_alias.iso-latin-6",
-                          "8859_6");
-    defaultProperties.put("gnu.java.io.encoding_scheme_alias.iso-latin-7",
-                          "8859_7");
-    defaultProperties.put("gnu.java.io.encoding_scheme_alias.iso-latin-8",
-                          "8859_8");
-    defaultProperties.put("gnu.java.io.encoding_scheme_alias.iso-latin-9",
-                          "8859_9");
-
-    defaultProperties.put("gnu.java.io.encoding_scheme_alias.latin1",
-                          "8859_1");
-    defaultProperties.put("gnu.java.io.encoding_scheme_alias.latin2",
-                          "8859_2");
-    defaultProperties.put("gnu.java.io.encoding_scheme_alias.latin3",
-                          "8859_3");
-    defaultProperties.put("gnu.java.io.encoding_scheme_alias.latin4",
-                          "8859_4");
-    defaultProperties.put("gnu.java.io.encoding_scheme_alias.latin5",
-                          "8859_5");
-    defaultProperties.put("gnu.java.io.encoding_scheme_alias.latin6",
-                          "8859_6");
-    defaultProperties.put("gnu.java.io.encoding_scheme_alias.latin7",
-                          "8859_7");
-    defaultProperties.put("gnu.java.io.encoding_scheme_alias.latin8",
-                          "8859_8");
-    defaultProperties.put("gnu.java.io.encoding_scheme_alias.latin9",
-                          "8859_9");
-
-    defaultProperties.put("gnu.java.io.encoding_scheme_alias.UTF-8", "UTF8");
-    defaultProperties.put("gnu.java.io.encoding_scheme_alias.utf-8", "UTF8");
+    // GCJ LOCAL: Classpath sets common encoding aliases here.
+    // Since we don't (yet) have gnu.java.io.EncodingManager, these
+    // are a waste of time and just slow down system startup.
 
     // XXX FIXME - Temp hack for old systems that set the wrong property
     if (defaultProperties.get("java.io.tmpdir") == null)
@@ -230,8 +130,8 @@
    * other processes or files.  That should all be transparent to you,
    * however.
    */
-   public static final InputStream in = VMSystem.makeStandardInputStream();
-
+  public static final InputStream in
+    = new BufferedInputStream(new FileInputStream(FileDescriptor.in));
   /**
    * The standard output PrintStream.  This is assigned at startup and
    * starts its life perfectly valid. Although it is marked final, you can
@@ -242,19 +142,20 @@
    * output to other processes or files.  That should all be transparent to
    * you, however.
    */
-   public static final PrintStream out = VMSystem.makeStandardOutputStream();
-
+  public static final PrintStream out
+    = new PrintStream(new BufferedOutputStream(new FileOutputStream(FileDescriptor.out)), true);
   /**
    * The standard output PrintStream.  This is assigned at startup and
    * starts its life perfectly valid. Although it is marked final, you can
-   * change it using {@link #setErr(PrintStream)} through some hefty VM magic.
+   * change it using {@link #setOut(PrintStream)} through some hefty VM magic.
    *
    * <p>This corresponds to the C stderr and C++ cerr variables, which
    * typically output error messages to the screen, but may be used to pipe
    * output to other processes or files.  That should all be transparent to
    * you, however.
    */
-   public static final PrintStream err = VMSystem.makeStandardErrorStream();
+  public static final PrintStream err
+    = new PrintStream(new BufferedOutputStream(new FileOutputStream(FileDescriptor.err)), true);
 
   /**
    * This class is uninstantiable.
@@ -277,7 +178,7 @@
     SecurityManager sm = Runtime.securityManager; // Be thread-safe.
     if (sm != null)
       sm.checkPermission(new RuntimePermission("setIO"));
-    VMSystem.setIn(in);
+    setIn0(in);
   }
 
   /**
@@ -295,7 +196,7 @@
     if (sm != null)
       sm.checkPermission(new RuntimePermission("setIO"));
     
-    VMSystem.setOut(out);
+    setOut0(out);
   }
 
   /**
@@ -312,7 +213,7 @@
     SecurityManager sm = Runtime.securityManager; // Be thread-safe.
     if (sm != null)
       sm.checkPermission(new RuntimePermission("setIO"));
-    VMSystem.setErr(err);
+    setErr0(err);
   }
 
   /**
@@ -361,9 +262,7 @@
    * @return the current time
    * @see java.util.Date
    */
-  public static long currentTimeMillis() {
-      return VMSystem.currentTimeMillis();
-  }
+  public static native long currentTimeMillis();
 
   /**
    * Copy one array onto another from <code>src[srcStart]</code> ...
@@ -388,11 +287,8 @@
    * @throws IndexOutOfBoundsException if len is negative, or if the start or
    *         end copy position in either array is out of bounds
    */
-  public static void arraycopy(Object src, int srcStart,
-                               Object dest, int destStart, int len)
-  {
-    VMSystem.arraycopy(src, srcStart, dest, destStart, len);
-  }
+  public static native void arraycopy(Object src, int srcStart,
+				      Object dest, int destStart, int len);
 
   /**
    * Get a hash code computed by the VM for the Object. This hash code will
@@ -405,10 +301,7 @@
    * @return the VM-dependent hash code for this Object
    * @since 1.1
    */
-  public static int identityHashCode(Object o)
-  {
-    return VMSystem.identityHashCode(o);
-  }
+  public static native int identityHashCode(Object o);
 
   /**
    * Get all the system properties at once. A security check may be performed,
@@ -417,53 +310,51 @@
    *
    * <p>The required properties include:
    * <dl>
-   * <dt>java.version</dt>         <dd>Java version number</dd>
-   * <dt>java.vendor</dt>          <dd>Java vendor specific string</dd>
-   * <dt>java.vendor.url</dt>      <dd>Java vendor URL</dd>
-   * <dt>java.home</dt>            <dd>Java installation directory</dd>
-   * <dt>java.vm.specification.version</dt> <dd>VM Spec version</dd>
-   * <dt>java.vm.specification.vendor</dt>  <dd>VM Spec vendor</dd>
-   * <dt>java.vm.specification.name</dt>    <dd>VM Spec name</dd>
-   * <dt>java.vm.version</dt>      <dd>VM implementation version</dd>
-   * <dt>java.vm.vendor</dt>       <dd>VM implementation vendor</dd>
-   * <dt>java.vm.name</dt>         <dd>VM implementation name</dd>
-   * <dt>java.specification.version</dt>    <dd>Java Runtime Environment version</dd>
-   * <dt>java.specification.vendor</dt>     <dd>Java Runtime Environment vendor</dd>
-   * <dt>java.specification.name</dt>       <dd>Java Runtime Environment name</dd>
-   * <dt>java.class.version</dt>   <dd>Java class version number</dd>
-   * <dt>java.class.path</dt>      <dd>Java classpath</dd>
-   * <dt>java.library.path</dt>    <dd>Path for finding Java libraries</dd>
-   * <dt>java.io.tmpdir</dt>       <dd>Default temp file path</dd>
-   * <dt>java.compiler</dt>        <dd>Name of JIT to use</dd>
-   * <dt>java.ext.dirs</dt>        <dd>Java extension path</dd>
-   * <dt>os.name</dt>              <dd>Operating System Name</dd>
-   * <dt>os.arch</dt>              <dd>Operating System Architecture</dd>
-   * <dt>os.version</dt>           <dd>Operating System Version</dd>
-   * <dt>file.separator</dt>       <dd>File separator ("/" on Unix)</dd>
-   * <dt>path.separator</dt>       <dd>Path separator (":" on Unix)</dd>
-   * <dt>line.separator</dt>       <dd>Line separator ("\n" on Unix)</dd>
-   * <dt>user.name</dt>            <dd>User account name</dd>
-   * <dt>user.home</dt>            <dd>User home directory</dd>
-   * <dt>user.dir</dt>             <dd>User's current working directory</dd>
+   * <dt>java.version         <dd>Java version number
+   * <dt>java.vendor          <dd>Java vendor specific string
+   * <dt>java.vendor.url      <dd>Java vendor URL
+   * <dt>java.home            <dd>Java installation directory
+   * <dt>java.vm.specification.version <dd>VM Spec version
+   * <dt>java.vm.specification.vendor  <dd>VM Spec vendor
+   * <dt>java.vm.specification.name    <dd>VM Spec name
+   * <dt>java.vm.version      <dd>VM implementation version
+   * <dt>java.vm.vendor       <dd>VM implementation vendor
+   * <dt>java.vm.name         <dd>VM implementation name
+   * <dt>java.specification.version    <dd>Java Runtime Environment version
+   * <dt>java.specification.vendor     <dd>Java Runtime Environment vendor
+   * <dt>java.specification.name       <dd>Java Runtime Environment name
+   * <dt>java.class.version   <dd>Java class version number
+   * <dt>java.class.path      <dd>Java classpath
+   * <dt>java.library.path    <dd>Path for finding Java libraries
+   * <dt>java.io.tmpdir       <dd>Default temp file path
+   * <dt>java.compiler        <dd>Name of JIT to use
+   * <dt>java.ext.dirs        <dd>Java extension path
+   * <dt>os.name              <dd>Operating System Name
+   * <dt>os.arch              <dd>Operating System Architecture
+   * <dt>os.version           <dd>Operating System Version
+   * <dt>file.separator       <dd>File separator ("/" on Unix)
+   * <dt>path.separator       <dd>Path separator (":" on Unix)
+   * <dt>line.separator       <dd>Line separator ("\n" on Unix)
+   * <dt>user.name            <dd>User account name
+   * <dt>user.home            <dd>User home directory
+   * <dt>user.dir             <dd>User's current working directory
    * </dl>
    *
    * In addition, gnu defines several other properties, where ? stands for
    * each character in '0' through '9':
    * <dl>
-   * <dt>gnu.classpath.home</dt>         <dd>Path to the classpath libraries.</dd>
-   * <dt>gnu.classpath.version</dt>      <dd>Version of the classpath libraries.</dd>
-   * <dt>gnu.classpath.vm.shortname</dt> <dd>Succinct version of the VM name;
-   *     used for finding property files in file system</dd>
-   * <dt>gnu.classpath.home.url</dt>     <dd> Base URL; used for finding
-   *     property files in file system</dd>
-   * <dt>gnu.cpu.endian</dt>             <dd>big or little</dd>
-   * <dt>gnu.java.io.encoding_scheme_alias.ISO-8859-?</dt>   <dd>8859_?</dd>
-   * <dt>gnu.java.io.encoding_scheme_alias.iso-8859-?</dt>   <dd>8859_?</dd>
-   * <dt>gnu.java.io.encoding_scheme_alias.iso8859_?</dt>    <dd>8859_?</dd>
-   * <dt>gnu.java.io.encoding_scheme_alias.iso-latin-_?</dt> <dd>8859_?</dd>
-   * <dt>gnu.java.io.encoding_scheme_alias.latin?</dt>       <dd>8859_?</dd>
-   * <dt>gnu.java.io.encoding_scheme_alias.UTF-8</dt>        <dd>UTF8</dd>
-   * <dt>gnu.java.io.encoding_scheme_alias.utf-8</dt>        <dd>UTF8</dd>
+   * <dl> gnu.classpath.vm.shortname <dd> Succinct version of the VM name;
+   *      used for finding property files in file system
+   * <dl> gnu.classpath.home.url <dd> Base URL; used for finding
+   *      property files in file system
+   * <dt> gnu.cpu.endian      <dd>big or little
+   * <dt> gnu.java.io.encoding_scheme_alias.ISO-8859-?   <dd>8859_?
+   * <dt> gnu.java.io.encoding_scheme_alias.iso-8859-?   <dd>8859_?
+   * <dt> gnu.java.io.encoding_scheme_alias.iso8859_?    <dd>8859_?
+   * <dt> gnu.java.io.encoding_scheme_alias.iso-latin-_? <dd>8859_?
+   * <dt> gnu.java.io.encoding_scheme_alias.latin?       <dd>8859_?
+   * <dt> gnu.java.io.encoding_scheme_alias.UTF-8        <dd>UTF8
+   * <dt> gnu.java.io.encoding_scheme_alias.utf-8        <dd>UTF8
    * </dl>
    *
    * @return the system properties, will never be null
@@ -675,7 +566,37 @@
   public static String mapLibraryName(String libname)
   {
     // XXX Fix this!!!!
-    return VMRuntime.nativeGetLibname("", libname);
+    return Runtime.nativeGetLibname("", libname);
   }
 
+  /**
+   * Detect big-endian systems.
+   *
+   * @return true if the system is big-endian.
+   */
+  static native boolean isWordsBigEndian();
+
+  /**
+   * Set {@link #in} to a new InputStream.
+   *
+   * @param in the new InputStream
+   * @see #setIn(InputStream)
+   */
+  private static native void setIn0(InputStream in);
+
+  /**
+   * Set {@link #out} to a new PrintStream.
+   *
+   * @param out the new PrintStream
+   * @see #setOut(PrintStream)
+   */
+  private static native void setOut0(PrintStream out);
+
+  /**
+   * Set {@link #err} to a new PrintStream.
+   *
+   * @param err the new PrintStream
+   * @see #setErr(PrintStream)
+   */
+  private static native void setErr0(PrintStream err);
 } // class System
