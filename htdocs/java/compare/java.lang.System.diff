--- /home/tromey/gnu/Nightly/classpath/classpath/java/lang/System.java	2003-02-15 02:20:06.000000000 -0700
+++ java/lang/System.java	2003-02-15 02:18:41.000000000 -0700
@@ -38,13 +38,7 @@
 
 package java.lang;
 
-import java.io.BufferedInputStream;
-import java.io.BufferedOutputStream;
-import java.io.FileDescriptor;
-import java.io.FileInputStream;
-import java.io.FileOutputStream;
-import java.io.InputStream;
-import java.io.PrintStream;
+import java.io.*;
 import java.util.Properties;
 import java.util.PropertyPermission;
 import gnu.classpath.Configuration;
@@ -79,15 +73,13 @@
       loadLibrary("javalang");
 
     Properties defaultProperties = Runtime.defaultProperties;
-    defaultProperties.put("gnu.classpath.home",
-		    Configuration.CLASSPATH_HOME);
-    defaultProperties.put("gnu.classpath.version",
-		    Configuration.CLASSPATH_VERSION);
 
     // Set base URL if not already set.
     if (defaultProperties.get("gnu.classpath.home.url") == null)
       defaultProperties.put("gnu.classpath.home.url",
-			    "file://" + Configuration.CLASSPATH_HOME + "/lib");
+			    "file://"
+			    + defaultProperties.get("gnu.classpath.home")
+			    + "/lib");
 
     // Set short name if not already set.
     if (defaultProperties.get("gnu.classpath.vm.shortname") == null)
@@ -100,116 +92,13 @@
       }
 
     defaultProperties.put("gnu.cpu.endian",
-                          VMSystem.isWordsBigEndian() ? "big" : "little");
-
-    // Common encoding aliases. See gnu.java.io.EncodingManager.
-    defaultProperties.put("gnu.java.io.encoding_scheme_alias.ISO8859_1",
-                          "8859_1");
-
-    defaultProperties.put("gnu.java.io.encoding_scheme_alias.ISO-8859-1",
-                          "8859_1");
-    defaultProperties.put("gnu.java.io.encoding_scheme_alias.ISO-8859-2",
-                          "8859_2");
-    defaultProperties.put("gnu.java.io.encoding_scheme_alias.ISO-8859-3",
-                          "8859_3");
-    defaultProperties.put("gnu.java.io.encoding_scheme_alias.ISO-8859-4",
-                          "8859_4");
-    defaultProperties.put("gnu.java.io.encoding_scheme_alias.ISO-8859-5",
-                          "8859_5");
-    defaultProperties.put("gnu.java.io.encoding_scheme_alias.ISO-8859-6",
-                          "8859_6");
-    defaultProperties.put("gnu.java.io.encoding_scheme_alias.ISO-8859-7",
-                          "8859_7");
-    defaultProperties.put("gnu.java.io.encoding_scheme_alias.ISO-8859-8",
-                          "8859_8");
-    defaultProperties.put("gnu.java.io.encoding_scheme_alias.ISO-8859-9",
-                          "8859_9");
-
-    defaultProperties.put("gnu.java.io.encoding_scheme_alias.iso-8859-1",
-                          "8859_1");
-    defaultProperties.put("gnu.java.io.encoding_scheme_alias.iso-8859-2",
-                          "8859_2");
-    defaultProperties.put("gnu.java.io.encoding_scheme_alias.iso-8859-3",
-                          "8859_3");
-    defaultProperties.put("gnu.java.io.encoding_scheme_alias.iso-8859-4",
-                          "8859_4");
-    defaultProperties.put("gnu.java.io.encoding_scheme_alias.iso-8859-5",
-                          "8859_5");
-    defaultProperties.put("gnu.java.io.encoding_scheme_alias.iso-8859-6",
-                          "8859_6");
-    defaultProperties.put("gnu.java.io.encoding_scheme_alias.iso-8859-7",
-                          "8859_7");
-    defaultProperties.put("gnu.java.io.encoding_scheme_alias.iso-8859-8",
-                          "8859_8");
-    defaultProperties.put("gnu.java.io.encoding_scheme_alias.iso-8859-9",
-                          "8859_9");
-
-    defaultProperties.put("gnu.java.io.encoding_scheme_alias.iso8859_1",
-                          "8859_1");
-    defaultProperties.put("gnu.java.io.encoding_scheme_alias.iso8859_2",
-                          "8859_2");
-    defaultProperties.put("gnu.java.io.encoding_scheme_alias.iso8859_3",
-                          "8859_3");
-    defaultProperties.put("gnu.java.io.encoding_scheme_alias.iso8859_4",
-                          "8859_4");
-    defaultProperties.put("gnu.java.io.encoding_scheme_alias.iso8859_5",
-                          "8859_5");
-    defaultProperties.put("gnu.java.io.encoding_scheme_alias.iso8859_6",
-                          "8859_6");
-    defaultProperties.put("gnu.java.io.encoding_scheme_alias.iso8859_7",
-                          "8859_7");
-    defaultProperties.put("gnu.java.io.encoding_scheme_alias.iso8859_8",
-                          "8859_8");
-    defaultProperties.put("gnu.java.io.encoding_scheme_alias.iso8859_9",
-                          "8859_9");
-
-    defaultProperties.put("gnu.java.io.encoding_scheme_alias.iso-latin-1",
-                          "8859_1");
-    defaultProperties.put("gnu.java.io.encoding_scheme_alias.iso-latin-2",
-                          "8859_2");
-    defaultProperties.put("gnu.java.io.encoding_scheme_alias.iso-latin-3",
-                          "8859_3");
-    defaultProperties.put("gnu.java.io.encoding_scheme_alias.iso-latin-4",
-                          "8859_4");
-    defaultProperties.put("gnu.java.io.encoding_scheme_alias.iso-latin-5",
-                          "8859_5");
-    defaultProperties.put("gnu.java.io.encoding_scheme_alias.iso-latin-6",
-                          "8859_6");
-    defaultProperties.put("gnu.java.io.encoding_scheme_alias.iso-latin-7",
-                          "8859_7");
-    defaultProperties.put("gnu.java.io.encoding_scheme_alias.iso-latin-8",
-                          "8859_8");
-    defaultProperties.put("gnu.java.io.encoding_scheme_alias.iso-latin-9",
-                          "8859_9");
-
-    defaultProperties.put("gnu.java.io.encoding_scheme_alias.latin1",
-                          "8859_1");
-    defaultProperties.put("gnu.java.io.encoding_scheme_alias.latin2",
-                          "8859_2");
-    defaultProperties.put("gnu.java.io.encoding_scheme_alias.latin3",
-                          "8859_3");
-    defaultProperties.put("gnu.java.io.encoding_scheme_alias.latin4",
-                          "8859_4");
-    defaultProperties.put("gnu.java.io.encoding_scheme_alias.latin5",
-                          "8859_5");
-    defaultProperties.put("gnu.java.io.encoding_scheme_alias.latin6",
-                          "8859_6");
-    defaultProperties.put("gnu.java.io.encoding_scheme_alias.latin7",
-                          "8859_7");
-    defaultProperties.put("gnu.java.io.encoding_scheme_alias.latin8",
-                          "8859_8");
-    defaultProperties.put("gnu.java.io.encoding_scheme_alias.latin9",
-                          "8859_9");
-
-    defaultProperties.put("gnu.java.io.encoding_scheme_alias.UTF-8", "UTF8");
-    defaultProperties.put("gnu.java.io.encoding_scheme_alias.utf-8", "UTF8");
-
+			  isWordsBigEndian() ? "big" : "little");
     // XXX FIXME - Temp hack for old systems that set the wrong property
     if (defaultProperties.get("java.io.tmpdir") == null)
       defaultProperties.put("java.io.tmpdir",
                             defaultProperties.get("java.tmpdir"));
   }
-    
+
   /**
    * Stores the current system properties. This can be modified by
    * {@link #setProperties(Properties)}, but will never be null, because
@@ -230,8 +119,8 @@
    * other processes or files.  That should all be transparent to you,
    * however.
    */
-   public static final InputStream in = VMSystem.makeStandardInputStream();
-
+  public static final InputStream in
+    = new BufferedInputStream(new FileInputStream(FileDescriptor.in));
   /**
    * The standard output PrintStream.  This is assigned at startup and
    * starts its life perfectly valid. Although it is marked final, you can
@@ -242,8 +131,8 @@
    * output to other processes or files.  That should all be transparent to
    * you, however.
    */
-   public static final PrintStream out = VMSystem.makeStandardOutputStream();
-
+  public static final PrintStream out
+    = new PrintStream(new BufferedOutputStream(new FileOutputStream(FileDescriptor.out)), true);
   /**
    * The standard output PrintStream.  This is assigned at startup and
    * starts its life perfectly valid. Although it is marked final, you can
@@ -254,7 +143,8 @@
    * output to other processes or files.  That should all be transparent to
    * you, however.
    */
-   public static final PrintStream err = VMSystem.makeStandardErrorStream();
+  public static final PrintStream err
+    = new PrintStream(new BufferedOutputStream(new FileOutputStream(FileDescriptor.err)), true);
 
   /**
    * This class is uninstantiable.
@@ -277,7 +167,7 @@
     SecurityManager sm = Runtime.securityManager; // Be thread-safe.
     if (sm != null)
       sm.checkPermission(new RuntimePermission("setIO"));
-    VMSystem.setIn(in);
+    setIn0(in);
   }
 
   /**
@@ -294,8 +184,7 @@
     SecurityManager sm = Runtime.securityManager; // Be thread-safe.
     if (sm != null)
       sm.checkPermission(new RuntimePermission("setIO"));
-    
-    VMSystem.setOut(out);
+    setOut0(out);
   }
 
   /**
@@ -312,7 +201,7 @@
     SecurityManager sm = Runtime.securityManager; // Be thread-safe.
     if (sm != null)
       sm.checkPermission(new RuntimePermission("setIO"));
-    VMSystem.setErr(err);
+    setErr0(err);
   }
 
   /**
@@ -361,9 +250,7 @@
    * @return the current time
    * @see java.util.Date
    */
-  public static long currentTimeMillis() {
-      return VMSystem.currentTimeMillis();
-  }
+  public static native long currentTimeMillis();
 
   /**
    * Copy one array onto another from <code>src[srcStart]</code> ...
@@ -388,11 +275,8 @@
    * @throws IndexOutOfBoundsException if len is negative, or if the start or
    *         end copy position in either array is out of bounds
    */
-  public static void arraycopy(Object src, int srcStart,
-                               Object dest, int destStart, int len)
-  {
-    VMSystem.arraycopy(src, srcStart, dest, destStart, len);
-  }
+  public static native void arraycopy(Object src, int srcStart,
+				      Object dest, int destStart, int len);
 
   /**
    * Get a hash code computed by the VM for the Object. This hash code will
@@ -405,10 +289,7 @@
    * @return the VM-dependent hash code for this Object
    * @since 1.1
    */
-  public static int identityHashCode(Object o)
-  {
-    return VMSystem.identityHashCode(o);
-  }
+  public static native int identityHashCode(Object o);
 
   /**
    * Get all the system properties at once. A security check may be performed,
@@ -450,8 +331,6 @@
    * In addition, gnu defines several other properties, where ? stands for
    * each character in '0' through '9':
    * <dl>
-   * <dl> gnu.classpath.home <dd> Path to the classpath libraries.
-   * <dl> gnu.classpath.version <dd> Version of the classpath libraries.
    * <dl> gnu.classpath.vm.shortname <dd> Succinct version of the VM name;
    *      used for finding property files in file system
    * <dl> gnu.classpath.home.url <dd> Base URL; used for finding
@@ -667,7 +546,8 @@
 
   /**
    * Convert a library name to its platform-specific variant.
-   *   * @param libname the library name, as used in <code>loadLibrary</code>
+   *
+   * @param libname the library name, as used in <code>loadLibrary</code>
    * @return the platform-specific mangling of the name
    * @since 1.2
    */
@@ -677,4 +557,34 @@
     return Runtime.nativeGetLibname("", libname);
   }
 
+  /**
+   * Detect big-endian systems.
+   *
+   * @return true if the system is big-endian.
+   */
+  static native boolean isWordsBigEndian();
+
+  /**
+   * Set {@link #in} to a new InputStream.
+   *
+   * @param in the new InputStream
+   * @see #setIn(InputStream)
+   */
+  private static native void setIn0(InputStream in);
+
+  /**
+   * Set {@link #out} to a new PrintStream.
+   *
+   * @param out the new PrintStream
+   * @see #setOut(PrintStream)
+   */
+  private static native void setOut0(PrintStream out);
+
+  /**
+   * Set {@link #err} to a new PrintStream.
+   *
+   * @param err the new PrintStream
+   * @see #setErr(PrintStream)
+   */
+  private static native void setErr0(PrintStream err);
 } // class System
