--- /home/tromey/gnu/Nightly/classpath/classpath/native/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkEvents.c	2004-08-01 02:25:30.000000000 -0600
+++ jni/gtk-peer/gnu_java_awt_peer_gtk_GtkEvents.c	2004-09-04 02:25:06.000000000 -0600
@@ -1010,23 +1010,12 @@
       }
       break;
     case GDK_EXPOSE:
-      {
-        /* This filters out unwanted feedback expose events from gtk/X
-           when we explictly invalidate and update heavyweight components,
-           thus avoiding an infinite loop.
-           FIXME: I'm not quite sure why we're getting these expose events. 
-                  Maybe there is a way to avoid them? */
-        if((event->any.window == widget->window && event->any.send_event)
-           || GTK_IS_LAYOUT(widget))
-          {
-	    (*gdk_env)->CallVoidMethod (gdk_env, peer,
-				        postExposeEventID,
-				        (jint)event->expose.area.x,
-				        (jint)event->expose.area.y,
-				        (jint)event->expose.area.width,
-				        (jint)event->expose.area.height);
-          }
-      }
+      (*gdk_env)->CallVoidMethod (gdk_env, peer,
+                                  postExposeEventID,
+                                  (jint)event->expose.area.x,
+                                  (jint)event->expose.area.y,
+                                  (jint)event->expose.area.width,
+                                  (jint)event->expose.area.height);
       break;
 
     case GDK_FOCUS_CHANGE:
