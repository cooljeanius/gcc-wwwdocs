--- /home/tromey/gnu/Nightly/classpath/classpath/javax/swing/plaf/basic/BasicComboBoxUI.java	2004-09-05 05:31:06.000000000 -0600
+++ javax/swing/plaf/basic/BasicComboBoxUI.java	2004-09-15 02:27:48.000000000 -0600
@@ -796,7 +796,7 @@
 	                                                           currentValue,
 	                                                           -1,
 	                                                           isPressed,
-	                                                           isPressed);
+	                                                           hasFocus);
 	    if (! comboBox.isEnabled())
 	      comp.setEnabled(false);
 
@@ -1127,8 +1127,9 @@
      */
     public void intervalRemoved(ListDataEvent e)
     {
-      // must determine if the size of the combo box should change
-      // FIXME: need to implement
+      // recalculate display size of the JComboBox.
+      largestItemSize = getLargestItemSize();
+      comboBox.repaint();
     }
   }
 
@@ -1142,11 +1143,13 @@
     {
     }
 
+    /**
+     * This method is invoked whenever bound property of JComboBox changes.
+     */
     public void propertyChange(PropertyChangeEvent e)
     {
       if (e.getPropertyName().equals(JComboBox.ENABLED_CHANGED_PROPERTY))
         {
-	  // disable arrow button	
 	  arrowButton.setEnabled(comboBox.isEnabled());
 
 	  if (comboBox.isEditable())
@@ -1169,6 +1172,16 @@
 	  comboBox.revalidate();
 	  comboBox.repaint();
         }
+      else if (e.getPropertyName().equals(JComboBox.MODEL_CHANGED_PROPERTY))
+        {
+	  // remove ListDataListener from old model and add it to new model
+	  ComboBoxModel oldModel = (ComboBoxModel) e.getOldValue();
+	  if (oldModel != null)
+	    oldModel.removeListDataListener(listDataListener);
+
+	  if ((ComboBoxModel) e.getNewValue() != null)
+	    comboBox.getModel().addListDataListener(listDataListener);
+        }
 
       // FIXME: Need to handle changes in other bound properties.	
     }
