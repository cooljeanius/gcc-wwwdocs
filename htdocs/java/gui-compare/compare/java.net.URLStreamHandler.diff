--- /home/tromey/gnu/Nightly/classpath/classpath/java/net/URLStreamHandler.java	2004-07-12 02:22:31.000000000 -0600
+++ java/net/URLStreamHandler.java	2004-07-22 11:06:31.000000000 -0600
@@ -1,5 +1,5 @@
 /* URLStreamHandler.java -- Abstract superclass for all protocol handlers
-   Copyright (C) 1998, 1999, 2002, 2003, 2004 Free Software Foundation, Inc.
+   Copyright (C) 1998, 1999, 2002, 2003 Free Software Foundation, Inc.
 
 This file is part of GNU Classpath.
 
@@ -131,12 +131,8 @@
     String query = null;
     
     // On Windows we need to change \ to / for file URLs
-    char separator = File.separatorChar;
-    if (url.getProtocol().equals("file") && separator != '/')
-      {
-	file = file.replace(separator, '/');
-	spec = spec.replace(separator, '/');
-      }
+    if (url.getProtocol().equals("file"))
+      spec = spec.replace(File.separatorChar, '/');
 
     if (spec.regionMatches(start, "//", 0, 2))
       {
@@ -208,11 +204,9 @@
       {
 	// Context is available, but only override it if there is a new file.
 	int lastSlash = file.lastIndexOf('/');
-	if (lastSlash < 0)
-	  file = spec.substring(start, end);
-	else
-	  file = (file.substring(0, lastSlash)
-		  + '/' + spec.substring(start, end));
+
+	file =
+	  file.substring(0, lastSlash) + '/' + spec.substring(start, end);
 
 	if (url.getProtocol().equals("file"))
 	  {
@@ -222,7 +216,7 @@
 	      {
 		boolean endsWithSlash = file.charAt(file.length() - 1) == '/';
 		file = new File(file).getCanonicalPath();
-		file = file.replace(separator, '/');
+		file = file.replace(File.separatorChar, '/');
 		if (endsWithSlash && file.charAt(file.length() - 1) != '/')
 		  file += '/';
 	      }
