--- /home/tromey/gnu/Nightly/classpath/classpath/gnu/java/awt/peer/gtk/GtkImagePainter.java	2004-09-23 02:37:56.000000000 -0600
+++ gnu/java/awt/peer/gtk/GtkImagePainter.java	2004-11-25 02:23:50.000000000 -0700
@@ -42,6 +42,7 @@
 import java.awt.Rectangle;
 import java.awt.image.ColorModel;
 import java.awt.image.ImageConsumer;
+import java.awt.image.ImageObserver;
 import java.util.Hashtable;
 
 public class GtkImagePainter implements Runnable, ImageConsumer
@@ -57,10 +58,11 @@
   boolean flipX, flipY;
   Rectangle clip;
   int s_width, s_height;
+  ImageObserver observer;
 
   public
   GtkImagePainter (GtkImage image, GdkGraphics gc, int x, int y, 
-		   int width, int height, Color bgcolor)
+		   int width, int height, Color bgcolor, ImageObserver o)
   {
     this.image = image;
     this.gc = (GdkGraphics) gc.create ();
@@ -74,6 +76,7 @@
     flipX = flipY = false;
     s_width = s_height = 0;
     clip = null;
+    observer = o;
 
     run ();
   }
@@ -82,7 +85,7 @@
   GtkImagePainter (GtkImage image, GdkGraphics gc, 
 		   int dx1, int dy1, int dx2, int dy2,
 		   int sx1, int sy1, int sx2, int sy2,
-		   Color bgcolor)
+		   Color bgcolor, ImageObserver o)
   {
     this.image = image;
     this.gc = (GdkGraphics) gc.create ();
@@ -91,6 +94,7 @@
     redBG = bgcolor.getRed ();
     greenBG = bgcolor.getGreen ();
     blueBG = bgcolor.getBlue ();
+    observer = o;
 
     this.width = Math.abs (dx2 - dx1);
     this.height = Math.abs (dy2 - dy1);
@@ -126,7 +130,7 @@
 
     if (model.equals (ColorModel.getRGBdefault ()))
       return pixels;
-    
+
     int ret[] = new int[pixels.length];
 
     for (int i = 0; i < pixels.length; i++)
@@ -180,6 +184,11 @@
 	        startX + x, startY + y,
 		width, height, convertPixels (pixels, model), offset,
 		scansize, affine);
+
+    if (observer != null)
+      observer.imageUpdate (image,
+			    ImageObserver.SOMEBITS,
+			    x, y, width, height);
   }
 
   public void 
@@ -247,5 +256,17 @@
   imageComplete (int status)
   {
     image.imageComplete(status);
+
+    if (observer != null)
+      {
+	if (status == ImageConsumer.IMAGEERROR)
+	  observer.imageUpdate (null,
+				ImageObserver.ERROR,
+				-1, -1, -1, -1);
+	else
+	  observer.imageUpdate (null,
+				ImageObserver.ALLBITS,
+				-1, -1, -1, -1);
+      }
   }
 }
