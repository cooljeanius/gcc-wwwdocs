--- /home/tromey/gnu/Nightly/classpath/classpath/java/nio/ByteBufferImpl.java	2004-06-21 06:23:59.000000000 -0600
+++ java/nio/ByteBufferImpl.java	2004-07-22 11:06:31.000000000 -0600
@@ -129,16 +129,10 @@
   }
 
   /**
-   * Reads the <code>byte</code> at this buffer's current position,
-   * and then increments the position.
-   *
-   * @exception BufferUnderflowException If there are no remaining
-   * <code>bytes</code> in this buffer.
+   * Relative get method. Reads the next <code>byte</code> from the buffer.
    */
   public byte get ()
   {
-    checkForUnderflow();
-
     byte result = backing_buffer [position () + array_offset];
     position (position () + 1);
     return result;
@@ -147,15 +141,13 @@
   /**
    * Relative put method. Writes <code>value</code> to the next position
    * in the buffer.
-   *
-   * @exception BufferOverflowException If there is no remaining
-   * space in this buffer.
+   * 
    * @exception ReadOnlyBufferException If this buffer is read-only.
    */
   public ByteBuffer put (byte value)
   {
-    checkIfReadOnly();
-    checkForOverflow();
+    if (readOnly)
+      throw new ReadOnlyBufferException ();
 
     int pos = position();
     backing_buffer [pos + array_offset] = value;
@@ -172,8 +164,6 @@
    */
   public byte get (int index)
   {
-    checkIndex(index);
-
     return backing_buffer [index + array_offset];
   }
   
@@ -187,9 +177,9 @@
    */
   public ByteBuffer put (int index, byte value)
   {
-    checkIfReadOnly();
-    checkIndex(index);
-
+    if (readOnly)
+      throw new ReadOnlyBufferException ();
+    	    
     backing_buffer [index + array_offset] = value;
     return this;
   }
