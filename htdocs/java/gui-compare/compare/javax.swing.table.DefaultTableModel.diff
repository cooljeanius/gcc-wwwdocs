--- /home/tromey/gnu/Nightly/classpath/classpath/javax/swing/table/DefaultTableModel.java	2004-09-05 02:26:55.000000000 -0600
+++ javax/swing/table/DefaultTableModel.java	2004-08-26 02:29:09.000000000 -0600
@@ -50,29 +50,29 @@
   implements Serializable
 {
   static final long serialVersionUID = 6680042567037222321L;
-	/**
-	 * dataVector
-	 */
-	protected Vector dataVector;
-
-	/**
-	 * columnIdentifiers
-	 */
-	protected Vector columnIdentifiers;
-
-	/**
-	 * Constructor DefaultTableModel
-	 */
+  /**
+   * dataVector
+   */
+  protected Vector dataVector;
+
+  /**
+   * columnIdentifiers
+   */
+  protected Vector columnIdentifiers;
+
+  /**
+   * Constructor DefaultTableModel
+   */
   public DefaultTableModel() 
   {
-		this(0, 0);
+    this(0, 0);
   }
-
-	/**
-	 * Constructor DefaultTableModel
-	 * @param value0 TODO
-	 * @param value1 TODO
-	 */
+  
+  /**
+   * Constructor DefaultTableModel
+   * @param value0 TODO
+   * @param value1 TODO
+   */
   public DefaultTableModel(int numRows, int numColumns) 
   {
     Vector defaultNames = new Vector(numColumns);
@@ -86,162 +86,162 @@
       }          
     setDataVector(defaultNames, data);
   }
-
-	/**
-	 * Constructor DefaultTableModel
-	 * @param value0 TODO
-	 * @param value1 TODO
-	 */
+  
+  /**
+   * Constructor DefaultTableModel
+   * @param value0 TODO
+   * @param value1 TODO
+   */
   public DefaultTableModel(Vector columnNames, int numRows) 
   {
     Vector data = new Vector();
     int numColumns = 0;
 
     if (columnNames != null)
-			numColumns = columnNames.size();
-
+      numColumns = columnNames.size();
+    
     while (0 < numRows--) 
       {
         Vector rowData = new Vector();
         rowData.setSize(numColumns);
         data.add(rowData);
       }
-		setDataVector(data, columnNames);
+    setDataVector(data, columnNames);
   }
 
-	/**
-	 * Constructor DefaultTableModel
-	 * @param value0 TODO
-	 * @param value1 TODO
-	 */
+  /**
+   * Constructor DefaultTableModel
+   * @param value0 TODO
+   * @param value1 TODO
+   */
   public DefaultTableModel(Object[] columnNames, int numRows) 
   {
-		this(convertToVector(columnNames), numRows);
+    this(convertToVector(columnNames), numRows);
   }
-
-	/**
-	 * Constructor DefaultTableModel
-	 * @param value0 TODO
-	 * @param value1 TODO
-	 */
+  
+  /**
+   * Constructor DefaultTableModel
+   * @param value0 TODO
+   * @param value1 TODO
+   */
   public DefaultTableModel(Vector data, Vector columnNames) 
   {
-		setDataVector(data, columnNames);
+    setDataVector(data, columnNames);
   }
 
-	/**
-	 * Constructor DefaultTableModel
-	 * @param value0 TODO
-	 * @param value1 TODO
-	 */
+  /**
+   * Constructor DefaultTableModel
+   * @param value0 TODO
+   * @param value1 TODO
+   */
   public DefaultTableModel(Object[][] data, Object[] columnNames) 
   {
-		this(convertToVector(data), convertToVector(columnNames));
+    this(convertToVector(data), convertToVector(columnNames));
   }
 
-	/**
-	 * getDataVector
-	 * @returns Vector
-	 */
+  /**
+   * getDataVector
+   * @returns Vector
+   */
   public Vector getDataVector() 
   {
-		return dataVector;
+    return dataVector;
   }
 
-	/**
-	 * setDataVector
-	 * @param value0 TODO
-	 * @param value1 TODO
-	 */
+  /**
+   * setDataVector
+   * @param value0 TODO
+   * @param value1 TODO
+   */
   public void setDataVector(Vector data, Vector columnNames) 
   {
-		dataVector = data;
-		columnIdentifiers = columnNames;
+    dataVector = data;
+    columnIdentifiers = columnNames;
     for (int r = 0; r < data.size(); r++) {
       ((Vector) dataVector.get(r)).setSize(columnNames.size());
     }          
   }
 
-	/**
-	 * setDataVector
-	 * @param value0 TODO
-	 * @param value1 TODO
-	 */
+  /**
+   * setDataVector
+   * @param value0 TODO
+   * @param value1 TODO
+   */
   public void setDataVector(Object[][] data, Object[] columnNames) 
   {
     setDataVector(convertToVector(data), 
                   convertToVector(columnNames));
   }
-
-	/**
-	 * newDataAvailable
-	 * @param value0 TODO
-	 */
+  
+  /**
+   * newDataAvailable
+   * @param value0 TODO
+   */
   public void newDataAvailable(TableModelEvent event) 
   {
-		fireTableChanged(event);
+    fireTableChanged(event);
   }
 
-	/**
-	 * newRowsAdded
-	 * @param value0 TODO
-	 */
+  /**
+   * newRowsAdded
+   * @param value0 TODO
+   */
   public void newRowsAdded(TableModelEvent event) 
   {
     fireTableChanged(event);
   }
 
-	/**
-	 * rowsRemoved
-	 * @param value0 TODO
-	 */
+  /**
+   * rowsRemoved
+   * @param value0 TODO
+   */
   public void rowsRemoved(TableModelEvent event) 
   {
-		fireTableChanged(event);
+    fireTableChanged(event);
   }
 
-	/**
-	 * setColumnIdentifiers
-	 * @param value0 TODO
-	 */
+  /**
+   * setColumnIdentifiers
+   * @param value0 TODO
+   */
   public void setColumnIdentifiers(Vector columnIdentifiers) 
   {
-		this.columnIdentifiers = columnIdentifiers;
-		setColumnCount(columnIdentifiers.size());
+    this.columnIdentifiers = columnIdentifiers;
+    setColumnCount(columnIdentifiers.size());
   }
-
-	/**
-	 * setColumnIdentifiers
-	 * @param value0 TODO
-	 */
+  
+  /**
+   * setColumnIdentifiers
+   * @param value0 TODO
+   */
   public void setColumnIdentifiers(Object[] columnIdentifiers) 
   {
-		setColumnIdentifiers(convertToVector(columnIdentifiers));
+    setColumnIdentifiers(convertToVector(columnIdentifiers));
   }
 
-	/**
-	 * setNumRows
-	 * @param value0 TODO
-	 */
+  /**
+   * setNumRows
+   * @param value0 TODO
+   */
   public void setNumRows(int numRows) 
   {
-		setRowCount(numRows);
+    setRowCount(numRows);
   }
 
-	/**
-	 * setRowCount
-	 * @param value0 TODO
-	 */
+  /**
+   * setRowCount
+   * @param value0 TODO
+   */
   public void setRowCount(int rowCount) 
   {
     dataVector.setSize(rowCount);
     fireTableDataChanged();
   }
 
-	/**
-	 * setColumnCount
-	 * @param value0 TODO
-	 */
+  /**
+   * setColumnCount
+   * @param value0 TODO
+   */
   public void setColumnCount(int columnCount) 
   {
     for (int i = 0; i < dataVector.size(); ++i)
@@ -252,31 +252,31 @@
     fireTableDataChanged();
   }
 
-	/**
-	 * addColumn
-	 * @param value0 TODO
-	 */
+  /**
+   * addColumn
+   * @param value0 TODO
+   */
   public void addColumn(Object columnName) 
   {
     addColumn(columnName, (Object[]) null);
   }
 
-	/**
-	 * addColumn
-	 * @param value0 TODO
-	 * @param value1 TODO
-	 */
+  /**
+   * addColumn
+   * @param value0 TODO
+   * @param value1 TODO
+   */
   public void addColumn(Object columnName, Vector columnData) 
   {
     addColumn(columnName, columnData == null ? null : columnData.toArray());
   }
 
-	/**
-	 * addColumn
-	 * @param value0 TODO
-	 * @param value1 TODO
-	 */
-	public void addColumn(Object columnName, Object[] columnData) {
+  /**
+   * addColumn
+   * @param value0 TODO
+   * @param value1 TODO
+   */
+  public void addColumn(Object columnName, Object[] columnData) {
     for (int i = 0; i < dataVector.size(); ++i)
       {
         ((Vector) dataVector.get(i)).add(columnData == null ? null : columnData[i]);
@@ -285,152 +285,152 @@
     fireTableDataChanged();
   }
 
-	/**
-	 * addRow
-	 * @param value0 TODO
-	 */
-	public void addRow(Vector rowData) {
+  /**
+   * addRow
+   * @param value0 TODO
+   */
+  public void addRow(Vector rowData) {
     dataVector.add(rowData);
     fireTableDataChanged();
   }
 
-	/**
-	 * addRow
-	 * @param value0 TODO
-	 */
-	public void addRow(Object[] rowData) {
-		addRow(convertToVector(rowData));
+  /**
+   * addRow
+   * @param value0 TODO
+   */
+  public void addRow(Object[] rowData) {
+    addRow(convertToVector(rowData));
   }
 
-	/**
-	 * insertRow
-	 * @param value0 TODO
-	 * @param value1 TODO
-	 */
-	public void insertRow(int row, Vector rowData) {
-		dataVector.add(row, rowData);
+  /**
+   * insertRow
+   * @param value0 TODO
+   * @param value1 TODO
+   */
+  public void insertRow(int row, Vector rowData) {
+    dataVector.add(row, rowData);
     fireTableDataChanged();
   }
 
-	/**
-	 * insertRow
-	 * @param value0 TODO
-	 * @param value1 TODO
-	 */
-	public void insertRow(int row, Object[] rowData) {
-		insertRow(row, convertToVector(rowData));
-  }
-
-	/**
-	 * moveRow
-	 * @param value0 TODO
-	 * @param value1 TODO
-	 * @param value2 TODO
-	 */
-	public void moveRow(int startIndex, int endIndex, int toIndex) {
+  /**
+   * insertRow
+   * @param value0 TODO
+   * @param value1 TODO
+   */
+  public void insertRow(int row, Object[] rowData) {
+    insertRow(row, convertToVector(rowData));
+  }
+
+  /**
+   * moveRow
+   * @param value0 TODO
+   * @param value1 TODO
+   * @param value2 TODO
+   */
+  public void moveRow(int startIndex, int endIndex, int toIndex) {
     for (int index = 0; index < (endIndex - startIndex); index++) {
       Vector vector = (Vector) dataVector.remove(startIndex);
-			dataVector.add(toIndex, vector);
+      dataVector.add(toIndex, vector);
     }
     fireTableDataChanged();
   }
 
-	/**
-	 * removeRow
-	 * @param value0 TODO
-	 */
-	public void removeRow(int row) {
-		dataVector.remove(row);
+  /**
+   * removeRow
+   * @param value0 TODO
+   */
+  public void removeRow(int row) {
+    dataVector.remove(row);
     fireTableDataChanged();
   }
 
-	/**
-	 * getRowCount
-	 * @returns int
-	 */
-	public int getRowCount() {
-		return dataVector.size();
-  }
-
-	/**
-	 * getColumnCount
-	 * @returns int
-	 */
-	public int getColumnCount() {
-		return columnIdentifiers.size();
-  }
-
-	/**
-	 * getColumnName
-	 * @param value0 TODO
-	 * @returns String
-	 */
-	public String getColumnName(int column) {
-		// Check for Column
-		if (columnIdentifiers == null || column >= getColumnCount()) {
-			return super.getColumnName(column);
+  /**
+   * getRowCount
+   * @returns int
+   */
+  public int getRowCount() {
+    return dataVector.size();
+  }
+
+  /**
+   * getColumnCount
+   * @returns int
+   */
+  public int getColumnCount() {
+    return columnIdentifiers.size();
+  }
+
+  /**
+   * getColumnName
+   * @param value0 TODO
+   * @returns String
+   */
+  public String getColumnName(int column) {
+    // Check for Column
+    if (columnIdentifiers == null || column >= getColumnCount()) {
+      return super.getColumnName(column);
     }
-
-		// Return Column name
-		return (String) columnIdentifiers.get(column);
-  }
-
-	/**
-	 * isCellEditable
-	 * @param value0 TODO
-	 * @param value1 TODO
-	 * @returns boolean
-	 */
-	public boolean isCellEditable(int row, int column) {
-		return true;
-  }
-
-	/**
-	 * getValueAt
-	 * @param value0 TODO
-	 * @param value1 TODO
-	 * @returns Object
-	 */
-	public Object getValueAt(int row, int column) {
+          
+    // Return Column name
+    return (String) columnIdentifiers.get(column);          
+  }
+
+  /**
+   * isCellEditable
+   * @param value0 TODO
+   * @param value1 TODO
+   * @returns boolean
+   */
+  public boolean isCellEditable(int row, int column) {
+    return true;
+  }
+
+  /**
+   * getValueAt
+   * @param value0 TODO
+   * @param value1 TODO
+   * @returns Object
+   */
+  public Object getValueAt(int row, int column) {
     return ((Vector) dataVector.get(row)).get(column);
   }
 
-	/**
-	 * setValueAt
-	 * @param value0 TODO
-	 * @param value1 TODO
-	 * @param value2 TODO
-	 */
-	public void setValueAt(Object value, int row, int column) {
+  /**
+   * setValueAt
+   * @param value0 TODO
+   * @param value1 TODO
+   * @param value2 TODO
+   */
+  public void setValueAt(Object value, int row, int column) {
     ((Vector) dataVector.get(row)).set(column, value);
     fireTableDataChanged();
   }
 
-	/**
-	 * convertToVector
-	 * @param value0 TODO
-	 * @returns Vector
-	 */
-	protected static Vector convertToVector(Object[] data) {
+  /**
+   * convertToVector
+   * @param value0 TODO
+   * @returns Vector
+   */
+  protected static Vector convertToVector(Object[] data) {
     if (data == null)
-			return null;
+      return null;
     Vector vector = new Vector(data.length);
     for (int i = 0; i < data.length; i++) 
       vector.add(data[i]);
-		return vector;
+    return vector;          
   }
-
-	/**
-	 * convertToVector
-	 * @param value0 TODO
-	 * @returns Vector
-	 */
-	protected static Vector convertToVector(Object[][] data) {
+  
+  /**
+   * convertToVector
+   * @param value0 TODO
+   * @returns Vector
+   */
+  protected static Vector convertToVector(Object[][] data) {
     if (data == null)
       return null;
     Vector vector = new Vector(data.length);
     for (int i = 0; i < data.length; i++)
       vector.add(convertToVector(data[i]));
-		return vector;
+    return vector;
   }
 }
