--- /home/tromey/gnu/Nightly/classpath/classpath/javax/swing/table/DefaultTableModel.java	2003-10-13 02:23:00.000000000 -0600
+++ javax/swing/table/DefaultTableModel.java	2004-08-26 02:29:09.000000000 -0600
@@ -50,445 +50,387 @@
   implements Serializable
 {
   static final long serialVersionUID = 6680042567037222321L;
-
-	//-------------------------------------------------------------
-	// Variables --------------------------------------------------
-	//-------------------------------------------------------------
-
-	/**
-	 * dataVector
-	 */
-	protected Vector dataVector;
-
-	/**
-	 * columnIdentifiers
-	 */
-	protected Vector columnIdentifiers;
-
-
-	//-------------------------------------------------------------
-	// Initialization ---------------------------------------------
-	//-------------------------------------------------------------
-
-	/**
-	 * Constructor DefaultTableModel
-	 */
-	public DefaultTableModel() {
-		this(0, 0);
-	} // DefaultTableModel()
-
-	/**
-	 * Constructor DefaultTableModel
-	 * @param value0 TODO
-	 * @param value1 TODO
-	 */
-	public DefaultTableModel(int numRows, int numColumns) {
-
-		// Variables
-		int		columnIndex;
-		Vector		defaultNames;
-
-		// Create Column Names
-		defaultNames = new Vector();
-		for (columnIndex = 0; columnIndex < numColumns; columnIndex++) {
-			defaultNames.addElement(super.getColumnName(columnIndex));
-		} // for
-
-		// Setup Data
-//		setDataVector(defaultNames, numRows);
-
-	} // DefaultTableModel()
-
-	/**
-	 * Constructor DefaultTableModel
-	 * @param value0 TODO
-	 * @param value1 TODO
-	 */
-	public DefaultTableModel(Vector columnNames, int numRows) {
-
-		// Variables
-		Vector		data;
-		Vector		rowData;
-		int		rowIndex;
-		int		numColumns;
-
-		// Create Data
-		data = new Vector();
-		if (columnNames == null) {
-			numColumns = 0;
-		} else {
-			numColumns = columnNames.size();
-		} // if
-		for (rowIndex = 0; rowIndex < numRows; rowIndex++) {
-			rowData = new Vector();
-			rowData.setSize(numColumns);
-			data.addElement(rowData);
-		} // for
-
-		// Setup Data
-		setDataVector(data, columnNames);
-
-	} // DefaultTableModel()
-
-	/**
-	 * Constructor DefaultTableModel
-	 * @param value0 TODO
-	 * @param value1 TODO
-	 */
-	public DefaultTableModel(Object[] columnNames, int numRows) {
-		this(convertToVector(columnNames), numRows);
-	} // DefaultTableModel()
-
-	/**
-	 * Constructor DefaultTableModel
-	 * @param value0 TODO
-	 * @param value1 TODO
-	 */
-	public DefaultTableModel(Vector data, Vector columnNames) {
-		setDataVector(data, columnNames);
-	} // DefaultTableModel()
-
-	/**
-	 * Constructor DefaultTableModel
-	 * @param value0 TODO
-	 * @param value1 TODO
-	 */
-	public DefaultTableModel(Object[][] data, Object[] columnNames) {
-		this(convertToVector(data), convertToVector(columnNames));
-	} // DefaultTableModel()
-
-
-	//-------------------------------------------------------------
-	// Methods ----------------------------------------------------
-	//-------------------------------------------------------------
-
-	/**
-	 * getDataVector
-	 * @returns Vector
-	 */
-	public Vector getDataVector() {
-		return dataVector;
-	} // getDataVector()
-
-	/**
-	 * setDataVector
-	 * @param value0 TODO
-	 * @param value1 TODO
-	 */
-	public void setDataVector(Vector data, Vector columnNames) {
-
-		// Variables
-		int	rowIndex;
-		int	numRows;
-		int	numColumns;
-		Vector	columnVector;
-
-		// Set Data
-		dataVector = data;
-		columnIdentifiers = columnNames;
-
-		// Check Data
-		numRows = data.size();
-		numColumns = columnNames.size();
-		for (rowIndex = 0; rowIndex < numRows; rowIndex++) {
-			columnVector = (Vector) dataVector.get(rowIndex);
-			columnVector.setSize(numColumns);
-		} // for
-
-	} // setDataVector()
-
-	/**
-	 * setDataVector
-	 * @param value0 TODO
-	 * @param value1 TODO
-	 */
-	public void setDataVector(Object[][] data, Object[] columnNames) {
-		setDataVector(convertToVector(data), convertToVector(columnNames));
-	} // setDataVector()
-
-	/**
-	 * newDataAvailable
-	 * @param value0 TODO
-	 */
-	public void newDataAvailable(TableModelEvent event) {
-		fireTableChanged(event);
-	} // newDataAvailable()
-
-	/**
-	 * newRowsAdded
-	 * @param value0 TODO
-	 */
-	public void newRowsAdded(TableModelEvent event) {
-		// TODO
-	} // newRowsAdded()
-
-	/**
-	 * rowsRemoved
-	 * @param value0 TODO
-	 */
-	public void rowsRemoved(TableModelEvent event) {
-		fireTableChanged(event);
-	} // rowsRemoved()
-
-	/**
-	 * setColumnIdentifiers
-	 * @param value0 TODO
-	 */
-	public void setColumnIdentifiers(Vector columnIdentifiers) {
-		this.columnIdentifiers = columnIdentifiers;
-		setColumnCount(columnIdentifiers.size());
-	} // setColumnIdentifiers()
-
-	/**
-	 * setColumnIdentifiers
-	 * @param value0 TODO
-	 */
-	public void setColumnIdentifiers(Object[] columnIdentifiers) {
-		setColumnIdentifiers(convertToVector(columnIdentifiers));
-	} // setColumnIdentifiers()
-
-	/**
-	 * setNumRows
-	 * @param value0 TODO
-	 */
-	public void setNumRows(int numRows) {
-		setRowCount(numRows);
-	} // setNumRows()
-
-	/**
-	 * setRowCount
-	 * @param value0 TODO
-	 */
-	public void setRowCount(int rowCount) {
-		// TODO
-	} // setRowCount()
-
-	/**
-	 * setColumnCount
-	 * @param value0 TODO
-	 */
-	public void setColumnCount(int columnCount) {
-		// TODO
-	} // setColumnCount()
-
-	/**
-	 * addColumn
-	 * @param value0 TODO
-	 */
-	public void addColumn(Object columnName) {
-		addColumn(columnName, new Vector(dataVector.size()));
-	} // addColumn()
-
-	/**
-	 * addColumn
-	 * @param value0 TODO
-	 * @param value1 TODO
-	 */
-	public void addColumn(Object columnName, Vector columnData) {
-		// TODO
-	} // addColumn()
-
-	/**
-	 * addColumn
-	 * @param value0 TODO
-	 * @param value1 TODO
-	 */
-	public void addColumn(Object columnName, Object[] columnData) {
-		// TODO
-	} // addColumn()
-
-	/**
-	 * addRow
-	 * @param value0 TODO
-	 */
-	public void addRow(Vector rowData) {
-		// TODO
-	} // addRow()
-
-	/**
-	 * addRow
-	 * @param value0 TODO
-	 */
-	public void addRow(Object[] rowData) {
-		addRow(convertToVector(rowData));
-	} // addRow()
-
-	/**
-	 * insertRow
-	 * @param value0 TODO
-	 * @param value1 TODO
-	 */
-	public void insertRow(int row, Vector rowData) {
-		dataVector.add(row, rowData);
-	} // insertRow()
-
-	/**
-	 * insertRow
-	 * @param value0 TODO
-	 * @param value1 TODO
-	 */
-	public void insertRow(int row, Object[] rowData) {
-		insertRow(row, convertToVector(rowData));
-	} // insertRow()
-
-	/**
-	 * moveRow
-	 * @param value0 TODO
-	 * @param value1 TODO
-	 * @param value2 TODO
-	 */
-	public void moveRow(int startIndex, int endIndex, int toIndex) {
-
-		// Variables
-		int		index;
-		Vector	vector;
-
-		// Move Rows
-		for (index = 0; index < (endIndex - startIndex); index++) {
-			vector = (Vector) dataVector.remove(startIndex);
-			dataVector.add(toIndex, vector);
-		} // for
-
-	} // moveRow()
-
-	/**
-	 * removeRow
-	 * @param value0 TODO
-	 */
-	public void removeRow(int row) {
-		dataVector.remove(row);
-	} // removeRow()
-
-	/**
-	 * getRowCount
-	 * @returns int
-	 */
-	public int getRowCount() {
-		return dataVector.size();
-	} // getRowCount()
-
-	/**
-	 * getColumnCount
-	 * @returns int
-	 */
-	public int getColumnCount() {
-		return columnIdentifiers.size();
-	} // getColumnCount()
-
-	/**
-	 * getColumnName
-	 * @param value0 TODO
-	 * @returns String
-	 */
-	public String getColumnName(int column) {
-
-		// Check for Column
-		if (columnIdentifiers == null || column >= getColumnCount()) {
-			return super.getColumnName(column);
-		} // if
-
-		// Return Column name
-		return (String) columnIdentifiers.get(column);
-
-	} // getColumnName()
-
-	/**
-	 * isCellEditable
-	 * @param value0 TODO
-	 * @param value1 TODO
-	 * @returns boolean
-	 */
-	public boolean isCellEditable(int row, int column) {
-		return true;
-	} // isCellEditable()
-
-	/**
-	 * getValueAt
-	 * @param value0 TODO
-	 * @param value1 TODO
-	 * @returns Object
-	 */
-	public Object getValueAt(int row, int column) {
-
-		// Variables
-		Vector	rowVector;
-
-		// Get Row Vector
-		rowVector = (Vector) dataVector.get(row);
-
-		// Get Data
-		return rowVector.get(column);
-
-	} // getValueAt()
-
-	/**
-	 * setValueAt
-	 * @param value0 TODO
-	 * @param value1 TODO
-	 * @param value2 TODO
-	 */
-	public void setValueAt(Object value, int row, int column) {
-
-		// Variables
-		Vector	rowVector;
-
-		// Get Row Vector
-		rowVector = (Vector) dataVector.get(row);
-
-		// Set Data
-		rowVector.remove(column);
-		rowVector.add(column, value);
-
-	} // setValueAt()
-
-	/**
-	 * convertToVector
-	 * @param value0 TODO
-	 * @returns Vector
-	 */
-	protected static Vector convertToVector(Object[] data) {
-
-		// Variables
-		int	index;
-		Vector	vector;
-
-		// Check for null
-		if (data == null) {
-			return null;
-		} // if
-
-		// Process
-		vector = new Vector();
-		for (index = 0; index < data.length; index++) {
-			vector.add(data[index]);
-		} // for: index
-
-		// Return new Vector
-		return vector;
-
-	} // convertToVector()
-
-	/**
-	 * convertToVector
-	 * @param value0 TODO
-	 * @returns Vector
-	 */
-	protected static Vector convertToVector(Object[][] data) {
-
-		// Variables
-		int	index;
-		Vector	vector;
-
-		// Process
-		vector = new Vector();
-		for (index = 0; index < data.length; index++) {
-			vector.add(convertToVector(data[index]));
-		} // for: index
-
-		// Return new Vector
-		return vector;
-
-	} // convertToVector()
-
-
-} // DefaultTableModel
+  /**
+   * dataVector
+   */
+  protected Vector dataVector;
+
+  /**
+   * columnIdentifiers
+   */
+  protected Vector columnIdentifiers;
+
+  /**
+   * Constructor DefaultTableModel
+   */
+  public DefaultTableModel() 
+  {
+    this(0, 0);
+  }
+  
+  /**
+   * Constructor DefaultTableModel
+   * @param value0 TODO
+   * @param value1 TODO
+   */
+  public DefaultTableModel(int numRows, int numColumns) 
+  {
+    Vector defaultNames = new Vector(numColumns);
+    Vector data = new Vector(numRows);
+    for (int i = 0; i < numColumns; i++) 
+      {
+        defaultNames.add(super.getColumnName(i));
+        Vector tmp = new Vector(numColumns);
+        tmp.setSize(numColumns);
+        data.add(tmp);
+      }          
+    setDataVector(defaultNames, data);
+  }
+  
+  /**
+   * Constructor DefaultTableModel
+   * @param value0 TODO
+   * @param value1 TODO
+   */
+  public DefaultTableModel(Vector columnNames, int numRows) 
+  {
+    Vector data = new Vector();
+    int numColumns = 0;
+
+    if (columnNames != null)
+      numColumns = columnNames.size();
+    
+    while (0 < numRows--) 
+      {
+        Vector rowData = new Vector();
+        rowData.setSize(numColumns);
+        data.add(rowData);
+      }
+    setDataVector(data, columnNames);
+  }
+
+  /**
+   * Constructor DefaultTableModel
+   * @param value0 TODO
+   * @param value1 TODO
+   */
+  public DefaultTableModel(Object[] columnNames, int numRows) 
+  {
+    this(convertToVector(columnNames), numRows);
+  }
+  
+  /**
+   * Constructor DefaultTableModel
+   * @param value0 TODO
+   * @param value1 TODO
+   */
+  public DefaultTableModel(Vector data, Vector columnNames) 
+  {
+    setDataVector(data, columnNames);
+  }
+
+  /**
+   * Constructor DefaultTableModel
+   * @param value0 TODO
+   * @param value1 TODO
+   */
+  public DefaultTableModel(Object[][] data, Object[] columnNames) 
+  {
+    this(convertToVector(data), convertToVector(columnNames));
+  }
+
+  /**
+   * getDataVector
+   * @returns Vector
+   */
+  public Vector getDataVector() 
+  {
+    return dataVector;
+  }
+
+  /**
+   * setDataVector
+   * @param value0 TODO
+   * @param value1 TODO
+   */
+  public void setDataVector(Vector data, Vector columnNames) 
+  {
+    dataVector = data;
+    columnIdentifiers = columnNames;
+    for (int r = 0; r < data.size(); r++) {
+      ((Vector) dataVector.get(r)).setSize(columnNames.size());
+    }          
+  }
+
+  /**
+   * setDataVector
+   * @param value0 TODO
+   * @param value1 TODO
+   */
+  public void setDataVector(Object[][] data, Object[] columnNames) 
+  {
+    setDataVector(convertToVector(data), 
+                  convertToVector(columnNames));
+  }
+  
+  /**
+   * newDataAvailable
+   * @param value0 TODO
+   */
+  public void newDataAvailable(TableModelEvent event) 
+  {
+    fireTableChanged(event);
+  }
+
+  /**
+   * newRowsAdded
+   * @param value0 TODO
+   */
+  public void newRowsAdded(TableModelEvent event) 
+  {
+    fireTableChanged(event);
+  }
+
+  /**
+   * rowsRemoved
+   * @param value0 TODO
+   */
+  public void rowsRemoved(TableModelEvent event) 
+  {
+    fireTableChanged(event);
+  }
+
+  /**
+   * setColumnIdentifiers
+   * @param value0 TODO
+   */
+  public void setColumnIdentifiers(Vector columnIdentifiers) 
+  {
+    this.columnIdentifiers = columnIdentifiers;
+    setColumnCount(columnIdentifiers.size());
+  }
+  
+  /**
+   * setColumnIdentifiers
+   * @param value0 TODO
+   */
+  public void setColumnIdentifiers(Object[] columnIdentifiers) 
+  {
+    setColumnIdentifiers(convertToVector(columnIdentifiers));
+  }
+
+  /**
+   * setNumRows
+   * @param value0 TODO
+   */
+  public void setNumRows(int numRows) 
+  {
+    setRowCount(numRows);
+  }
+
+  /**
+   * setRowCount
+   * @param value0 TODO
+   */
+  public void setRowCount(int rowCount) 
+  {
+    dataVector.setSize(rowCount);
+    fireTableDataChanged();
+  }
+
+  /**
+   * setColumnCount
+   * @param value0 TODO
+   */
+  public void setColumnCount(int columnCount) 
+  {
+    for (int i = 0; i < dataVector.size(); ++i)
+      {
+        ((Vector) dataVector.get(i)).setSize(columnCount);
+      }
+    columnIdentifiers.setSize(columnCount);
+    fireTableDataChanged();
+  }
+
+  /**
+   * addColumn
+   * @param value0 TODO
+   */
+  public void addColumn(Object columnName) 
+  {
+    addColumn(columnName, (Object[]) null);
+  }
+
+  /**
+   * addColumn
+   * @param value0 TODO
+   * @param value1 TODO
+   */
+  public void addColumn(Object columnName, Vector columnData) 
+  {
+    addColumn(columnName, columnData == null ? null : columnData.toArray());
+  }
+
+  /**
+   * addColumn
+   * @param value0 TODO
+   * @param value1 TODO
+   */
+  public void addColumn(Object columnName, Object[] columnData) {
+    for (int i = 0; i < dataVector.size(); ++i)
+      {
+        ((Vector) dataVector.get(i)).add(columnData == null ? null : columnData[i]);
+      }
+    columnIdentifiers.add(columnName);
+    fireTableDataChanged();
+  }
+
+  /**
+   * addRow
+   * @param value0 TODO
+   */
+  public void addRow(Vector rowData) {
+    dataVector.add(rowData);
+    fireTableDataChanged();
+  }
+
+  /**
+   * addRow
+   * @param value0 TODO
+   */
+  public void addRow(Object[] rowData) {
+    addRow(convertToVector(rowData));
+  }
+
+  /**
+   * insertRow
+   * @param value0 TODO
+   * @param value1 TODO
+   */
+  public void insertRow(int row, Vector rowData) {
+    dataVector.add(row, rowData);
+    fireTableDataChanged();
+  }
+
+  /**
+   * insertRow
+   * @param value0 TODO
+   * @param value1 TODO
+   */
+  public void insertRow(int row, Object[] rowData) {
+    insertRow(row, convertToVector(rowData));
+  }
+
+  /**
+   * moveRow
+   * @param value0 TODO
+   * @param value1 TODO
+   * @param value2 TODO
+   */
+  public void moveRow(int startIndex, int endIndex, int toIndex) {
+    for (int index = 0; index < (endIndex - startIndex); index++) {
+      Vector vector = (Vector) dataVector.remove(startIndex);
+      dataVector.add(toIndex, vector);
+    }
+    fireTableDataChanged();
+  }
+
+  /**
+   * removeRow
+   * @param value0 TODO
+   */
+  public void removeRow(int row) {
+    dataVector.remove(row);
+    fireTableDataChanged();
+  }
+
+  /**
+   * getRowCount
+   * @returns int
+   */
+  public int getRowCount() {
+    return dataVector.size();
+  }
+
+  /**
+   * getColumnCount
+   * @returns int
+   */
+  public int getColumnCount() {
+    return columnIdentifiers.size();
+  }
+
+  /**
+   * getColumnName
+   * @param value0 TODO
+   * @returns String
+   */
+  public String getColumnName(int column) {
+    // Check for Column
+    if (columnIdentifiers == null || column >= getColumnCount()) {
+      return super.getColumnName(column);
+    }
+          
+    // Return Column name
+    return (String) columnIdentifiers.get(column);          
+  }
+
+  /**
+   * isCellEditable
+   * @param value0 TODO
+   * @param value1 TODO
+   * @returns boolean
+   */
+  public boolean isCellEditable(int row, int column) {
+    return true;
+  }
+
+  /**
+   * getValueAt
+   * @param value0 TODO
+   * @param value1 TODO
+   * @returns Object
+   */
+  public Object getValueAt(int row, int column) {
+    return ((Vector) dataVector.get(row)).get(column);
+  }
+
+  /**
+   * setValueAt
+   * @param value0 TODO
+   * @param value1 TODO
+   * @param value2 TODO
+   */
+  public void setValueAt(Object value, int row, int column) {
+    ((Vector) dataVector.get(row)).set(column, value);
+    fireTableDataChanged();
+  }
+
+  /**
+   * convertToVector
+   * @param value0 TODO
+   * @returns Vector
+   */
+  protected static Vector convertToVector(Object[] data) {
+    if (data == null)
+      return null;
+    Vector vector = new Vector(data.length);
+    for (int i = 0; i < data.length; i++) 
+      vector.add(data[i]);
+    return vector;          
+  }
+  
+  /**
+   * convertToVector
+   * @param value0 TODO
+   * @returns Vector
+   */
+  protected static Vector convertToVector(Object[][] data) {
+    if (data == null)
+      return null;
+    Vector vector = new Vector(data.length);
+    for (int i = 0; i < data.length; i++)
+      vector.add(convertToVector(data[i]));
+    return vector;
+  }
+}
