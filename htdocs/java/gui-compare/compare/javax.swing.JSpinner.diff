--- /home/tromey/gnu/Nightly/classpath/classpath/javax/swing/JSpinner.java	2004-09-13 02:44:30.000000000 -0600
+++ javax/swing/JSpinner.java	2004-09-24 02:23:51.000000000 -0600
@@ -113,26 +113,35 @@
                                                               PropertyChangeListener,
                                                               LayoutManager
   {
+    private JSpinner spinner;
+    
     /**
-     * For compatability with Sun's JDK 1.4.2 rev. 5
-     */
-    private static final long serialVersionUID = -5317788736173368172L;
-
-    /**
-     * Creates a new DefaultEditor object.
+     * Creates a new <code>DefaultEditor</code> object.
      *
-     * @param spinner DOCUMENT ME!
+     * @param spinner the <code>JSpinner</code> associated with this editor
      */
     public DefaultEditor(JSpinner spinner)
     {
+      this.spinner = spinner;
+      
       spinner.addChangeListener(this);
-    } /* TODO */
+    }
+
+    /**
+     * Returns the <code>JSpinner</code> object for this editor.
+     */
+    public JSpinner getSpinner()
+    {
+      return spinner;
+    }
+    
     /**
      * DOCUMENT ME!
      */
     public void commitEdit()
     {
     } /* TODO */
+
     /**
      * DOCUMENT ME!
      *
@@ -152,6 +161,7 @@
     {
       return null;
     } /* TODO */
+    
     /**
      * DOCUMENT ME!
      *
@@ -160,6 +170,7 @@
     public void layoutContainer(Container parent)
     {
     } /* TODO */
+    
     /**
      * DOCUMENT ME!
      *
@@ -171,6 +182,7 @@
     {
       return null;
     } /* TODO */
+    
     /**
      * DOCUMENT ME!
      *
@@ -182,22 +194,25 @@
     {
       return null;
     } /* TODO */
+    
     /**
      * DOCUMENT ME!
      *
-     * @param evt DOCUMENT ME!
+     * @param event DOCUMENT ME!
      */
-    public void propertyChange(PropertyChangeEvent evt)
+    public void propertyChange(PropertyChangeEvent event)
     {
     } /* TODO */
+    
     /**
      * DOCUMENT ME!
      *
-     * @param evt DOCUMENT ME!
+     * @param event DOCUMENT ME!
      */
-    public void stateChanged(ChangeEvent evt)
+    public void stateChanged(ChangeEvent event)
     {
     } /* TODO */
+    
     /* no-ops */
     public void removeLayoutComponent(Component child)
     {
@@ -235,6 +250,16 @@
     }
 
     /**
+     * Creates a new NumberEditor object.
+     *
+     * @param spinner DOCUMENT ME!
+     */
+    public NumberEditor(JSpinner spinner, String decimalFormatPattern)
+    {
+      super(spinner);
+    }
+
+    /**
      * DOCUMENT ME!
      *
      * @return DOCUMENT ME!
@@ -243,6 +268,11 @@
     {
       return null;
     }
+
+    public SpinnerNumberModel getModel()
+    {
+      return (SpinnerNumberModel) getSpinner().getModel();
+    }
   }
 
   /** DOCUMENT ME! */
@@ -347,6 +377,29 @@
   }
 
   /**
+   * Sets a new underlying model.
+   *
+   * @param newModel the new model to set
+   *
+   * @exception IllegalArgumentException if newModel is <code>null</code>
+   */
+  public void setModel(SpinnerModel newModel)
+  {
+    if (newModel == null)
+      throw new IllegalArgumentException();
+    
+    if (model == newModel)
+      return;
+
+    SpinnerModel oldModel = model;
+    model = newModel;
+    firePropertyChange("model", oldModel, newModel);
+
+    if (editor == null)
+      setEditor(createEditor(model));
+  }
+
+  /**
    * Gets the next value without changing the current value.
    *
    * @return the next value
