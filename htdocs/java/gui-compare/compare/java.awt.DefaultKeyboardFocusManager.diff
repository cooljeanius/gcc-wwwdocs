--- /home/tromey/gnu/Nightly/classpath/classpath/java/awt/DefaultKeyboardFocusManager.java	2004-07-23 02:23:50.000000000 -0600
+++ java/awt/DefaultKeyboardFocusManager.java	2004-07-31 02:23:19.000000000 -0600
@@ -197,7 +197,7 @@
               setGlobalPermanentFocusOwner (null);
           }
 
-          target.dispatchEvent (e);
+        target.dispatchEvent (e);
 
         return true;
       }
@@ -219,7 +219,7 @@
         Component focusOwner = getGlobalPermanentFocusOwner ();
 
         if (focusOwner != null)
-        processKeyEvent (focusOwner, (KeyEvent) e);
+          processKeyEvent (focusOwner, (KeyEvent) e);
 
         if (e.isConsumed ())
           return true;
@@ -258,7 +258,7 @@
     Component focusOwner = getGlobalPermanentFocusOwner ();
 
     if (focusOwner != null)
-    focusOwner.dispatchEvent (e);
+      focusOwner.dispatchEvent (e);
 
     // Loop through all registered KeyEventPostProcessors, giving
     // each a chance to process this event.
@@ -284,10 +284,10 @@
   {
     // Check if this event represents a menu shortcut.
 
-    // MenuShortcuts are activated by Ctrl- KeyEvents.
-    int modifiers = e.getModifiers ();
-    if ((modifiers & KeyEvent.CTRL_MASK) != 0
-        || (modifiers & KeyEvent.CTRL_DOWN_MASK) != 0)
+    // MenuShortcuts are activated by Ctrl- KeyEvents, only on KEY_PRESSED.
+    int modifiers = e.getModifiersEx ();
+    if (e.getID() == KeyEvent.KEY_PRESSED
+        && (modifiers & KeyEvent.CTRL_DOWN_MASK) != 0)
       {
         Window focusedWindow = getGlobalFocusedWindow ();
         if (focusedWindow instanceof Frame)
@@ -313,15 +313,19 @@
 
                         if (shortcut != null)
                           {
-                            // Dispatch a new ActionEvent if this is a
-                            // Shift- KeyEvent and the shortcut requires
-                            // the Shift modifier, or if the shortcut
-                            // doesn't require the Shift modifier.
-                            if ((shortcut.usesShiftModifier ()
-                                 && ((modifiers & KeyEvent.SHIFT_MASK) != 0
-                                     || (modifiers & KeyEvent.SHIFT_DOWN_MASK) != 0)
-                                 || !shortcut.usesShiftModifier ())
-                                && shortcut.getKey () == e.getKeyCode ())
+                            // Dispatch a new ActionEvent if:
+                            //
+                            //     a) this is a Shift- KeyEvent, and the
+                            //        shortcut requires the Shift modifier
+                            //
+                            // or, b) this is not a Shift- KeyEvent, and the
+                            //        shortcut does not require the Shift
+                            //        modifier.
+                            if (shortcut.getKey () == e.getKeyCode ()
+                                && ((shortcut.usesShiftModifier ()
+                                     && (modifiers & KeyEvent.SHIFT_DOWN_MASK) != 0)
+                                    || (! shortcut.usesShiftModifier ()
+                                        && (modifiers & KeyEvent.SHIFT_DOWN_MASK) == 0)))
                               {
                                 item.dispatchEvent (new ActionEvent (item,
                                                                      ActionEvent.ACTION_PERFORMED,
@@ -347,7 +351,7 @@
     // KEY_PRESSED TAB is a focus traversal keystroke, we also need to
     // consume KEY_RELEASED and KEY_TYPED TAB key events).
     AWTKeyStroke oppositeKeystroke = AWTKeyStroke.getAWTKeyStroke (e.getKeyCode (),
-                                                                   e.getModifiers (),
+                                                                   e.getModifiersEx (),
                                                                    !(e.id == KeyEvent.KEY_RELEASED));
 
     Set forwardKeystrokes = comp.getFocusTraversalKeys (KeyboardFocusManager.FORWARD_TRAVERSAL_KEYS);
