#! /bin/sh

if test "$1" = "-cvs"; then
   cvsadd='cvs add'
   cvsrm='cvs rm'
   shift
else
   cvsadd=:
   cvsrm=:
fi

if test "$1" = "-gui"; then
   gui=yes
   GUI="GUI Classes only"
   shift
else
   gui=no
   GUI="No GUI Classes"
fi

LIBGCJ=$1
CLASSPATH=$2
shift
shift

OUTPUT=$1
if test -z "$OUTPUT"; then
   # Strip the file name and the `scripts' directory component.
   OUTPUT="`echo $0 | sed -e 's,/[^/]*/[^/]*$,,'`"
fi

EXPECTEDDIR="$OUTPUT/expected"

if test -z "$LIBGCJ" || test -z "$CLASSPATH" || test -z "$OUTPUT"; then
   echo "usage: gen-classpath-compare [-cvs] [-gui] libgcj-path classpath-path [output-path]" 1>&2
   exit 1
fi

outfile="$OUTPUT/libgcj-classpath-compare.html"
tmp=/tmp/tmp.$$

mkdir -p "$OUTPUT/compare"
preFiles="`cd $OUTPUT/compare && echo *.diff`"

rm -f $OUTPUT/compare/*.diff

echo "<html> <head> <title>libgcj -vs- Classpath ($GUI)</title>" > $outfile
echo '<link rel="stylesheet" type="text/css" href="http://gcc.gnu.org/gcc.css"></link>' >> $outfile
echo "</head> <body> <h1>libgcj -vs- Classpath ($GUI)</h1>" >> $outfile

cat >> $outfile << 'END'
<p>This page compares the "current" cvs libgcj against the "current"
cvs Classpath.  It was generated using the <code>gen-classpath-compare</code>
script (available in gcc cvs repository in <code>wwwdocs/bin/</code>) on
END

echo "`date '+%Y-%m-%d.'`</p>" >> $outfile

if test "$gui" = "yes"; then
  echo "<p>Only lists gui files (AWT, Swing, and gtk-peer)</p>" >> $outfile
else
  echo "<p>Only lists non-gui files (NO AWT, Swing, or gtk-peer)</p>" >> $outfile
fi

cat >> $outfile << 'END'
<p>This table intentionally omits certain classes which are not of
interest.  If the third column shows a "Diff" link, then that means
the script believes that the class has been merged, but a difference
has been reintroduced.  <em>Note that such differences cannot be
automatically merged.</em> Any merging must be done manually; some
differences are currently required.</p>

<table width="100%" border="1" cellspacing="0" cellpadding="1">
<tr><th align="left">Class</th> <th>Merge Status</th> </tr>
END

No='<td>No</td>'
Yes='<td>Yes</td>'
VmSpec='<td class="VM-specific">VM-specific</td>'
GCJSpec='<td class="GCJ-specific">GCJ-specific</td>'
GCJOnly='<td class="libgcj-only">GCJ-only</td>'
ClasspathOnly='<td class="classpath-only">Classpath-only</td>'
Empty='<td>&nbsp;</td>'

GCJSpecClasses="\
gnu.java.net.protocol.core.Connection \
gnu.java.net.protocol.core.CoreInputStream \
gnu.java.net.protocol.core.Handler \
gnu.java.net.protocol.gcjlib.Connection \
gnu.java.net.protocol.gcjlib.Handler \
java.lang.EcosProcess \
java.lang.PosixProcess \
java.lang.Win32Process \
"

# Note: for now, we omit much of gnu.*, as it differs too much.
WantedFiles="java|javax|gnu/java|gnu/javax|gnu/regexp|javax"
DoNotCompare="gnu/java/io/decode|gnu/java/io/encode|gnu/javax/swing/plaf/gtk"
GuiFiles="java/awt|javax/swing|gnu/java/awt|gnu/javax/swing|jni/gtk-peer"
if test "$gui" = "no"; then
  WantedRegexp="^($WantedFiles)/"
  ExcludedRegExp="^($DoNotCompare|$GuiFiles)/"
else
  WantedRegexp="^($GuiFiles)/"
  ExcludedRegExp="^($DoNotCompare)/"
fi

(cd $LIBGCJ; find . -name '*.java' -print;
cd $CLASSPATH; find . -name '*.java' -print;
cd $CLASSPATH/external/jaxp/source; find . -name '*.java' -print
cd $CLASSPATH/native; find jni/gtk-peer -name '*.c' -print) |
sort -u | sed -e 's,^\./,,' |
grep -E "$WantedRegexp" |
grep -E -v "$ExcludedRegExp" |
(cd $LIBGCJ
while read f; do
   class=`echo $f | sed -e 's,/,.,g' -e 's,\.java$,,'`

   Merge=$No
   gcj=$No
   if test -f $f; then
      gcj=$Yes
      case $class in
       gnu.java.locale.*)
	  Merge="$Yes" ;;
       *)
	  if fgrep -s -q Classpath $f; then
	     Merge="$Yes"
	  fi
	  ;;
      esac
   fi
   clp=$No

   cpfile="$CLASSPATH/$f"
   test -f "$cpfile" || cpfile="$CLASSPATH/external/jaxp/source/$f"
   test -f "$cpfile" || cpfile="$CLASSPATH/native/$f"

   if test -f "$cpfile"; then
      clp=$Yes

      if test "$Merge" = "$Yes"; then
	 diff -u "$cpfile" $f > $tmp
	 if test -s $tmp; then
	    cp $tmp "$OUTPUT/compare/$class.diff"
            if test -f $EXPECTEDDIR/$class.diff ; then
	      # Ignore header lines.
              diff -q -I'^[+-][+-][+-] ' $OUTPUT/compare/$class.diff $EXPECTEDDIR/$class.diff > /dev/null
	      if test "$?" = "1" ; then
	        Merge="<td class=\"merged-unexpected-diff\"><a href=\"compare/$class.diff\">Expected diff changed</a></td>"
	        Style="merged-unexpected-diff"
              else
	        Merge="<td class=\"merged-expected-diff\"><a href=\"compare/$class.diff\">Expected diff</a></td>"
	        Style="merged-expected-diff"
	      fi
	    else
	      Merge="<td class=\"needsmerge\"><a href=\"compare/$class.diff\">Diff</a></td>"
	      Style="needsmerge"
	    fi
	 fi
	 rm -f $tmp
      fi
   elif test -f "$CLASSPATH/vm/reference/$f"; then
      Style="VM-specific"
      clp="$VmSpec"
      Merge="$VmSpec"
   fi

   
   echo "$GCJSpecClasses" | grep -q "$class"
   if test "$?" = "0"
   then
      Style="GCJ-specific"
      clp="$GCJSpec"
      Merge="$GCJSpec"
   fi

   if test "$gcj" = "$Yes" && test "$clp" = "$No"
   then
      Style="libgcj-only"
      Merge="$GCJOnly"
   fi

   if test "$gcj" = "$No" && test "$clp" = "$Yes"
   then
      Style="classpath-only"
      Merge="$ClasspathOnly"
   fi

   if test "$gcj" = "$Yes" && test "$clp" = "$Yes" && test "$Merge" = "$Yes"
   then
      : print nothing
   else
      if test -z "$(echo $f | grep ^jni/)"; then
        Name=$class
      else
        Name=$f
      fi
      echo "<tr> <td class=\"$Style\">$Name</td> $Merge </tr>"
   fi
done
) >> $outfile

cat >> $outfile << 'END'
</table>
</body>
</html>
END

cd "$OUTPUT/compare"

rmFiles=
for file in $preFiles; do
   if ! test -f $file; then
      rmFiles="$rmFiles $file"
   fi
done

if test -n "$rmFiles"; then
   $cvsrm $rmFiles
fi
$cvsadd *.diff
